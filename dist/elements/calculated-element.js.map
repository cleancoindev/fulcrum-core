{"version":3,"sources":["../../src/elements/calculated-element.js"],"names":["CalculatedElement","parent","attributes","expression","display","findCalculatedElementRoot","form","container","type","isSectionElement","isRepeatableElement","findCalculatedElementsForContainer","elements","element","isCalculatedElement","push","concat"],"mappings":";;;;AAAA;;;;AACA;;;;;;;;;;;;;;IAEqBA,iB;;;AACnB,6BAAYC,MAAZ,EAAoBC,UAApB,EAAgC;AAAA;;AAAA,iDAC9B,2BAAMD,MAAN,EAAcC,UAAd,CAD8B;;AAG9B,UAAKC,UAAL,GAAkBD,WAAWC,UAA7B;AACA,UAAKC,OAAL,GAAe,6BAAmBF,WAAWE,OAA9B,CAAf;AAJ8B;AAK/B;;oBAEMC,yB,sCAA0BC,I,EAAMC,S,EAAW;AAChD,QAAIA,UAAUC,IAAV,IAAkB,IAAtB,EAA4B;AAC1B,UAAID,UAAUE,gBAAd,EAAgC;AAC9B,eAAOT,kBAAkBK,yBAAlB,CAA4CC,IAA5C,EAAkDC,UAAUN,MAA5D,CAAP;AACD,OAFD,MAEO,IAAIM,UAAUG,mBAAd,EAAmC;AACxC,eAAOH,SAAP;AACD;AACF;AACD,WAAOD,IAAP;AACD,G;;oBAEMK,kC,+CAAmCJ,S,EAAW;AACnD,QAAIK,WAAW,EAAf;;AAEA,yBAAsBL,UAAUK,QAAhC,kHAA0C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,UAA/BC,OAA+B;;AACxC,UAAIA,QAAQC,mBAAZ,EAAiC;AAC/BF,iBAASG,IAAT,CAAcF,OAAd;AACD,OAFD,MAEO,IAAIA,QAAQJ,gBAAZ,EAA8B;AACnCG,mBAAWA,SAASI,MAAT,CAAgBhB,kBAAkBW,kCAAlB,CAAqDE,OAArD,CAAhB,CAAX;AACD;AACF;;AAED,WAAOD,QAAP;AACD,G;;;;;kBA/BkBZ,iB","file":"calculated-element.js","sourcesContent":["import TextualElement from './textual-element';\nimport DisplayOptions from './display-options';\n\nexport default class CalculatedElement extends TextualElement {\n  constructor(parent, attributes) {\n    super(parent, attributes);\n\n    this.expression = attributes.expression;\n    this.display = new DisplayOptions(attributes.display);\n  }\n\n  static findCalculatedElementRoot(form, container) {\n    if (container.type != null) {\n      if (container.isSectionElement) {\n        return CalculatedElement.findCalculatedElementRoot(form, container.parent);\n      } else if (container.isRepeatableElement) {\n        return container;\n      }\n    }\n    return form;\n  }\n\n  static findCalculatedElementsForContainer(container) {\n    let elements = [];\n\n    for (const element of container.elements) {\n      if (element.isCalculatedElement) {\n        elements.push(element);\n      } else if (element.isSectionElement) {\n        elements = elements.concat(CalculatedElement.findCalculatedElementsForContainer(element));\n      }\n    }\n\n    return elements;\n  }\n}\n"]}