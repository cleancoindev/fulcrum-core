{"version":3,"sources":["../../src/elements/child-elements.js"],"names":[],"mappings":";;;;;;;;;;;;AAEA,IAAI,iBAAiB,IAAjB;;AAEW,MAAM,aAAN,4BAAkC;AAC/C,sBAAoB,QAApB,EAA8B;AAC5B,SAAK,QAAL,GAAgB,EAAhB,CAD4B;;AAG5B,SAAK,IAAI,OAAJ,IAAe,QAApB,EAA8B;;AAE5B,uBAAiB,kBAAkB,QAAQ,mBAAR,EAA6B,OAA7B,CAFP;AAG5B,WAAK,QAAL,CAAc,IAAd,CAAmB,eAAe,MAAf,CAAsB,IAAtB,EAA4B,OAA5B,CAAnB,EAH4B;KAA9B;GAHF;;AAUA,MAAI,WAAJ,GAAkB;AAChB,WAAO,KAAK,gBAAL,CAAsB,KAAK,QAAL,CAA7B,CADgB;GAAlB;;AAIA,MAAI,aAAJ,GAAoB;AAClB,QAAI,KAAK,cAAL,IAAuB,IAAvB,EAA6B;AAC/B,WAAK,cAAL,GAAsB,KAAK,2BAAL,CAAiC,KAAK,QAAL,EAAe,KAAhD,CAAtB,CAD+B;KAAjC;;AAIA,WAAO,KAAK,cAAL,CALW;GAApB;;AAQA,MAAI,kBAAJ,GAAyB;AACvB,QAAI,KAAK,mBAAL,IAA4B,IAA5B,EAAkC;AACpC,WAAK,mBAAL,GAA2B,KAAK,2BAAL,CAAiC,KAAK,QAAL,EAAe,UAAhD,CAA3B,CADoC;KAAtC;;AAIA,WAAO,KAAK,mBAAL,CALgB;GAAzB;;AAQA,iBAAe,IAAf,EAAqB;AACnB,UAAM,SAAS,EAAT,CADa;;AAGnB,SAAK,MAAM,OAAN,IAAiB,KAAK,WAAL,EAAkB;AACtC,UAAI,QAAQ,IAAR,KAAiB,IAAjB,EAAuB;AACzB,eAAO,IAAP,CAAY,OAAZ,EADyB;OAA3B;KADF;;AAMA,WAAO,MAAP,CATmB;GAArB;;AAYA,mBAAiB,QAAjB,EAA2B;AACzB,QAAI,OAAO,EAAP,CADqB;;AAGzB,SAAK,IAAI,OAAJ,IAAe,QAApB,EAA8B;AAC5B,WAAK,IAAL,CAAU,OAAV,EAD4B;;AAG5B,UAAI,QAAQ,QAAR,EAAkB;AACpB,eAAO,KAAK,MAAL,CAAY,KAAK,gBAAL,CAAsB,QAAQ,QAAR,CAAlC,CAAP,CADoB;OAAtB;KAHF;;AAQA,WAAO,IAAP,CAXyB;GAA3B;;AAcA,8BAA4B,QAA5B,EAAsC,IAAtC,EAA4C;AAC1C,UAAM,OAAO,EAAP,CADoC;;AAG1C,SAAK,IAAI,OAAJ,IAAe,QAApB,EAA8B;AAC5B,WAAK,QAAQ,IAAR,CAAL,IAAsB,OAAtB,CAD4B;;AAG5B,UAAI,QAAQ,QAAR,EAAkB;AACpB,cAAM,WAAW,KAAK,2BAAL,CAAiC,QAAQ,QAAR,EAAkB,IAAnD,CAAX,CADc;;AAGpB,aAAK,IAAI,GAAJ,IAAW,OAAO,IAAP,CAAY,QAAZ,CAAhB,EAAuC;AACrC,eAAK,GAAL,IAAY,SAAS,GAAT,CAAZ,CADqC;SAAvC;OAHF;KAHF;;AAYA,WAAO,IAAP,CAf0C;GAA5C;CAzDa;kBAAM","file":"child-elements.js","sourcesContent":["import Mixin from 'mixmatch';\n\nlet ElementFactory = null;\n\nexport default class ChildElements extends Mixin {\n  createChildElements(elements) {\n    this.elements = [];\n\n    for (let element of elements) {\n      // hack for circular dependency, not ideal\n      ElementFactory = ElementFactory || require('./element-factory').default;\n      this.elements.push(ElementFactory.create(this, element));\n    }\n  }\n\n  get allElements() {\n    return this._flattenElements(this.elements);\n  }\n\n  get elementsByKey() {\n    if (this._elementsByKey == null) {\n      this._elementsByKey = this._flattenElementsByAttribute(this.elements, 'key');\n    }\n\n    return this._elementsByKey;\n  }\n\n  get elementsByDataName() {\n    if (this._elementsByDataName == null) {\n      this._elementsByDataName = this._flattenElementsByAttribute(this.elements, 'dataName');\n    }\n\n    return this._elementsByDataName;\n  }\n\n  elementsOfType(type) {\n    const result = [];\n\n    for (const element of this.allElements) {\n      if (element.type === type) {\n        result.push(element);\n      }\n    }\n\n    return result;\n  }\n\n  _flattenElements(elements) {\n    let flat = [];\n\n    for (let element of elements) {\n      flat.push(element);\n\n      if (element.elements) {\n        flat = flat.concat(this._flattenElements(element.elements));\n      }\n    }\n\n    return flat;\n  }\n\n  _flattenElementsByAttribute(elements, attr) {\n    const flat = {};\n\n    for (let element of elements) {\n      flat[element[attr]] = element;\n\n      if (element.elements) {\n        const children = this._flattenElementsByAttribute(element.elements, attr);\n\n        for (let key of Object.keys(children)) {\n          flat[key] = children[key];\n        }\n      }\n    }\n\n    return flat;\n  }\n}\n"]}