{"version":3,"sources":["../../src/elements/child-elements.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAEA,IAAI,iBAAiB,IAAjB;;IAEiB;;;;;;;;;;;wCACC,UAAU;AAC5B,WAAK,QAAL,GAAgB,EAAhB,CAD4B;;;;;;;AAG5B,6BAAoB,kCAApB,oGAA8B;cAArB,sBAAqB;;;AAE5B,2BAAiB,kBAAkB,QAAQ,mBAAR,EAA6B,OAA7B,CAFP;AAG5B,eAAK,QAAL,CAAc,IAAd,CAAmB,eAAe,MAAf,CAAsB,IAAtB,EAA4B,OAA5B,CAAnB,EAH4B;SAA9B;;;;;;;;;;;;;;OAH4B;;;;mCA8Bf,MAAM;AACnB,UAAM,SAAS,EAAT,CADa;;;;;;;AAGnB,8BAAsB,KAAK,WAAL,2BAAtB,wGAAwC;cAA7B,uBAA6B;;AACtC,cAAI,QAAQ,IAAR,KAAiB,IAAjB,EAAuB;AACzB,mBAAO,IAAP,CAAY,OAAZ,EADyB;WAA3B;SADF;;;;;;;;;;;;;;OAHmB;;AASnB,aAAO,MAAP,CATmB;;;;qCAYJ,UAAU;AACzB,UAAI,OAAO,EAAP,CADqB;;;;;;;AAGzB,8BAAoB,mCAApB,wGAA8B;cAArB,uBAAqB;;AAC5B,eAAK,IAAL,CAAU,OAAV,EAD4B;;AAG5B,cAAI,QAAQ,QAAR,EAAkB;AACpB,mBAAO,KAAK,MAAL,CAAY,KAAK,gBAAL,CAAsB,QAAQ,QAAR,CAAlC,CAAP,CADoB;WAAtB;SAHF;;;;;;;;;;;;;;OAHyB;;AAWzB,aAAO,IAAP,CAXyB;;;;gDAcC,UAAU,MAAM;AAC1C,UAAM,OAAO,EAAP,CADoC;;;;;;;AAG1C,8BAAoB,mCAApB,wGAA8B;cAArB,uBAAqB;;AAC5B,eAAK,QAAQ,IAAR,CAAL,IAAsB,OAAtB,CAD4B;;AAG5B,cAAI,QAAQ,QAAR,EAAkB;AACpB,gBAAM,WAAW,KAAK,2BAAL,CAAiC,QAAQ,QAAR,EAAkB,IAAnD,CAAX,CADc;;;;;;;AAGpB,oCAAgB,OAAO,IAAP,CAAY,QAAZ,4BAAhB,wGAAuC;oBAA9B,mBAA8B;;AACrC,qBAAK,GAAL,IAAY,SAAS,GAAT,CAAZ,CADqC;eAAvC;;;;;;;;;;;;;;aAHoB;WAAtB;SAHF;;;;;;;;;;;;;;OAH0C;;AAe1C,aAAO,IAAP,CAf0C;;;;wBA9C1B;AAChB,aAAO,KAAK,gBAAL,CAAsB,KAAK,QAAL,CAA7B,CADgB;;;;wBAIE;AAClB,UAAI,KAAK,cAAL,IAAuB,IAAvB,EAA6B;AAC/B,aAAK,cAAL,GAAsB,KAAK,2BAAL,CAAiC,KAAK,QAAL,EAAe,KAAhD,CAAtB,CAD+B;OAAjC;;AAIA,aAAO,KAAK,cAAL,CALW;;;;wBAQK;AACvB,UAAI,KAAK,mBAAL,IAA4B,IAA5B,EAAkC;AACpC,aAAK,mBAAL,GAA2B,KAAK,2BAAL,CAAiC,KAAK,QAAL,EAAe,UAAhD,CAA3B,CADoC;OAAtC;;AAIA,aAAO,KAAK,mBAAL,CALgB;;;;SAvBN","file":"child-elements.js","sourcesContent":["import Mixin from 'mixmatch';\n\nlet ElementFactory = null;\n\nexport default class ChildElements extends Mixin {\n  createChildElements(elements) {\n    this.elements = [];\n\n    for (let element of elements) {\n      // hack for circular dependency, not ideal\n      ElementFactory = ElementFactory || require('./element-factory').default;\n      this.elements.push(ElementFactory.create(this, element));\n    }\n  }\n\n  get allElements() {\n    return this._flattenElements(this.elements);\n  }\n\n  get elementsByKey() {\n    if (this._elementsByKey == null) {\n      this._elementsByKey = this._flattenElementsByAttribute(this.elements, 'key');\n    }\n\n    return this._elementsByKey;\n  }\n\n  get elementsByDataName() {\n    if (this._elementsByDataName == null) {\n      this._elementsByDataName = this._flattenElementsByAttribute(this.elements, 'dataName');\n    }\n\n    return this._elementsByDataName;\n  }\n\n  elementsOfType(type) {\n    const result = [];\n\n    for (const element of this.allElements) {\n      if (element.type === type) {\n        result.push(element);\n      }\n    }\n\n    return result;\n  }\n\n  _flattenElements(elements) {\n    let flat = [];\n\n    for (let element of elements) {\n      flat.push(element);\n\n      if (element.elements) {\n        flat = flat.concat(this._flattenElements(element.elements));\n      }\n    }\n\n    return flat;\n  }\n\n  _flattenElementsByAttribute(elements, attr) {\n    const flat = {};\n\n    for (let element of elements) {\n      flat[element[attr]] = element;\n\n      if (element.elements) {\n        const children = this._flattenElementsByAttribute(element.elements, attr);\n\n        for (let key of Object.keys(children)) {\n          flat[key] = children[key];\n        }\n      }\n    }\n\n    return flat;\n  }\n}\n"]}