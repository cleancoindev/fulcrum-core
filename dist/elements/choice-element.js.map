{"version":3,"sources":["../../src/elements/choice-element.js"],"names":[],"mappings":"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","file":"choice-element.js","sourcesContent":["import Element from './element';\nimport ElementFactory from './element-factory';\nimport Choice from './choice';\n\nexport default class ChoiceElement extends Element {\n  constructor(parent, attributes) {\n    super(parent, attributes);\n\n    this.multiple = !!attributes.multiple;\n    this.allowOther = !!attributes.allow_other;\n    this.choiceFilter = null;\n    this.overrideChoices = null;\n\n    this._choiceListID = attributes.choice_list_id;\n    this._choices = [];\n\n    // TODO(zhm) the loading needs to be re-worked to support choice lists\n    if (attributes.choices) {\n      for (let choice of this.attributes.choices) {\n        this._choices.push(new Choice(choice));\n      }\n    }\n  }\n\n  async load() {\n    // TODO(zhm) once babel gets fixed this can be removed\n    // https://phabricator.babeljs.io/T2765\n\n    if (this._choiceListID) {\n      this.choiceList = await ElementFactory.getProvider().getChoiceList(this._choiceListID);\n      this._choices = this.choiceList.choices.slice();\n    } else {\n      for (let choice of this.attributes.choices) {\n        this._choices.push(new Choice(choice));\n      }\n    }\n  }\n\n  get isLengthValidationSupported() {\n    return this.multiple;\n  }\n\n  get choices() {\n    return this._overrideChoices ? this._overrideChoices : this.filteredChoices;\n  }\n\n  get filteredChoices() {\n    const items = this._choices;\n\n    if (!this.choiceFilter) {\n      return items;\n    }\n\n    const filteredItems = [];\n\n    for (let item of items) {\n      for (let filter of this.choiceFilter) {\n        if (item.value.toLowerCase().indexOf(filter.toLowerCase()) !== -1) {\n          filteredItems.push(item);\n        }\n      }\n    }\n\n    return filteredItems;\n  }\n\n  get overrideChoices() {\n    return this._overrideChoices;\n  }\n\n  set overrideChoices(overrideChoices) {\n    this._choicesByValue = null;\n\n    if (!overrideChoices || overrideChoices.length < 1) {\n      this._overrideChoices = null;\n      return;\n    }\n\n    const choices = [];\n\n    for (let choiceAttributes of overrideChoices) {\n      const choice = new Choice(choiceAttributes);\n\n      choices.push(choice);\n    }\n\n    this._overrideChoices = choices;\n  }\n\n  choiceByValue(value) {\n    if (!this._choicesByValue) {\n      this._choicesByValue = {};\n\n      for (let choice of this.choices) {\n        this._choicesByValue[choice.value] = choice;\n      }\n    }\n\n    return this._choicesByValue[value];\n  }\n}\n"]}