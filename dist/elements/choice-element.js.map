{"version":3,"sources":["../../src/elements/choice-element.js"],"names":["ChoiceElement","parent","attributes","multiple","allowOther","allow_other","_choiceFilter","_overrideChoices","_choiceListID","choice_list_id","_choices","choices","choice","push","load","dataSource","callback","_choicesByValue","getChoiceList","err","choiceList","slice","setImmediate","resetOverrides","choiceByValue","value","filteredChoices","choiceFilter","items","filteredItems","item","filter","toLowerCase","indexOf","overrideChoices","length","choiceAttributes","Object","assign","getOwnPropertyDescriptor","prototype","get","call"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;;;;;;;;;IAEqBA,a;;;AACnB,yBAAYC,MAAZ,EAAoBC,UAApB,EAAgC;AAAA;;AAAA,iDAC9B,oBAAMD,MAAN,EAAcC,UAAd,CAD8B;;AAG9B,UAAKC,QAAL,GAAgB,CAAC,CAACD,WAAWC,QAA7B;AACA,UAAKC,UAAL,GAAkB,CAAC,CAACF,WAAWG,WAA/B;;AAEA,UAAKC,aAAL,GAAqB,IAArB;AACA,UAAKC,gBAAL,GAAwB,IAAxB;;AAEA,UAAKC,aAAL,GAAqBN,WAAWO,cAAhC;AACA,UAAKC,QAAL,GAAgB,EAAhB;;AAEA;AACA,QAAIR,WAAWS,OAAf,EAAwB;AACtB,2BAAqBT,WAAWS,OAAhC,kHAAyC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAA9BC,MAA8B;;AACvC,cAAKF,QAAL,CAAcG,IAAd,CAAmB,qBAAWD,MAAX,CAAnB;AACD;AACF;AAjB6B;AAkB/B;;0BAEDE,I,iBAAKC,U,EAAYC,Q,EAAU;AAAA;;AACzB,SAAKC,eAAL,GAAuB,IAAvB;;AAEA,QAAI,KAAKT,aAAT,EAAwB;AACtBO,iBAAWG,aAAX,CAAyB,KAAKV,aAA9B,EAA6C,UAACW,GAAD,EAAMC,UAAN,EAAqB;AAChE;AACA;AACA;AACA,YAAID,GAAJ,EAAS;AACP,iBAAOH,SAASG,GAAT,CAAP;AACD;;AAED,eAAKC,UAAL,GAAkBA,UAAlB;AACA,eAAKV,QAAL,GAAgB,OAAKU,UAAL,CAAgBT,OAAhB,CAAwBU,KAAxB,EAAhB;;AAEA,eAAOL,UAAP;AACD,OAZD;AAaD,KAdD,MAcO;AACLM,mBAAaN,QAAb;AACD;AACF,G;;0BAoEDO,c,6BAAiB;AACf,uBAAMA,cAAN;;AAEA,SAAKjB,aAAL,GAAqB,IAArB;AACA,SAAKC,gBAAL,GAAwB,IAAxB;AACD,G;;0BAEDiB,a,0BAAcC,K,EAAO;AACnB,QAAI,CAAC,KAAKR,eAAV,EAA2B;AACzB,WAAKA,eAAL,GAAuB,EAAvB;;AAEA,4BAAqB,KAAKN,OAA1B,yHAAmC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAAxBC,MAAwB;;AACjC,aAAKK,eAAL,CAAqBL,OAAOa,KAA5B,IAAqCb,MAArC;AACD;AACF;;AAED,WAAO,KAAKK,eAAL,CAAqBQ,KAArB,CAAP;AACD,G;;;;wBAnFiC;AAChC,aAAO,KAAKtB,QAAZ;AACD;;;wBAEa;AACZ,aAAO,KAAKI,gBAAL,GAAwB,KAAKA,gBAA7B,GAAgD,KAAKmB,eAA5D;AACD;;;wBAEkB;AACjB,aAAO,KAAKpB,aAAZ;AACD,K;sBAEgBqB,Y,EAAc;AAC7B,WAAKrB,aAAL,GAAqBqB,YAArB;AACD;;;wBAEqB;AACpB,UAAMC,QAAQ,KAAKlB,QAAnB;;AAEA,UAAI,CAAC,KAAKiB,YAAV,EAAwB;AACtB,eAAOC,KAAP;AACD;;AAED,UAAMC,gBAAgB,EAAtB;;AAEA,4BAAmBD,KAAnB,yHAA0B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAAfE,IAAe;;AACxB,8BAAqB,KAAKH,YAA1B,yHAAwC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,cAA7BI,MAA6B;;AACtC,cAAID,KAAKL,KAAL,CAAWO,WAAX,GAAyBC,OAAzB,CAAiCF,OAAOC,WAAP,EAAjC,MAA2D,CAAC,CAAhE,EAAmE;AACjEH,0BAAchB,IAAd,CAAmBiB,IAAnB;AACD;AACF;AACF;;AAED,aAAOD,aAAP;AACD;;;wBAEqB;AACpB,aAAO,KAAKtB,gBAAZ;AACD,K;sBAEmB2B,e,EAAiB;AACnC,WAAKjB,eAAL,GAAuB,IAAvB;;AAEA,UAAI,CAACiB,eAAD,IAAoBA,gBAAgBC,MAAhB,GAAyB,CAAjD,EAAoD;AAClD,aAAK5B,gBAAL,GAAwB,IAAxB;AACA;AACD;;AAED,UAAMI,UAAU,EAAhB;;AAEA,4BAA+BuB,eAA/B,yHAAgD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAArCE,gBAAqC;;AAC9C,YAAMxB,SAAS,qBAAWwB,gBAAX,CAAf;;AAEAzB,gBAAQE,IAAR,CAAaD,MAAb;AACD;;AAED,WAAKL,gBAAL,GAAwBI,OAAxB;AACD;;;wBAEoB;AACnB,aAAO0B,OAAOC,MAAP,CAAcD,OAAOE,wBAAP,CAAgC,kBAAQC,SAAxC,EAAmD,gBAAnD,EAAqEC,GAArE,CAAyEC,IAAzE,CAA8E,IAA9E,CAAd,EAAmG;AACxGf,sBAAc,KAAKrB,aADqF;AAExG4B,yBAAiB,KAAK3B;AAFkF,OAAnG,CAAP;AAID;;;;;;kBA3GkBP,a","file":"choice-element.js","sourcesContent":["import Element from './element';\nimport Choice from './choice';\n\nexport default class ChoiceElement extends Element {\n  constructor(parent, attributes) {\n    super(parent, attributes);\n\n    this.multiple = !!attributes.multiple;\n    this.allowOther = !!attributes.allow_other;\n\n    this._choiceFilter = null;\n    this._overrideChoices = null;\n\n    this._choiceListID = attributes.choice_list_id;\n    this._choices = [];\n\n    // TODO(zhm) the loading needs to be re-worked to support choice lists\n    if (attributes.choices) {\n      for (const choice of attributes.choices) {\n        this._choices.push(new Choice(choice));\n      }\n    }\n  }\n\n  load(dataSource, callback) {\n    this._choicesByValue = null;\n\n    if (this._choiceListID) {\n      dataSource.getChoiceList(this._choiceListID, (err, choiceList) => {\n        // TODO(zhm) Some forms have orphaned choice lists (life sucks)\n        // Maybe we should add a parameter to the load() method to throw\n        // errors.\n        if (err) {\n          return callback(err);\n        }\n\n        this.choiceList = choiceList;\n        this._choices = this.choiceList.choices.slice();\n\n        return callback();\n      });\n    } else {\n      setImmediate(callback);\n    }\n  }\n\n  get isLengthValidationSupported() {\n    return this.multiple;\n  }\n\n  get choices() {\n    return this._overrideChoices ? this._overrideChoices : this.filteredChoices;\n  }\n\n  get choiceFilter() {\n    return this._choiceFilter;\n  }\n\n  set choiceFilter(choiceFilter) {\n    this._choiceFilter = choiceFilter;\n  }\n\n  get filteredChoices() {\n    const items = this._choices;\n\n    if (!this.choiceFilter) {\n      return items;\n    }\n\n    const filteredItems = [];\n\n    for (const item of items) {\n      for (const filter of this.choiceFilter) {\n        if (item.value.toLowerCase().indexOf(filter.toLowerCase()) !== -1) {\n          filteredItems.push(item);\n        }\n      }\n    }\n\n    return filteredItems;\n  }\n\n  get overrideChoices() {\n    return this._overrideChoices;\n  }\n\n  set overrideChoices(overrideChoices) {\n    this._choicesByValue = null;\n\n    if (!overrideChoices || overrideChoices.length < 1) {\n      this._overrideChoices = null;\n      return;\n    }\n\n    const choices = [];\n\n    for (const choiceAttributes of overrideChoices) {\n      const choice = new Choice(choiceAttributes);\n\n      choices.push(choice);\n    }\n\n    this._overrideChoices = choices;\n  }\n\n  get overrideValues() {\n    return Object.assign(Object.getOwnPropertyDescriptor(Element.prototype, 'overrideValues').get.call(this), {\n      choiceFilter: this._choiceFilter,\n      overrideChoices: this._overrideChoices\n    });\n  }\n\n  resetOverrides() {\n    super.resetOverrides();\n\n    this._choiceFilter = null;\n    this._overrideChoices = null;\n  }\n\n  choiceByValue(value) {\n    if (!this._choicesByValue) {\n      this._choicesByValue = {};\n\n      for (const choice of this.choices) {\n        this._choicesByValue[choice.value] = choice;\n      }\n    }\n\n    return this._choicesByValue[value];\n  }\n}\n"]}