{"version":3,"sources":["../../src/elements/classification-element.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAIe,MAAM,qBAAqB,2BAAiB;AACzD,aAAW,CAAC,MAAM,EAAE,UAAU,EAAE;AAC9B,SAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;;AAE1B,QAAI,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC;AAC1C,QAAI,CAAC,YAAY,GAAG,IAAI,CAAC;;AAEzB,QAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;;AAEzC,QAAI,CAAC,oBAAoB,GAAG,UAAU,CAAC,qBAAqB,CAAC;GAC9D;;AAED,AAAM,MAAI,GAAG;;;;;;AAGX,YAAK,iBAAiB,GAAG,MAAM,yBAAe,WAAW,EAAE,CAAC,oBAAoB,CAAC,MAAK,oBAAoB,CAAC,CAAC;;GAC7G;;AAED,MAAI,mBAAmB,GAAG;AACxB,WAAO,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,uBAAuB,CAAC;GAC7G;;AAED,MAAI,2BAA2B,CAAC,8BAA8B,EAAE;AAC9D,QAAI,CAAC,8BAA8B,IAAI,8BAA8B,CAAC,MAAM,GAAG,CAAC,EAAE;AAChF,UAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;AACzC,aAAO;KACR;;AAED,UAAM,mBAAmB,GAAG,EAAE,CAAC;;AAE/B,SAAK,IAAI,wBAAwB,IAAI,8BAA8B,EAAE;AACnE,YAAM,cAAc,GAAG,6BAAmB,IAAI,EAAE,wBAAwB,CAAC,CAAC;;AAE1E,yBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC1C;;AAED,QAAI,CAAC,4BAA4B,GAAG,mBAAmB,CAAC;GACzD;;AAED,MAAI,uBAAuB,GAAG;AAC5B,UAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;;AAE3C,QAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;AAC9B,aAAO,KAAK,CAAC;KACd;;AAED,UAAM,aAAa,GAAG,EAAE,CAAC;;AAEzB,SAAK,IAAI,IAAI,IAAI,KAAK,EAAE;AACtB,WAAK,IAAI,MAAM,IAAI,IAAI,CAAC,oBAAoB,EAAE;AAC5C,YAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE;AACjE,uBAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B;OACF;KACF;;AAED,WAAO,aAAa,CAAC;GACtB;CACF;kBA1DoB,qBAAqB","file":"classification-element.js","sourcesContent":["import Element from './element';\nimport ElementFactory from './element-factory';\nimport Classification from './classification';\n\nexport default class ClassificationElement extends Element {\n  constructor(parent, attributes) {\n    super(parent, attributes);\n\n    this.allowOther = !!attributes.allowOther;\n    this.choiceFilter = null;\n\n    this._overrideClassificationItems = null;\n\n    this._classificationSetID = attributes.classification_set_id;\n  }\n\n  async load() {\n    // const self = this;\n\n    this.classificationSet = await ElementFactory.getProvider().getClassificationSet(this._classificationSetID);\n  }\n\n  get classificationItems() {\n    return this._overrideClassificationItems ? this._overrideClassificationItems : this.filteredClassifications;\n  }\n\n  set overrideClassificationItems(overrideClassificationSetItems) {\n    if (!overrideClassificationSetItems || overrideClassificationSetItems.length < 1) {\n      this._overrideClassificationItems = null;\n      return;\n    }\n\n    const classificationItems = [];\n\n    for (let classificationAttributes of overrideClassificationSetItems) {\n      const classification = new Classification(null, classificationAttributes);\n\n      classificationItems.push(classification);\n    }\n\n    this._overrideClassificationItems = classificationItems;\n  }\n\n  get filteredClassifications() {\n    const items = this.classificationSet.items;\n\n    if (!this.classificationFilter) {\n      return items;\n    }\n\n    const filteredItems = [];\n\n    for (let item of items) {\n      for (let filter of this.classificationFilter) {\n        if (item.value.toLowerCase().indexOf(filter.toLowerCase()) !== -1) {\n          filteredItems.push(item);\n        }\n      }\n    }\n\n    return filteredItems;\n  }\n}\n"]}