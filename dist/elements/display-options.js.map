{"version":3,"sources":["../../src/elements/display-options.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAIe,MAAM,cAAN,CAAqB;AAClC,cAAY,UAAZ,EAAwB;AACtB,SAAK,KAAL,GAAa,WAAW,KAAX,CADS;AAEtB,SAAK,QAAL,GAAgB,WAAW,QAAX,CAFM;GAAxB;;AAKA,MAAI,UAAJ,GAAiB;AACf,WAAO,KAAK,KAAL,KAAe,UAAf,CADQ;GAAjB;;AAIA,MAAI,QAAJ,GAAe;AACb,WAAO,KAAK,KAAL,KAAe,QAAf,CADM;GAAf;;AAIA,MAAI,MAAJ,GAAa;AACX,WAAO,KAAK,KAAL,KAAe,MAAf,CADI;GAAb;;AAIA,MAAI,MAAJ,GAAa;AACX,WAAO,KAAK,KAAL,KAAe,MAAf,CADI;GAAb;;AAIA,SAAO,KAAP,EAAc;AACZ,QAAI,CAAC,oBAAU,SAAV,CAAoB,KAApB,CAAD,EAA6B;AAC/B,aAAO,KAAP,CAD+B;KAAjC;;AAIA,YAAQ,IAAR;AACE,WAAK,KAAK,QAAL;AAAe;AAClB,iBAAO,sBAAY,gCAAZ,CAA6C,KAA7C,EAAoD,IAApD,CAAP,CADkB;SAApB;;AADF,WAKO,KAAK,MAAL;AAAa;AAChB,gBAAM,OAAO,oBAAU,SAAV,CAAoB,KAApB,CAAP,CADU;;AAGhB,cAAI,QAAQ,IAAR,EAAc;AAChB,mBAAO,oBAAU,mBAAV,CAA8B,IAA9B,CAAP,CADgB;WAAlB;;AAIA,gBAPgB;SAAlB;;AALF,WAeO,KAAK,UAAL;AAAiB;AACpB,iBAAO,sBAAY,cAAZ,CAA2B,KAA3B,EAAkC,KAAK,QAAL,CAAzC,CADoB;SAAtB;;AAfF;AAoBI,cADF;AAnBF,KALY;;AA4BZ,WAAO,KAAP,CA5BY;GAAd;CAtBa;kBAAM","file":"display-options.js","sourcesContent":["import TextUtils from '../utils/text-utils';\nimport NumberUtils from '../utils/number-utils';\nimport DateUtils from '../utils/date-utils';\n\nexport default class DisplayOptions {\n  constructor(attributes) {\n    this.style = attributes.style;\n    this.currency = attributes.currency;\n  }\n\n  get isCurrency() {\n    return this.style === 'currency';\n  }\n\n  get isNumber() {\n    return this.style === 'number';\n  }\n\n  get isDate() {\n    return this.style === 'date';\n  }\n\n  get isText() {\n    return this.style === 'text';\n  }\n\n  format(value) {\n    if (!TextUtils.isPresent(value)) {\n      return value;\n    }\n\n    switch (true) {\n      case this.isNumber: {\n        return NumberUtils.localizedStringFromMachineString(value, true);\n      }\n\n      case this.isDate: {\n        const date = DateUtils.parseDate(value);\n\n        if (date != null) {\n          return DateUtils.formatLocalizedDate(date);\n        }\n\n        break;\n      }\n\n      case this.isCurrency: {\n        return NumberUtils.formatCurrency(value, this.currency);\n      }\n\n      default:\n        break;\n    }\n\n    return value;\n  }\n}\n"]}