{"version":3,"sources":["../../src/elements/record-link-element.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;IAIqB;;;AACnB,WADmB,iBACnB,CAAY,MAAZ,EAAoB,UAApB,EAAgC;0BADb,mBACa;;iDAC9B,oBAAM,MAAN,EAAc,UAAd,GAD8B;;AAG9B,UAAK,OAAL,GAAe,WAAW,OAAX,CAHe;;AAK9B,UAAK,aAAL,GAAqB,CAAC,CAAC,WAAW,sBAAX,CALO;AAM9B,UAAK,aAAL,GAAqB,CAAC,CAAC,WAAW,sBAAX,CANO;AAO9B,UAAK,aAAL,GAAqB,CAAC,CAAC,WAAW,sBAAX,CAPO;AAQ9B,UAAK,aAAL,GAAqB,CAAC,CAAC,WAAW,sBAAX;;;AARO,SAW9B,CAAK,oBAAL,GAA4B,WAAW,sBAAX,CAXE;;AAa9B,UAAK,gBAAL,GAAwB,EAAxB,CAb8B;;AAe9B,QAAI,WAAW,iBAAX,EAA8B;AAChC,2BAAwB,WAAW,iBAAX,8GAAxB,IAAsD;;;;;;;;;;;;YAA3C,iBAA2C;;AACpD,cAAK,gBAAL,CAAsB,IAAtB,CAA2B,kCAAwB,SAAxB,CAA3B,EADoD;OAAtD;KADF;;AAMA,UAAK,cAAL,GAAsB,EAAtB,CArB8B;;AAuB9B,QAAI,WAAW,eAAX,EAA4B;AAC9B,4BAAkB,WAAW,eAAX,qHAAlB,IAA8C;;;;;;;;;;;;YAAnC,YAAmC;;AAC5C,cAAK,cAAL,CAAoB,IAApB,CAAyB,gCAAsB,GAAtB,CAAzB,EAD4C;OAA9C;KADF;iBAvB8B;GAAhC;;AADmB,8BA+BnB,qBAAK,YAAY,UAAU;;;AACzB,eAAW,OAAX,CAAmB,KAAK,OAAL,EAAc,UAAC,GAAD,EAAM,IAAN,EAAe;AAC9C,UAAI,GAAJ,EAAS;AACP,eAAO,SAAS,GAAT,CAAP,CADO;OAAT;;AAIA,aAAK,IAAL,GAAY,IAAZ,CAL8C;;AAO9C,aAAO,UAAP,CAP8C;KAAf,CAAjC,CADyB;;;SA/BR","file":"record-link-element.js","sourcesContent":["import Element from './element';\nimport RecordLinkCondition from './record-link-condition';\nimport RecordLinkDefault from './record-link-default';\n\nexport default class RecordLinkElement extends Element {\n  constructor(parent, attributes) {\n    super(parent, attributes);\n\n    this._formID = attributes.form_id;\n\n    this.allowMultiple = !!attributes.allow_multiple_records;\n    this.allowExisting = !!attributes.allow_existing_records;\n    this.allowCreating = !!attributes.allow_creating_records;\n    this.allowUpdating = !!attributes.allow_updating_records;\n\n    // TODO(zhm) model these\n    this.recordConditionsType = attributes.record_conditions_type;\n\n    this.recordConditions = [];\n\n    if (attributes.record_conditions) {\n      for (const condition of attributes.record_conditions) {\n        this.recordConditions.push(new RecordLinkCondition(condition));\n      }\n    }\n\n    this.recordDefaults = [];\n\n    if (attributes.record_defaults) {\n      for (const def of attributes.record_defaults) {\n        this.recordDefaults.push(new RecordLinkDefault(def));\n      }\n    }\n  }\n\n  load(dataSource, callback) {\n    dataSource.getForm(this._formID, (err, form) => {\n      if (err) {\n        return callback(err);\n      }\n\n      this.form = form;\n\n      return callback();\n    });\n  }\n}\n\n"]}