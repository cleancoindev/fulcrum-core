{"version":3,"sources":["../../src/elements/record-link-element.js"],"names":["RecordLinkElement","parent","attributes","_formID","form_id","allowMultiple","allow_multiple_records","allowExisting","allow_existing_records","allowCreating","allow_creating_records","allowUpdating","allow_updating_records","recordConditionsType","record_conditions_type","recordConditions","record_conditions","condition","push","RecordLinkCondition","recordDefaults","record_defaults","def","RecordLinkDefault","load","dataSource","callback","getForm","err","form","Element"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBA,iB;;;AACnB,6BAAYC,MAAZ,EAAoBC,UAApB,EAAgC;AAAA;;AAAA,iDAC9B,oBAAMD,MAAN,EAAcC,UAAd,CAD8B;;AAG9B,UAAKC,OAAL,GAAeD,WAAWE,OAA1B;;AAEA,UAAKC,aAAL,GAAqB,CAAC,CAACH,WAAWI,sBAAlC;AACA,UAAKC,aAAL,GAAqB,CAAC,CAACL,WAAWM,sBAAlC;AACA,UAAKC,aAAL,GAAqB,CAAC,CAACP,WAAWQ,sBAAlC;AACA,UAAKC,aAAL,GAAqB,CAAC,CAACT,WAAWU,sBAAlC;;AAEA;AACA,UAAKC,oBAAL,GAA4BX,WAAWY,sBAAvC;;AAEA,UAAKC,gBAAL,GAAwB,EAAxB;;AAEA,QAAIb,WAAWc,iBAAf,EAAkC;AAChC,2BAAwBd,WAAWc,iBAAnC,kHAAsD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAA3CC,SAA2C;;AACpD,cAAKF,gBAAL,CAAsBG,IAAtB,CAA2B,IAAIC,6BAAJ,CAAwBF,SAAxB,CAA3B;AACD;AACF;;AAED,UAAKG,cAAL,GAAsB,EAAtB;;AAEA,QAAIlB,WAAWmB,eAAf,EAAgC;AAC9B,4BAAkBnB,WAAWmB,eAA7B,yHAA8C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAAnCC,GAAmC;;AAC5C,cAAKF,cAAL,CAAoBF,IAApB,CAAyB,IAAIK,2BAAJ,CAAsBD,GAAtB,CAAzB;AACD;AACF;AA3B6B;AA4B/B;;8BAEDE,I,iBAAKC,U,EAAYC,Q,EAAU;AAAA;;AACzBD,eAAWE,OAAX,CAAmB,KAAKxB,OAAxB,EAAiC,UAACyB,GAAD,EAAMC,IAAN,EAAe;AAC9C,UAAID,GAAJ,EAAS;AACPF,iBAASE,GAAT;AACA;AACD;;AAED;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACA,aAAKA,IAAL,CAAUL,IAAV,CAAeC,UAAf,EAA2BC,QAA3B;AACD,KATD;AAUD,G;;;EA1C4CI,iB;;kBAA1B9B,iB","file":"record-link-element.js","sourcesContent":["import Element from './element';\nimport RecordLinkCondition from './record-link-condition';\nimport RecordLinkDefault from './record-link-default';\n\nexport default class RecordLinkElement extends Element {\n  constructor(parent, attributes) {\n    super(parent, attributes);\n\n    this._formID = attributes.form_id;\n\n    this.allowMultiple = !!attributes.allow_multiple_records;\n    this.allowExisting = !!attributes.allow_existing_records;\n    this.allowCreating = !!attributes.allow_creating_records;\n    this.allowUpdating = !!attributes.allow_updating_records;\n\n    // TODO(zhm) model these\n    this.recordConditionsType = attributes.record_conditions_type;\n\n    this.recordConditions = [];\n\n    if (attributes.record_conditions) {\n      for (const condition of attributes.record_conditions) {\n        this.recordConditions.push(new RecordLinkCondition(condition));\n      }\n    }\n\n    this.recordDefaults = [];\n\n    if (attributes.record_defaults) {\n      for (const def of attributes.record_defaults) {\n        this.recordDefaults.push(new RecordLinkDefault(def));\n      }\n    }\n  }\n\n  load(dataSource, callback) {\n    dataSource.getForm(this._formID, (err, form) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      // recursively load the linked forms\n      this.form = form;\n      this.form.load(dataSource, callback);\n    });\n  }\n}\n\n"]}