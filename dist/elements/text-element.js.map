{"version":3,"sources":["../../src/elements/text-element.js"],"names":[],"mappings":";;;;;;;;;;;;AAEe,MAAM,WAAW,kCAAwB;AACtD,aAAW,CAAC,MAAM,EAAE,UAAU,EAAE;AAC9B,SAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;;AAE1B,QAAI,CAAC,OAAO,GAAG,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC;;AAEpC,QAAI,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;;AAEhC,QAAI,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC;;AAE3B,QAAI,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC;;AAE3B,QAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACnB,UAAI,CAAC,GAAG,GAAG,IAAI,CAAC;KACjB;;AAED,QAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACnB,UAAI,CAAC,GAAG,GAAG,IAAI,CAAC;KACjB;;AAED,QAAI,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;;AAElC,QAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC,mBAAmB,CAAC;GAC1D;;AAED,MAAI,2BAA2B,GAAG;AAChC,WAAO,IAAI,CAAC;GACb;;AAED,MAAI,eAAe,GAAG;AACpB,WAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC;GAClD;;AAED,MAAI,eAAe,GAAG;AACpB,WAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC;GAClD;;AAED,MAAI,MAAM,GAAG;AACX,WAAO,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC;GACzB;;AAED,MAAI,MAAM,GAAG;AACX,WAAO,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC;GACzB;;AAED,MAAI,UAAU,GAAG;AACf,WAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;GAC5C;CACF;kBAhDoB,WAAW","file":"text-element.js","sourcesContent":["import TextualElement from './textual-element';\n\nexport default class TextElement extends TextualElement {\n  constructor(parent, attributes) {\n    super(parent, attributes);\n\n    this.numeric = !!attributes.numeric;\n\n    this.format = attributes.format;\n\n    this.min = +attributes.min;\n\n    this.max = +attributes.max;\n\n    if (isNaN(this.min)) {\n      this.min = null;\n    }\n\n    if (isNaN(this.max)) {\n      this.max = null;\n    }\n\n    this.pattern = attributes.pattern;\n\n    this.patternDescription = attributes.pattern_description;\n  }\n\n  get isLengthValidationSupported() {\n    return true;\n  }\n\n  get isDecimalFormat() {\n    return this.numeric && this.format === 'decimal';\n  }\n\n  get isIntegerFormat() {\n    return this.numeric && this.format === 'integer';\n  }\n\n  get hasMin() {\n    return this.min != null;\n  }\n\n  get hasMax() {\n    return this.max != null;\n  }\n\n  get hasPattern() {\n    return this.pattern && this.pattern.length;\n  }\n}\n"]}