{"version":3,"sources":["../../src/elements/text-element.js"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;IAEqB,W;;;AACnB,uBAAY,MAAZ,EAAoB,UAApB,EAAgC;AAAA;;AAAA,iDAC9B,2BAAM,MAAN,EAAc,UAAd,CAD8B;;AAG9B,UAAK,UAAL,GAAkB,CAAC,CAAC,WAAW,OAA/B;;AAEA,UAAK,MAAL,GAAc,WAAW,MAAzB;;AAEA,UAAK,GAAL,GAAW,IAAX;AACA,UAAK,GAAL,GAAW,IAAX;;AAEA,QAAI,WAAW,GAAX,IAAkB,IAAtB,EAA4B;AAC1B,YAAK,GAAL,GAAW,CAAC,WAAW,GAAvB;AACD;;AAED,QAAI,WAAW,GAAX,IAAkB,IAAtB,EAA4B;AAC1B,YAAK,GAAL,GAAW,CAAC,WAAW,GAAvB;AACD;;AAED,QAAI,MAAM,MAAK,GAAX,CAAJ,EAAqB;AACnB,YAAK,GAAL,GAAW,IAAX;AACD;;AAED,QAAI,MAAM,MAAK,GAAX,CAAJ,EAAqB;AACnB,YAAK,GAAL,GAAW,IAAX;AACD;;AAED,UAAK,OAAL,GAAe,WAAW,OAA1B;;AAEA,UAAK,kBAAL,GAA0B,WAAW,mBAArC;AA5B8B;AA6B/B;;;;wBAEiC;AAChC,aAAO,IAAP;AACD;;;wBAEqB;AACpB,aAAO,KAAK,UAAL,IAAmB,KAAK,MAAL,KAAgB,SAA1C;AACD;;;wBAEqB;AACpB,aAAO,KAAK,UAAL,IAAmB,KAAK,MAAL,KAAgB,SAA1C;AACD;;;wBAEe;AACd,aAAO,KAAK,UAAZ;AACD;;;wBAEY;AACX,aAAO,KAAK,GAAL,IAAY,IAAnB;AACD;;;wBAEY;AACX,aAAO,KAAK,GAAL,IAAY,IAAnB;AACD;;;wBAEgB;AACf,aAAO,KAAK,OAAL,IAAgB,KAAK,OAAL,CAAa,MAApC;AACD;;;;;;kBA1DkB,W","file":"text-element.js","sourcesContent":["import TextualElement from './textual-element';\n\nexport default class TextElement extends TextualElement {\n  constructor(parent, attributes) {\n    super(parent, attributes);\n\n    this._isNumeric = !!attributes.numeric;\n\n    this.format = attributes.format;\n\n    this.min = null;\n    this.max = null;\n\n    if (attributes.min != null) {\n      this.min = +attributes.min;\n    }\n\n    if (attributes.max != null) {\n      this.max = +attributes.max;\n    }\n\n    if (isNaN(this.min)) {\n      this.min = null;\n    }\n\n    if (isNaN(this.max)) {\n      this.max = null;\n    }\n\n    this.pattern = attributes.pattern;\n\n    this.patternDescription = attributes.pattern_description;\n  }\n\n  get isLengthValidationSupported() {\n    return true;\n  }\n\n  get isDecimalFormat() {\n    return this._isNumeric && this.format === 'decimal';\n  }\n\n  get isIntegerFormat() {\n    return this._isNumeric && this.format === 'integer';\n  }\n\n  get isNumeric() {\n    return this._isNumeric;\n  }\n\n  get hasMin() {\n    return this.min != null;\n  }\n\n  get hasMax() {\n    return this.max != null;\n  }\n\n  get hasPattern() {\n    return this.pattern && this.pattern.length;\n  }\n}\n"]}