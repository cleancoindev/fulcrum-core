{"version":3,"sources":["../src/form.js"],"names":[],"mappings":"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","file":"form.js","sourcesContent":["import ChildElements from './elements/child-elements';\nimport StatusElement from './elements/status-element';\nimport DefaultValues from './values/default-values';\nimport Record from './record';\nimport async from 'async';\n\nexport default class Form {\n  constructor(attributes) {\n    this.updateFromAPIAttributes(attributes);\n  }\n\n  updateFromAPIAttributes(attributes) {\n    attributes = attributes || {};\n\n    this._id = attributes.id;\n    this._name = attributes.name;\n    this._description = attributes.description;\n    this._elementsJSON = attributes.elements;\n    this._elements = null;\n    this._titleFieldKeysJSON = attributes.title_field_keys;\n    this._statusFieldJSON = attributes.status_field;\n    this._statusField = null;\n    this._script = attributes.script;\n    this._geometryRequired = !!attributes.geometry_required;\n\n    if (attributes.title_field_keys || attributes.record_title_key) {\n      this._titleFieldKeysJSON = attributes.title_field_keys || [attributes.record_title_key];\n      this._titleFieldKeys = [];\n    } else {\n      this._titleFieldKeysJSON = [];\n      this._titleFieldKeys = [];\n    }\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  load(dataSource, callback) {\n    const loadElements = [];\n\n    for (const element of this.allElements) {\n      if (element.load) {\n        loadElements.push(element);\n      }\n    }\n\n    async.each(loadElements, (element, cb) => {\n      element.load(dataSource, cb);\n    }, callback);\n  }\n\n  createRecord(attributes) {\n    const record = new Record(attributes, this);\n\n    DefaultValues.applyDefaultValuesForElements(this.elements,\n                                                record.formValues,\n                                                record);\n\n    return record;\n  }\n\n  get statusField() {\n    if (!this._statusField) {\n      this._statusField = new StatusElement(this, this._statusFieldJSON);\n    }\n    return this._statusField;\n  }\n\n  get(key) {\n    return this.elementsByKey[key];\n  }\n\n  find(dataName) {\n    return this.elementsByDataName[dataName];\n  }\n\n  get hasHiddenParent() {\n    return false;\n  }\n\n  toJSON() {\n    const json = {};\n\n    json.id = this.id || null;\n    json.name = this.name || null;\n    json.description = this.description || null;\n    json.script = this.script || null;\n    json.elements = JSON.parse(JSON.stringify(this.elementsJSON));\n\n    return json;\n  }\n\n  get isGeometryRequired() {\n    return this._geometryRequired;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get description() {\n    return this._description;\n  }\n\n  get script() {\n    return this._script;\n  }\n}\n\nChildElements.includeInto(Form);\n"]}