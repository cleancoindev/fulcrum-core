{"version":3,"sources":["../../src/media/kml.js"],"names":["KML","render","tracks","timestamp","t","Date","toISOString","kml","push","kmlStart","kmlStyles","kmlPlacemarks","kmlEnd","join","trim","map","track","segments","length","kmlPlacemarkStart","kmlPlacemarkName","kmlPlacemarkStyle","kmlPlacemarkLineString","kmlPlacemarkMultiLineString","kmlPlacemarkExtendedData","kmlPlacemarkEnd","filter","o","isValid","firstLocation","time","lineStrings","segment","coordinates","locations","point","longitude","latitude","altitude","kmlPlacemarkLineStringProperties","data","kmlExtendedDataStart","kmlExtendedDataDate","kmlExtendedDataName","kmlExtendedDataLink","kmlExtendedDataEnd","id","kmlExtendedDataURL"],"mappings":"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","file":"kml.js","sourcesContent":["export default class KML {\n  static render(tracks) {\n    return new KML().render(tracks);\n  }\n\n  timestamp(t) {\n    if (t == null) {\n      return null;\n    }\n\n    return new Date(+t).toISOString();\n  }\n\n  render(tracks) {\n    const kml = [];\n\n    kml.push(this.kmlStart());\n    kml.push(this.kmlStyles());\n    kml.push(this.kmlPlacemarks(tracks));\n    kml.push(this.kmlEnd());\n\n    return kml.join('\\n').trim();\n  }\n\n  kmlPlacemarks(tracks) {\n    return tracks.map((track) => {\n      if (track.segments.length) {\n        const kml = [];\n\n        kml.push(this.kmlPlacemarkStart());\n        kml.push(this.kmlPlacemarkName(track));\n        kml.push(this.kmlPlacemarkStyle(track));\n\n        if (track.segments.length === 1) {\n          kml.push(this.kmlPlacemarkLineString(track.segments[0]));\n        } else {\n          kml.push(this.kmlPlacemarkMultiLineString(track));\n        }\n\n        kml.push(this.kmlPlacemarkExtendedData(track));\n        kml.push(this.kmlPlacemarkEnd());\n\n        return kml.join('\\n');\n      }\n\n      return null;\n    }).filter(o => o).join('\\n');\n  }\n\n  kmlStart() {\n    return `\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<kml xmlns=\"http://www.opengis.net/kml/2.2\" xmlns:gx=\"http://www.google.com/kml/ext/2.2\">\n<Document>\n`;\n  }\n\n  kmlEnd() {\n    return '</Document></kml>';\n  }\n\n  kmlStyles() {\n    return `\n<Style id=\"line\">\n  <LineStyle>\n    <color>c000ffff</color>\n    <width>4</width>\n  </LineStyle>\n</Style>\n`;\n  }\n\n  kmlPlacemarkStart() {\n    return '<Placemark>';\n  }\n\n  kmlPlacemarkEnd() {\n    return '</Placemark>';\n  }\n\n  kmlPlacemarkName(track) {\n    return `<name>${track.isValid ? this.timestamp(track.firstLocation.time) : ''}</name>`;\n  }\n\n  kmlPlacemarkStyle(track) {\n    return '<styleUrl>#line</styleUrl>';\n  }\n\n  kmlPlacemarkMultiLineString(track) {\n    const lineStrings = track.segments.map((segment) => {\n      return this.kmlPlacemarkLineString(segment);\n    });\n\n    return `<MultiGeometry>${lineStrings.join('\\n')}</MultiGeometry>`;\n  }\n\n  kmlPlacemarkLineString(segment) {\n    const coordinates = segment.locations.map((point) => {\n      return [ point.longitude, point.latitude, point.altitude ].join(',');\n    }).join(' ');\n\n    return `<LineString>${this.kmlPlacemarkLineStringProperties()}<coordinates>${coordinates}</coordinates></LineString>`;\n  }\n\n  kmlPlacemarkLineStringProperties() {\n    return '<extrude>1</extrude><gx:altitudeMode>clampToGround</gx:altitudeMode>';\n  }\n\n  kmlPlacemarkExtendedData(track) {\n    const data = [];\n    data.push(this.kmlExtendedDataStart());\n    data.push(this.kmlExtendedDataDate(track));\n    data.push(this.kmlExtendedDataName(track));\n    data.push(this.kmlExtendedDataLink(track));\n    data.push(this.kmlExtendedDataEnd());\n    return data.join('\\n');\n  }\n\n  kmlExtendedDataStart() {\n    return '<ExtendedData>';\n  }\n\n  kmlExtendedDataDate(track) {\n    return `<Data name=\"Date\"><value>${track.isValid ? this.timestamp(track.firstLocation.time) : ''}</value></Data>`;\n  }\n\n  kmlExtendedDataEnd() {\n    return '</ExtendedData>';\n  }\n\n  kmlExtendedDataName(track) {\n    return `<Data name=\"Name\"><value><![CDATA[${track.id}]]></value></Data>`;\n  }\n\n  kmlExtendedDataLink(track) {\n    return `<Data name=\\\"Link\\\"><value><![CDATA[<a href=\\\"javascript:window.open('about:blank');\\\" onclick=\\\"window.open('${this.kmlExtendedDataURL(track)}')\\\" target=\\\"_new\\\">View Video</a>]]></value></Data>`;\n  }\n\n  kmlExtendedDataURL(track) {\n    return `https://web.fulcrumapp.com/videos/${track.id}`;\n  }\n}\n"]}