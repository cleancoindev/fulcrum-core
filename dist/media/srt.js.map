{"version":3,"sources":["../../src/media/srt.js"],"names":["SRT","render","tracks","timestamp","t","x","_firstTimestamp","ms","Math","floor","ss","mm","hh","segments","points","time","parts","track","segment","point","push","srtEntry","length","join","trim","nextPoint","number","formatText","Date","toISOString","replace","latitude","toFixed","longitude","formatAltitude","formatSpeed","altitude","speed"],"mappings":"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","file":"srt.js","sourcesContent":["import padStart from 'lodash.padstart';\n\nexport default class SRT {\n  static render(tracks) {\n    return new SRT().render(tracks);\n  }\n\n  timestamp(t) {\n    let x = t - this._firstTimestamp;\n\n    const ms = padStart(Math.floor(x % 1000), 2, '0');\n\n    x /= 1000;\n\n    const ss = padStart(Math.floor(x % 60), 2, '0');\n\n    x /= 60;\n\n    const mm = padStart(Math.floor(x % 60), 2, '0');\n\n    x /= 60;\n\n    const hh = padStart(Math.floor(x % 24), 2, '0');\n\n    return `${hh}:${mm}:${ss},${ms}`;\n  }\n\n  render(tracks) {\n    this._firstTimestamp = tracks[0].segments[0].points[0].time;\n\n    const parts = [];\n\n    for (const track of tracks) {\n      for (const segment of track.segments) {\n        for (const point of segment.points) {\n          parts.push(this.srtEntry(point, segment.points[parts.length + 1], parts.length + 1));\n        }\n      }\n    }\n\n    return parts.join('\\n\\n').trim();\n  }\n\n  srtEntry(point, nextPoint, number) {\n    return `\n${number}\n${this.timestamp(point.time)} ${nextPoint && '--> ' + this.timestamp(nextPoint.time)}\n${this.formatText(point)}\n`.trim();\n  }\n\n  formatText(point) {\n    return [\n      new Date(point.time).toISOString().replace('T', ' ').replace('Z', '').replace(/\\.[\\d]{3}/, ''),\n      point.latitude && point.latitude.toFixed(6),\n      point.longitude && point.longitude.toFixed(6),\n      this.formatAltitude(point),\n      this.formatSpeed(point)\n    ].join(', ');\n  }\n\n  formatAltitude(point) {\n    if (point.altitude == null) {\n      return null;\n    }\n\n    const altitude = point.altitude.toFixed(0);\n\n    return (point.altitude > 0 ? '+' + altitude : '-' + altitude) + 'm';\n  }\n\n  formatSpeed(point) {\n    if (point.speed == null) {\n      return null;\n    }\n\n    const speed = (point.speed * 2.23694).toFixed(0);\n\n    return speed + 'mph';\n  }\n}\n"]}