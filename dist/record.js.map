{"version":3,"sources":["../src/record.js"],"names":[],"mappings":"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","file":"record.js","sourcesContent":["import Feature from './feature';\nimport FormValues from './values/form-values';\nimport TextUtils from './utils/text-utils';\nimport DateUtils from './utils/date-utils';\nimport StatusValue from './values/status-value';\n\nexport default class Record extends Feature {\n  constructor(attributes) {\n    super();\n\n    // this._id = attributes.id;\n    // this._createdAt = DateUtils.parseTimestamp(attributes.client_created_at);\n    // this._updatedAt = DateUtils.parseTimestamp(attributes.client_updated_at);\n    // this._formValuesJSON = attributes.form_values;\n    // this._latitude = attributes.latitude;\n    // this._longitude = attributes.longitude;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  set id(id) {\n    this._id = id;\n  }\n\n  get form() {\n    return this._form;\n  }\n\n  get createdAt() {\n    return this._createdAt;\n  }\n\n  set createdAt(createdAt) {\n    this._createdAt = createdAt;\n  }\n\n  get updatedAt() {\n    return this._updatedAt;\n  }\n\n  set updatedAt(updatedAt) {\n    this._updatedAt = updatedAt;\n  }\n\n  get formValues() {\n    if (this._formValues == null) {\n      this._formValues = new FormValues(this._form, this._formValuesJSON);\n    }\n\n    return this._formValues;\n  }\n\n  get hasCoordinate() {\n    return this._latitude != null && this._longitude != null;\n  }\n\n  toJSON() {\n    const json = {};\n\n    // TODO(zhm) this is incomplete\n    json.id = this.id;\n    json.client_created_at = DateUtils.formatTimestamp(this.createdAt);\n    json.client_updated_at = DateUtils.formatTimestamp(this.updatedAt);\n    json.form_values = this.formValues.toJSON();\n    json.latitude = this._latitude;\n    json.longitude = this._longitude;\n\n    return json;\n  }\n\n  updateTimestamps() {\n    const now = new Date();\n\n    if (this._createdAt == null) {\n      this.createdAt = now;\n    }\n\n    this.updatedAt = now;\n  }\n\n  get isGeometryEnabled() {\n    return this.form.isGeometryEnabled;\n  }\n\n  get(key, formValues) {\n    if (key === '@status') {\n      return this.statusValue;\n    }\n\n    return formValues.get(key);\n  }\n\n  set(key, value, formValues) {\n    if (key === '@status') {\n      this.status = value.textValue;\n      return;\n    }\n\n    formValues.set(key, value);\n  }\n\n  get statusValue() {\n    return new StatusValue(this.status, this.form.statusField);\n  }\n\n  get displayValue() {\n    const titleFieldKeys = this.form.titleFieldKeys;\n    const titles = [];\n\n    for (let fieldKey of titleFieldKeys) {\n      const value = this.formValues.get(fieldKey);\n\n      if (value) {\n        const displayValue = value.displayValue;\n\n        if (TextUtils.isPresent(displayValue)) {\n          titles.push(displayValue);\n        }\n      }\n    }\n\n    return titles.join(', ');\n  }\n\n  get isStatusFieldEnabled() {\n    // invisible if there are no statuses or the status field is marked as hidden\n    if (this.form.statusField.choices.length === 0 || this.form.statusField.isHidden) {\n      return false;\n    }\n\n    // invisible if it's readonly and there's no status (nothing for the user to read)\n    if (this.status == null && this.form.statusField.isReadOnly) {\n      return false;\n    }\n\n    return this.form.statusField.isEnabled;\n  }\n}\n"]}