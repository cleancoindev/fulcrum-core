{"version":3,"sources":["../src/record.js"],"names":["Record","attributes","form","_form","updateFromAPIAttributes","loadChangeset","dataSource","callback","toJSON","json","form_id","id","version","_version","created_at","formatISOTimestamp","createdAt","updated_at","updatedAt","client_created_at","clientCreatedAt","client_updated_at","clientUpdatedAt","form_values","formValues","latitude","_latitude","longitude","_longitude","project_id","_projectID","assigned_to_id","_assignedToID","status","_status","created_by_id","_createdByID","created_by","_createdByName","updated_by_id","_updatedByID","updated_by","_updatedBy","_horizontalAccuracy","horizontal_accuracy","_verticalAccuracy","vertical_accuracy","_altitude","altitude","_speed","speed","_course","course","_changesetID","changeset_id","created_location","createdLocation","updated_location","updatedLocation","created_duration","createdDuration","updated_duration","updatedDuration","edited_duration","editedDuration","attrs","_id","v4","_createdAt","parseISOTimestamp","_updatedAt","_clientCreatedAt","_clientUpdatedAt","_formValuesJSON","_projectName","project","_assignedToName","assigned_to","_updatedByName","_createdDuration","_updatedDuration","_editedDuration","_createdLatitude","created_latitude","_createdLongitude","created_longitude","_createdAltitude","created_altitude","_createdAccuracy","created_horizontal_accuracy","_updatedLatitude","updated_latitude","_updatedLongitude","updated_longitude","_updatedAltitude","updated_altitude","_updatedAccuracy","updated_horizontal_accuracy","updateTimestamps","now","Date","get","key","statusValue","set","value","textValue","updateFromActionAttributes","role","Object","keys","dataName","canChangeProject","projectID","canAssignRecords","assignedToID","canChangeStatus","element","elementsByDataName","formValue","createValueFromString","_formValues","_changeset","changeset","isGeometryEnabled","statusField","searchableValue","titleFieldKeys","titles","fieldKey","displayValue","isPresent","push","join","choices","length","isHidden","isReadOnly","isEnabled","name","user","fullName","_createdBy","accuracy","hasCoordinate","type","coordinates","createdLatitude","createdLongitude","updatedLatitude","updatedLongitude","hasCreatedCoordinate","createdAltitude","createdAccuracy","hasUpdatedCoordinate","updatedAltitude","updatedAccuracy"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBA,M;;;AACnB,kBAAYC,UAAZ,EAAwBC,IAAxB,EAA8B;AAAA;;AAAA,iDAC5B,mBAD4B;;AAG5B,UAAKC,KAAL,GAAaD,QAAQ,IAArB;;AAEA,UAAKE,uBAAL,CAA6BH,UAA7B;AAL4B;AAM7B;;mBAmFDI,a,0BAAcC,U,EAAYC,Q,EAAU;AAClC,WAAO,0BAAW,IAAX,EAAiBD,UAAjB,EAA6B,WAA7B,EAA0C,cAA1C,EAA0DC,QAA1D,CAAP;AACD,G;;mBAEDC,M,qBAAS;AACP,QAAMC,OAAO,EAAb;;AAEAA,SAAKC,OAAL,GAAe,KAAKP,KAAL,CAAWQ,EAA1B;;AAEAF,SAAKE,EAAL,GAAU,KAAKA,EAAL,IAAW,IAArB;AACAF,SAAKG,OAAL,GAAe,KAAKC,QAAL,IAAiB,IAAjB,GAAwB,KAAKA,QAA7B,GAAwC,IAAvD;AACAJ,SAAKK,UAAL,GAAkB,oBAAUC,kBAAV,CAA6B,KAAKC,SAAlC,CAAlB;AACAP,SAAKQ,UAAL,GAAkB,oBAAUF,kBAAV,CAA6B,KAAKG,SAAlC,CAAlB;AACAT,SAAKU,iBAAL,GAAyB,oBAAUJ,kBAAV,CAA6B,KAAKK,eAAlC,CAAzB;AACAX,SAAKY,iBAAL,GAAyB,oBAAUN,kBAAV,CAA6B,KAAKO,eAAlC,CAAzB;AACAb,SAAKc,WAAL,GAAmB,KAAKC,UAAL,CAAgBhB,MAAhB,EAAnB;AACAC,SAAKgB,QAAL,GAAgB,KAAKC,SAAL,IAAkB,IAAlB,GAAyB,KAAKA,SAA9B,GAA0C,IAA1D;AACAjB,SAAKkB,SAAL,GAAiB,KAAKC,UAAL,IAAmB,IAAnB,GAA0B,KAAKA,UAA/B,GAA4C,IAA7D;AACAnB,SAAKoB,UAAL,GAAkB,KAAKC,UAAL,IAAmB,IAArC;AACArB,SAAKsB,cAAL,GAAsB,KAAKC,aAAL,IAAsB,IAA5C;AACAvB,SAAKwB,MAAL,GAAc,KAAKC,OAAL,IAAgB,IAA9B;;AAEAzB,SAAK0B,aAAL,GAAqB,KAAKC,YAAL,IAAqB,IAA1C;AACA3B,SAAK4B,UAAL,GAAkB,KAAKC,cAAL,IAAuB,IAAzC;AACA7B,SAAK8B,aAAL,GAAqB,KAAKC,YAAL,IAAqB,IAA1C;AACA/B,SAAKgC,UAAL,GAAkB,KAAKC,UAAL,IAAmB,IAArC;;AAEA,QAAI,KAAKC,mBAAL,IAA4B,IAAhC,EAAsC;AACpClC,WAAKmC,mBAAL,GAA2B,KAAKD,mBAAhC;AACD;;AAED,QAAI,KAAKE,iBAAL,IAA0B,IAA9B,EAAoC;AAClCpC,WAAKqC,iBAAL,GAAyB,KAAKD,iBAA9B;AACD;;AAED,QAAI,KAAKE,SAAL,IAAkB,IAAtB,EAA4B;AAC1BtC,WAAKuC,QAAL,GAAgB,KAAKD,SAArB;AACD;;AAED,QAAI,KAAKE,MAAL,IAAe,IAAnB,EAAyB;AACvBxC,WAAKyC,KAAL,GAAa,KAAKD,MAAlB;AACD;;AAED,QAAI,KAAKE,OAAL,IAAgB,IAApB,EAA0B;AACxB1C,WAAK2C,MAAL,GAAc,KAAKD,OAAnB;AACD;;AAED,QAAI,KAAKE,YAAT,EAAuB;AACrB5C,WAAK6C,YAAL,GAAoB,KAAKD,YAAzB;AACD;;AAED5C,SAAK8C,gBAAL,GAAwB,KAAKC,eAA7B;AACA/C,SAAKgD,gBAAL,GAAwB,KAAKC,eAA7B;;AAEAjD,SAAKkD,gBAAL,GAAwB,KAAKC,eAA7B;AACAnD,SAAKoD,gBAAL,GAAwB,KAAKC,eAA7B;AACArD,SAAKsD,eAAL,GAAuB,KAAKC,cAA5B;;AAEA,WAAOvD,IAAP;AACD,G;;mBAEDL,uB,oCAAwB6D,K,EAAO;AAC7B,QAAMhE,aAAagE,SAAS,EAA5B;;AAEA,SAAKC,GAAL,GAAWjE,WAAWU,EAAX,IAAiB,eAAKwD,EAAL,EAA5B;AACA,SAAKtD,QAAL,GAAgBZ,WAAWW,OAAX,IAAsB,IAAtB,GAA6BX,WAAWW,OAAxC,GAAkD,IAAlE;AACA,SAAKwD,UAAL,GAAkB,oBAAUC,iBAAV,CAA4BpE,WAAWa,UAAvC,CAAlB;AACA,SAAKwD,UAAL,GAAkB,oBAAUD,iBAAV,CAA4BpE,WAAWgB,UAAvC,CAAlB;AACA,SAAKsD,gBAAL,GAAwB,oBAAUF,iBAAV,CAA4BpE,WAAWkB,iBAAvC,CAAxB;AACA,SAAKqD,gBAAL,GAAwB,oBAAUH,iBAAV,CAA4BpE,WAAWoB,iBAAvC,CAAxB;AACA,SAAKoD,eAAL,GAAuBxE,WAAWsB,WAAX,IAA0B,EAAjD;AACA,SAAKG,SAAL,GAAiBzB,WAAWwB,QAAX,IAAuB,IAAvB,GAA8BxB,WAAWwB,QAAzC,GAAoD,IAArE;AACA,SAAKG,UAAL,GAAkB3B,WAAW0B,SAAX,IAAwB,IAAxB,GAA+B1B,WAAW0B,SAA1C,GAAsD,IAAxE;AACA,SAAKG,UAAL,GAAkB7B,WAAW4B,UAAX,IAAyB,IAA3C;AACA,SAAK6C,YAAL,GAAoBzE,WAAW0E,OAAX,IAAsB,IAA1C;AACA,SAAK3C,aAAL,GAAqB/B,WAAW8B,cAAX,IAA6B,IAAlD;AACA,SAAK6C,eAAL,GAAuB3E,WAAW4E,WAAX,IAA0B,IAAjD;AACA,SAAK3C,OAAL,GAAejC,WAAWgC,MAAX,IAAqB,IAApC;;AAEA,SAAKG,YAAL,GAAoBnC,WAAWkC,aAAX,IAA4B,IAAhD;AACA,SAAKG,cAAL,GAAsBrC,WAAWoC,UAAX,IAAyB,IAA/C;AACA,SAAKG,YAAL,GAAoBvC,WAAWsC,aAAX,IAA4B,IAAhD;AACA,SAAKuC,cAAL,GAAsB7E,WAAWwC,UAAX,IAAyB,IAA/C;;AAEA,SAAKE,mBAAL,GAA2B1C,WAAW2C,mBAAX,IAAkC,IAAlC,GAAyC3C,WAAW2C,mBAApD,GAA0E,IAArG;AACA,SAAKC,iBAAL,GAAyB5C,WAAW6C,iBAAX,IAAgC,IAAhC,GAAuC7C,WAAW6C,iBAAlD,GAAsE,IAA/F;AACA,SAAKC,SAAL,GAAiB9C,WAAW+C,QAAX,IAAuB,IAAvB,GAA8B/C,WAAW+C,QAAzC,GAAoD,IAArE;AACA,SAAKC,MAAL,GAAchD,WAAWiD,KAAX,IAAoB,IAApB,GAA2BjD,WAAWiD,KAAtC,GAA8C,IAA5D;AACA,SAAKC,OAAL,GAAelD,WAAWmD,MAAX,IAAqB,IAArB,GAA4BnD,WAAWmD,MAAvC,GAAgD,IAA/D;;AAEA,SAAKC,YAAL,GAAoBpD,WAAWqD,YAAX,IAA2B,IAA/C;;AAEA,SAAKyB,gBAAL,GAAwB9E,WAAW0D,gBAAX,IAA+B,IAA/B,GAAsC1D,WAAW0D,gBAAjD,GAAoE,IAA5F;AACA,SAAKqB,gBAAL,GAAwB/E,WAAW4D,gBAAX,IAA+B,IAA/B,GAAsC5D,WAAW4D,gBAAjD,GAAoE,IAA5F;AACA,SAAKoB,eAAL,GAAuBhF,WAAW8D,eAAX,IAA8B,IAA9B,GAAqC9D,WAAW8D,eAAhD,GAAkE,IAAzF;;AAEA,QAAMP,kBAAkBvD,WAAWsD,gBAAnC;;AAEA,SAAK2B,gBAAL,GAAwBjF,WAAWkF,gBAAX,GAA8BlF,WAAWkF,gBAAzC,GAA4D,IAApF;AACA,SAAKC,iBAAL,GAAyBnF,WAAWoF,iBAAX,GAA+BpF,WAAWoF,iBAA1C,GAA8D,IAAvF;AACA,SAAKC,gBAAL,GAAwBrF,WAAWsF,gBAAX,GAA8BtF,WAAWsF,gBAAzC,GAA4D,IAApF;AACA,SAAKC,gBAAL,GAAwBvF,WAAWwF,2BAAX,GAAyCxF,WAAWwF,2BAApD,GAAkF,IAA1G;;AAEA,QAAIjC,eAAJ,EAAqB;AACnB,WAAK0B,gBAAL,GAAwB1B,gBAAgB/B,QAAxC;AACA,WAAK2D,iBAAL,GAAyB5B,gBAAgB7B,SAAzC;AACA,WAAK2D,gBAAL,GAAwB9B,gBAAgBR,QAAxC;AACA,WAAKwC,gBAAL,GAAwBhC,gBAAgBZ,mBAAxC;AACD;;AAED,QAAMc,kBAAkBzD,WAAWwD,gBAAnC;;AAEA,SAAKiC,gBAAL,GAAwBzF,WAAW0F,gBAAX,GAA8B1F,WAAW0F,gBAAzC,GAA4D,IAApF;AACA,SAAKC,iBAAL,GAAyB3F,WAAW4F,iBAAX,GAA+B5F,WAAW4F,iBAA1C,GAA8D,IAAvF;AACA,SAAKC,gBAAL,GAAwB7F,WAAW8F,gBAAX,GAA8B9F,WAAW8F,gBAAzC,GAA4D,IAApF;AACA,SAAKC,gBAAL,GAAwB/F,WAAWgG,2BAAX,GAAyChG,WAAWgG,2BAApD,GAAkF,IAA1G;;AAEA,QAAIvC,eAAJ,EAAqB;AACnB,WAAKgC,gBAAL,GAAwBhC,gBAAgBjC,QAAxC;AACA,WAAKmE,iBAAL,GAAyBlC,gBAAgB/B,SAAzC;AACA,WAAKmE,gBAAL,GAAwBpC,gBAAgBV,QAAxC;AACA,WAAKgD,gBAAL,GAAwBtC,gBAAgBd,mBAAxC;AACD;AACF,G;;mBAEDsD,gB,+BAAmB;AACjB,QAAMC,MAAM,IAAIC,IAAJ,EAAZ;;AAEA,QAAI,KAAKhF,eAAL,IAAwB,IAA5B,EAAkC;AAChC,WAAKA,eAAL,GAAuB+E,GAAvB;AACD;;AAED,SAAK7E,eAAL,GAAuB6E,GAAvB;AACD,G;;mBAMDE,G,gBAAIC,G,EAAK9E,U,EAAY;AACnB,QAAI8E,QAAQ,SAAZ,EAAuB;AACrB,aAAO,KAAKC,WAAZ;AACD;;AAED,WAAO/E,WAAW6E,GAAX,CAAeC,GAAf,CAAP;AACD,G;;mBAEDE,G,gBAAIF,G,EAAKG,K,EAAOjF,U,EAAY;AAC1B,QAAI8E,QAAQ,SAAZ,EAAuB;AACrB,WAAKrE,MAAL,GAAcwE,MAAMC,SAApB;AACA;AACD;;AAEDlF,eAAWgF,GAAX,CAAeF,GAAf,EAAoBG,KAApB;AACD,G;;mBAiUDE,0B,uCAA2B1G,U,EAAY2G,I,EAAM;AAC3C,yBAAuBC,OAAOC,IAAP,CAAY7G,UAAZ,CAAvB,kHAAgD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,UAArC8G,QAAqC;;AAC9C,cAAQA,QAAR;AACE,aAAK,YAAL;AAAmB;AACjB,gBAAI9G,WAAW4B,UAAX,IAAyB+E,KAAKI,gBAAlC,EAAoD;AAClD,mBAAKC,SAAL,GAAiBhH,WAAW4B,UAA5B;AACD;;AAED;AACD;;AAED,aAAK,gBAAL;AAAuB;AACrB,gBAAI5B,WAAW8B,cAAX,IAA6B6E,KAAKM,gBAAtC,EAAwD;AACtD,mBAAKC,YAAL,GAAoBlH,WAAW8B,cAA/B;AACD;;AAED;AACD;;AAED,aAAK,QAAL;AAAe;AACb,gBAAI9B,WAAWgC,MAAX,IAAqB2E,KAAKQ,eAA9B,EAA+C;AAC7C,mBAAKnF,MAAL,GAAchC,WAAWgC,MAAzB;AACD;;AAED;AACD;;AAED,aAAK,UAAL;AAAiB;AACf,gBAAIhC,WAAWwB,QAAX,IAAuB,IAAvB,IAA+BxB,WAAWwB,QAAX,IAAuB,CAAC,EAAvD,IAA6DxB,WAAWwB,QAAX,IAAuB,EAAxF,EAA4F;AAC1F,mBAAKA,QAAL,GAAgB,CAACxB,WAAWwB,QAA5B;AACD;;AAED;AACD;;AAED,aAAK,WAAL;AAAkB;AAChB,gBAAIxB,WAAW0B,SAAX,IAAwB,IAAxB,IAAgC1B,WAAW0B,SAAX,IAAwB,CAAC,GAAzD,IAAgE1B,WAAW0B,SAAX,IAAwB,GAA5F,EAAiG;AAC/F,mBAAKA,SAAL,GAAiB,CAAC1B,WAAW0B,SAA7B;AACD;;AAED;AACD;;AAED;AAAS;AACP,gBAAM0F,UAAU,KAAKnH,IAAL,CAAUoH,kBAAV,CAA6BP,QAA7B,CAAhB;AACA,gBAAMN,QAAQxG,WAAW8G,QAAX,CAAd;;AAEA,gBAAIM,WAAWZ,SAAS,IAAxB,EAA8B;AAC5B,kBAAMc,YAAY,KAAK/F,UAAL,CAAgBgG,qBAAhB,CAAsCH,OAAtC,EAA+CZ,KAA/C,CAAlB;;AAEA,kBAAIc,SAAJ,EAAe;AACb,qBAAK/F,UAAL,CAAgBgF,GAAhB,CAAoBa,QAAQf,GAA5B,EAAiCiB,SAAjC;AACD;AACF;;AAED;AACD;AAtDH;AAwDD;AACF,G;;;;wBAvmBc;AACb,aAAO,IAAP;AACD;;;wBAEkB;AACjB,aAAO,KAAP;AACD;;;wBAEQ;AACP,aAAO,KAAKrD,GAAZ;AACD,K;sBAEMvD,E,EAAI;AACT,WAAKuD,GAAL,GAAWvD,EAAX;AACD;;;wBAEU;AACT,aAAO,KAAKR,KAAZ;AACD;;;wBAEa;AACZ,aAAO,KAAKU,QAAZ;AACD;;;wBAEe;AACd,aAAO,KAAKuD,UAAZ;AACD,K;sBAEapD,S,EAAW;AACvB,WAAKoD,UAAL,GAAkBpD,SAAlB;AACD;;;wBAEe;AACd,aAAO,KAAKsD,UAAZ;AACD,K;sBAEapD,S,EAAW;AACvB,WAAKoD,UAAL,GAAkBpD,SAAlB;AACD;;;wBAEqB;AACpB,aAAO,KAAKqD,gBAAZ;AACD,K;sBAEmBvD,S,EAAW;AAC7B,WAAKuD,gBAAL,GAAwBvD,SAAxB;AACD;;;wBAEqB;AACpB,aAAO,KAAKwD,gBAAZ;AACD,K;sBAEmBtD,S,EAAW;AAC7B,WAAKsD,gBAAL,GAAwBtD,SAAxB;AACD;;;wBAEgB;AACf,UAAI,KAAKuG,WAAL,IAAoB,IAAxB,EAA8B;AAC5B,aAAKA,WAAL,GAAmB,yBAAe,KAAKtH,KAApB,EAA2B,KAAKsE,eAAhC,CAAnB;AACD;;AAED,aAAO,KAAKgD,WAAZ;AACD;;;wBAEmB;AAClB,aAAO,KAAK/F,SAAL,IAAkB,IAAlB,IAA0B,KAAKE,UAAL,IAAmB,IAApD;AACD;;;wBAEe;AACd,aAAO,KAAK8F,UAAZ;AACD,K;sBAEaC,S,EAAW;AACvB,WAAKtE,YAAL,GAAoBsE,UAAUhH,EAA9B;AACA,WAAK+G,UAAL,GAAkBC,SAAlB;AACD;;;wBAEiB;AAChB,aAAO,KAAKtE,YAAZ;AACD;;;wBAyIuB;AACtB,aAAO,KAAKnD,IAAL,CAAU0H,iBAAjB;AACD;;;wBAmBiB;AAChB,aAAO,0BAAgB,KAAK1H,IAAL,CAAU2H,WAA1B,EAAuC,KAAK5F,MAA5C,CAAP;AACD;;;wBAEqB;AACpB,aAAO,KAAKT,UAAL,CAAgBsG,eAAvB;AACD;;;wBAEkB;AACjB,UAAMC,iBAAiB,KAAK7H,IAAL,CAAU6H,cAAjC;AACA,UAAMC,SAAS,EAAf;;AAEA,4BAAuBD,cAAvB,yHAAuC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAA5BE,QAA4B;;AACrC,YAAMxB,QAAQ,KAAKjF,UAAL,CAAgB6E,GAAhB,CAAoB4B,QAApB,CAAd;;AAEA,YAAIxB,KAAJ,EAAW;AACT,cAAMyB,eAAezB,MAAMyB,YAA3B;;AAEA,cAAI,oBAAUC,SAAV,CAAoBD,YAApB,CAAJ,EAAuC;AACrCF,mBAAOI,IAAP,CAAYF,YAAZ;AACD;AACF;AACF;;AAED,aAAOF,OAAOK,IAAP,CAAY,IAAZ,CAAP;AACD;;;wBAE0B;AACzB;AACA,UAAI,KAAKnI,IAAL,CAAU2H,WAAV,CAAsBS,OAAtB,CAA8BC,MAA9B,KAAyC,CAAzC,IAA8C,KAAKrI,IAAL,CAAU2H,WAAV,CAAsBW,QAAxE,EAAkF;AAChF,eAAO,KAAP;AACD;;AAED;AACA,UAAI,KAAKvG,MAAL,IAAe,IAAf,IAAuB,KAAK/B,IAAL,CAAU2H,WAAV,CAAsBY,UAAjD,EAA6D;AAC3D,eAAO,KAAP;AACD;;AAED,aAAO,KAAKvI,IAAL,CAAU2H,WAAV,CAAsBa,SAA7B;AACD;;;wBAEY;AACX,aAAO,KAAKxI,IAAL,GAAY,KAAKA,IAAL,CAAUS,EAAtB,GAA2B,IAAlC;AACD;;;wBAEiB;AAChB,aAAO,KAAK+D,YAAZ;AACD;;;wBAEe;AACd,aAAO,KAAK5C,UAAZ;AACD,K;sBAEanB,E,EAAI;AAChB,UAAIA,OAAO,KAAKmB,UAAhB,EAA4B;AAC1B,aAAKA,UAAL,GAAkBnB,EAAlB;AACA,aAAK+D,YAAL,GAAoB,IAApB;AACD;AACF;;;sBAEWC,O,EAAS;AACnB,UAAIA,OAAJ,EAAa;AACX,aAAK7C,UAAL,GAAkB6C,QAAQhE,EAA1B;AACA,aAAK+D,YAAL,GAAoBC,QAAQgE,IAA5B;AACD,OAHD,MAGO;AACL,aAAK7G,UAAL,GAAkB,IAAlB;AACA,aAAK4C,YAAL,GAAoB,IAApB;AACD;AACF;;;wBAEoB;AACnB,aAAO,KAAKE,eAAZ;AACD;;;wBAEkB;AACjB,aAAO,KAAK5C,aAAZ;AACD,K;sBAYgBrB,E,EAAI;AACnB,UAAIA,OAAO,KAAKqB,aAAhB,EAA+B;AAC7B,aAAKA,aAAL,GAAqBrB,EAArB;AACA,aAAKiE,eAAL,GAAuB,IAAvB;AACD;AACF;;;sBAfcgE,I,EAAM;AACnB,UAAIA,IAAJ,EAAU;AACR,aAAK5G,aAAL,GAAqB4G,KAAKjI,EAA1B;AACA,aAAKiE,eAAL,GAAuBgE,KAAKC,QAA5B;AACD,OAHD,MAGO;AACL,aAAK7G,aAAL,GAAqB,IAArB;AACA,aAAK4C,eAAL,GAAuB,IAAvB;AACD;AACF;;;wBASe;AACd,aAAO,KAAKkE,UAAZ;AACD;;;wBAEiB;AAChB,aAAO,KAAK1G,YAAZ;AACD;;;wBAEmB;AAClB,aAAO,KAAKE,cAAZ;AACD;;;wBAEe;AACd,aAAO,KAAKI,UAAZ;AACD;;;wBAEiB;AAChB,aAAO,KAAKF,YAAZ;AACD;;;wBAEmB;AAClB,aAAO,KAAKsC,cAAZ;AACD;;;wBAEY;AACX,aAAO,KAAK5C,OAAZ;AACD,K;sBAEUD,M,EAAQ;AACjB,WAAKC,OAAL,GAAeD,MAAf;AACD;;;wBAEc;AACb,aAAO,KAAKP,SAAZ;AACD,K;sBAEYD,Q,EAAU;AACrB,WAAKC,SAAL,GAAiBD,QAAjB;AACD;;;wBAEe;AACd,aAAO,KAAKG,UAAZ;AACD,K;sBAEaD,S,EAAW;AACvB,WAAKC,UAAL,GAAkBD,SAAlB;AACD;;;wBAEwB;AACvB,aAAO,KAAKgB,mBAAZ;AACD,K;sBAEsBoG,Q,EAAU;AAC/B,WAAKpG,mBAAL,GAA2BoG,QAA3B;AACD;;;wBAEsB;AACrB,aAAO,KAAKlG,iBAAZ;AACD,K;sBAEoBkG,Q,EAAU;AAC7B,WAAKlG,iBAAL,GAAyBkG,QAAzB;AACD;;;wBAEc;AACb,aAAO,KAAKhG,SAAZ;AACD,K;sBAEYC,Q,EAAU;AACrB,WAAKD,SAAL,GAAiBC,QAAjB;AACD;;;wBAEW;AACV,aAAO,KAAKC,MAAZ;AACD,K;sBAESC,K,EAAO;AACf,WAAKD,MAAL,GAAcC,KAAd;AACD;;;wBAEY;AACX,aAAO,KAAKC,OAAZ;AACD,K;sBAEUC,M,EAAQ;AACjB,WAAKD,OAAL,GAAeC,MAAf;AACD;;;wBAEuB;AACtB,UAAI,CAAC,KAAK4F,aAAV,EAAyB;AACvB,eAAO,IAAP;AACD;;AAED,aAAO;AACLC,cAAM,OADD;AAELC,qBAAa,CACX,KAAKvH,SADM,EAEX,KAAKF,QAFM;AAFR,OAAP;AAOD;;;wBAEqB;AACpB,aAAO,KAAKsD,gBAAZ;AACD,K;sBAEmB0B,K,EAAO;AACzB,WAAK1B,gBAAL,GAAyB0B,SAAS,IAAT,GAAgB,CAACA,KAAjB,GAAyB,IAAlD;AACD;;;wBAEqB;AACpB,aAAO,KAAKzB,gBAAZ;AACD,K;sBAEmByB,K,EAAO;AACzB,WAAKzB,gBAAL,GAAyByB,SAAS,IAAT,GAAgB,CAACA,KAAjB,GAAyB,IAAlD;AACD;;;wBAEoB;AACnB,aAAO,KAAKxB,eAAZ;AACD,K;sBAEkBwB,K,EAAO;AACxB,WAAKxB,eAAL,GAAwBwB,SAAS,IAAT,GAAgB,CAACA,KAAjB,GAAyB,IAAjD;AACD;;;wBAEqB;AACpB,aAAO,KAAKvB,gBAAZ;AACD,K;sBAcmBuB,K,EAAO;AACzB,WAAKvB,gBAAL,GAAyBuB,SAAS,IAAT,GAAgB,CAACA,KAAjB,GAAyB,IAAlD;AACD;;;wBAdsB;AACrB,aAAO,KAAKrB,iBAAZ;AACD,K;sBAcoBqB,K,EAAO;AAC1B,WAAKrB,iBAAL,GAA0BqB,SAAS,IAAT,GAAgB,CAACA,KAAjB,GAAyB,IAAnD;AACD;;;wBAdqB;AACpB,aAAO,KAAKnB,gBAAZ;AACD,K;sBAcmBmB,K,EAAO;AACzB,WAAKnB,gBAAL,GAAyBmB,SAAS,IAAT,GAAgB,CAACA,KAAjB,GAAyB,IAAlD;AACD;;;wBAdqB;AACpB,aAAO,KAAKjB,gBAAZ;AACD,K;sBAcmBiB,K,EAAO;AACzB,WAAKjB,gBAAL,GAAyBiB,SAAS,IAAT,GAAgB,CAACA,KAAjB,GAAyB,IAAlD;AACD;;;wBAEqB;AACpB,aAAO,KAAKf,gBAAZ;AACD,K;sBAcmBe,K,EAAO;AACzB,WAAKf,gBAAL,GAAyBe,SAAS,IAAT,GAAgB,CAACA,KAAjB,GAAyB,IAAlD;AACD;;;wBAdsB;AACrB,aAAO,KAAKb,iBAAZ;AACD,K;sBAcoBa,K,EAAO;AAC1B,WAAKb,iBAAL,GAA0Ba,SAAS,IAAT,GAAgB,CAACA,KAAjB,GAAyB,IAAnD;AACD;;;wBAdqB;AACpB,aAAO,KAAKX,gBAAZ;AACD,K;sBAcmBW,K,EAAO;AACzB,WAAKX,gBAAL,GAAyBW,SAAS,IAAT,GAAgB,CAACA,KAAjB,GAAyB,IAAlD;AACD;;;wBAdqB;AACpB,aAAO,KAAKT,gBAAZ;AACD,K;sBAcmBS,K,EAAO;AACzB,WAAKT,gBAAL,GAAyBS,SAAS,IAAT,GAAgB,CAACA,KAAjB,GAAyB,IAAlD;AACD;;;wBAE0B;AACzB,aAAO,KAAK0C,eAAL,IAAwB,IAAxB,IAAgC,KAAKC,gBAAL,IAAyB,IAAhE;AACD;;;wBAE0B;AACzB,aAAO,KAAKC,eAAL,IAAwB,IAAxB,IAAgC,KAAKC,gBAAL,IAAyB,IAAhE;AACD;;;wBAEqB;AACpB,UAAI,KAAKC,oBAAT,EAA+B;AAC7B,eAAO;AACL9H,oBAAU,KAAK0H,eADV;AAELxH,qBAAW,KAAKyH,gBAFX;AAGLpG,oBAAU,KAAKwG,eAHV;AAIL5G,+BAAqB,KAAK6G;AAJrB,SAAP;AAMD;;AAED,aAAO,IAAP;AACD;;;wBAEqB;AACpB,UAAI,KAAKC,oBAAT,EAA+B;AAC7B,eAAO;AACLjI,oBAAU,KAAK4H,eADV;AAEL1H,qBAAW,KAAK2H,gBAFX;AAGLtG,oBAAU,KAAK2G,eAHV;AAIL/G,+BAAqB,KAAKgH;AAJrB,SAAP;AAMD;;AAED,aAAO,IAAP;AACD;;;;;;kBAnjBkB5J,M","file":"record.js","sourcesContent":["import Feature from './feature';\nimport FormValues from './values/form-values';\nimport TextUtils from './utils/text-utils';\nimport DateUtils from './utils/date-utils';\nimport StatusValue from './values/status-value';\nimport uuid from 'uuid';\nimport loadObject from './load-object';\n\nexport default class Record extends Feature {\n  constructor(attributes, form) {\n    super();\n\n    this._form = form || null;\n\n    this.updateFromAPIAttributes(attributes);\n  }\n\n  get isRecord() {\n    return true;\n  }\n\n  get isRepeatable() {\n    return false;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  set id(id) {\n    this._id = id;\n  }\n\n  get form() {\n    return this._form;\n  }\n\n  get version() {\n    return this._version;\n  }\n\n  get createdAt() {\n    return this._createdAt;\n  }\n\n  set createdAt(createdAt) {\n    this._createdAt = createdAt;\n  }\n\n  get updatedAt() {\n    return this._updatedAt;\n  }\n\n  set updatedAt(updatedAt) {\n    this._updatedAt = updatedAt;\n  }\n\n  get clientCreatedAt() {\n    return this._clientCreatedAt;\n  }\n\n  set clientCreatedAt(createdAt) {\n    this._clientCreatedAt = createdAt;\n  }\n\n  get clientUpdatedAt() {\n    return this._clientUpdatedAt;\n  }\n\n  set clientUpdatedAt(updatedAt) {\n    this._clientUpdatedAt = updatedAt;\n  }\n\n  get formValues() {\n    if (this._formValues == null) {\n      this._formValues = new FormValues(this._form, this._formValuesJSON);\n    }\n\n    return this._formValues;\n  }\n\n  get hasCoordinate() {\n    return this._latitude != null && this._longitude != null;\n  }\n\n  get changeset() {\n    return this._changeset;\n  }\n\n  set changeset(changeset) {\n    this._changesetID = changeset.id;\n    this._changeset = changeset;\n  }\n\n  get changesetID() {\n    return this._changesetID;\n  }\n\n  loadChangeset(dataSource, callback) {\n    return loadObject(this, dataSource, 'changeset', 'getChangeset', callback);\n  }\n\n  toJSON() {\n    const json = {};\n\n    json.form_id = this._form.id;\n\n    json.id = this.id || null;\n    json.version = this._version != null ? this._version : null;\n    json.created_at = DateUtils.formatISOTimestamp(this.createdAt);\n    json.updated_at = DateUtils.formatISOTimestamp(this.updatedAt);\n    json.client_created_at = DateUtils.formatISOTimestamp(this.clientCreatedAt);\n    json.client_updated_at = DateUtils.formatISOTimestamp(this.clientUpdatedAt);\n    json.form_values = this.formValues.toJSON();\n    json.latitude = this._latitude != null ? this._latitude : null;\n    json.longitude = this._longitude != null ? this._longitude : null;\n    json.project_id = this._projectID || null;\n    json.assigned_to_id = this._assignedToID || null;\n    json.status = this._status || null;\n\n    json.created_by_id = this._createdByID || null;\n    json.created_by = this._createdByName || null;\n    json.updated_by_id = this._updatedByID || null;\n    json.updated_by = this._updatedBy || null;\n\n    if (this._horizontalAccuracy != null) {\n      json.horizontal_accuracy = this._horizontalAccuracy;\n    }\n\n    if (this._verticalAccuracy != null) {\n      json.vertical_accuracy = this._verticalAccuracy;\n    }\n\n    if (this._altitude != null) {\n      json.altitude = this._altitude;\n    }\n\n    if (this._speed != null) {\n      json.speed = this._speed;\n    }\n\n    if (this._course != null) {\n      json.course = this._course;\n    }\n\n    if (this._changesetID) {\n      json.changeset_id = this._changesetID;\n    }\n\n    json.created_location = this.createdLocation;\n    json.updated_location = this.updatedLocation;\n\n    json.created_duration = this.createdDuration;\n    json.updated_duration = this.updatedDuration;\n    json.edited_duration = this.editedDuration;\n\n    return json;\n  }\n\n  updateFromAPIAttributes(attrs) {\n    const attributes = attrs || {};\n\n    this._id = attributes.id || uuid.v4();\n    this._version = attributes.version != null ? attributes.version : null;\n    this._createdAt = DateUtils.parseISOTimestamp(attributes.created_at);\n    this._updatedAt = DateUtils.parseISOTimestamp(attributes.updated_at);\n    this._clientCreatedAt = DateUtils.parseISOTimestamp(attributes.client_created_at);\n    this._clientUpdatedAt = DateUtils.parseISOTimestamp(attributes.client_updated_at);\n    this._formValuesJSON = attributes.form_values || {};\n    this._latitude = attributes.latitude != null ? attributes.latitude : null;\n    this._longitude = attributes.longitude != null ? attributes.longitude : null;\n    this._projectID = attributes.project_id || null;\n    this._projectName = attributes.project || null;\n    this._assignedToID = attributes.assigned_to_id || null;\n    this._assignedToName = attributes.assigned_to || null;\n    this._status = attributes.status || null;\n\n    this._createdByID = attributes.created_by_id || null;\n    this._createdByName = attributes.created_by || null;\n    this._updatedByID = attributes.updated_by_id || null;\n    this._updatedByName = attributes.updated_by || null;\n\n    this._horizontalAccuracy = attributes.horizontal_accuracy != null ? attributes.horizontal_accuracy : null;\n    this._verticalAccuracy = attributes.vertical_accuracy != null ? attributes.vertical_accuracy : null;\n    this._altitude = attributes.altitude != null ? attributes.altitude : null;\n    this._speed = attributes.speed != null ? attributes.speed : null;\n    this._course = attributes.course != null ? attributes.course : null;\n\n    this._changesetID = attributes.changeset_id || null;\n\n    this._createdDuration = attributes.created_duration != null ? attributes.created_duration : null;\n    this._updatedDuration = attributes.updated_duration != null ? attributes.updated_duration : null;\n    this._editedDuration = attributes.edited_duration != null ? attributes.edited_duration : null;\n\n    const createdLocation = attributes.created_location;\n\n    this._createdLatitude = attributes.created_latitude ? attributes.created_latitude : null;\n    this._createdLongitude = attributes.created_longitude ? attributes.created_longitude : null;\n    this._createdAltitude = attributes.created_altitude ? attributes.created_altitude : null;\n    this._createdAccuracy = attributes.created_horizontal_accuracy ? attributes.created_horizontal_accuracy : null;\n\n    if (createdLocation) {\n      this._createdLatitude = createdLocation.latitude;\n      this._createdLongitude = createdLocation.longitude;\n      this._createdAltitude = createdLocation.altitude;\n      this._createdAccuracy = createdLocation.horizontal_accuracy;\n    }\n\n    const updatedLocation = attributes.updated_location;\n\n    this._updatedLatitude = attributes.updated_latitude ? attributes.updated_latitude : null;\n    this._updatedLongitude = attributes.updated_longitude ? attributes.updated_longitude : null;\n    this._updatedAltitude = attributes.updated_altitude ? attributes.updated_altitude : null;\n    this._updatedAccuracy = attributes.updated_horizontal_accuracy ? attributes.updated_horizontal_accuracy : null;\n\n    if (updatedLocation) {\n      this._updatedLatitude = updatedLocation.latitude;\n      this._updatedLongitude = updatedLocation.longitude;\n      this._updatedAltitude = updatedLocation.altitude;\n      this._updatedAccuracy = updatedLocation.horizontal_accuracy;\n    }\n  }\n\n  updateTimestamps() {\n    const now = new Date();\n\n    if (this.clientCreatedAt == null) {\n      this.clientCreatedAt = now;\n    }\n\n    this.clientUpdatedAt = now;\n  }\n\n  get isGeometryEnabled() {\n    return this.form.isGeometryEnabled;\n  }\n\n  get(key, formValues) {\n    if (key === '@status') {\n      return this.statusValue;\n    }\n\n    return formValues.get(key);\n  }\n\n  set(key, value, formValues) {\n    if (key === '@status') {\n      this.status = value.textValue;\n      return;\n    }\n\n    formValues.set(key, value);\n  }\n\n  get statusValue() {\n    return new StatusValue(this.form.statusField, this.status);\n  }\n\n  get searchableValue() {\n    return this.formValues.searchableValue;\n  }\n\n  get displayValue() {\n    const titleFieldKeys = this.form.titleFieldKeys;\n    const titles = [];\n\n    for (const fieldKey of titleFieldKeys) {\n      const value = this.formValues.get(fieldKey);\n\n      if (value) {\n        const displayValue = value.displayValue;\n\n        if (TextUtils.isPresent(displayValue)) {\n          titles.push(displayValue);\n        }\n      }\n    }\n\n    return titles.join(', ');\n  }\n\n  get isStatusFieldEnabled() {\n    // invisible if there are no statuses or the status field is marked as hidden\n    if (this.form.statusField.choices.length === 0 || this.form.statusField.isHidden) {\n      return false;\n    }\n\n    // invisible if it's readonly and there's no status (nothing for the user to read)\n    if (this.status == null && this.form.statusField.isReadOnly) {\n      return false;\n    }\n\n    return this.form.statusField.isEnabled;\n  }\n\n  get formID() {\n    return this.form ? this.form.id : null;\n  }\n\n  get projectName() {\n    return this._projectName;\n  }\n\n  get projectID() {\n    return this._projectID;\n  }\n\n  set projectID(id) {\n    if (id !== this._projectID) {\n      this._projectID = id;\n      this._projectName = null;\n    }\n  }\n\n  set project(project) {\n    if (project) {\n      this._projectID = project.id;\n      this._projectName = project.name;\n    } else {\n      this._projectID = null;\n      this._projectName = null;\n    }\n  }\n\n  get assignedToName() {\n    return this._assignedToName;\n  }\n\n  get assignedToID() {\n    return this._assignedToID;\n  }\n\n  set assignedTo(user) {\n    if (user) {\n      this._assignedToID = user.id;\n      this._assignedToName = user.fullName;\n    } else {\n      this._assignedToID = null;\n      this._assignedToName = null;\n    }\n  }\n\n  set assignedToID(id) {\n    if (id !== this._assignedToID) {\n      this._assignedToID = id;\n      this._assignedToName = null;\n    }\n  }\n\n  get createdBy() {\n    return this._createdBy;\n  }\n\n  get createdByID() {\n    return this._createdByID;\n  }\n\n  get createdByName() {\n    return this._createdByName;\n  }\n\n  get updatedBy() {\n    return this._updatedBy;\n  }\n\n  get updatedByID() {\n    return this._updatedByID;\n  }\n\n  get updatedByName() {\n    return this._updatedByName;\n  }\n\n  get status() {\n    return this._status;\n  }\n\n  set status(status) {\n    this._status = status;\n  }\n\n  get latitude() {\n    return this._latitude;\n  }\n\n  set latitude(latitude) {\n    this._latitude = latitude;\n  }\n\n  get longitude() {\n    return this._longitude;\n  }\n\n  set longitude(longitude) {\n    this._longitude = longitude;\n  }\n\n  get horizontalAccuracy() {\n    return this._horizontalAccuracy;\n  }\n\n  set horizontalAccuracy(accuracy) {\n    this._horizontalAccuracy = accuracy;\n  }\n\n  get verticalAccuracy() {\n    return this._verticalAccuracy;\n  }\n\n  set verticalAccuracy(accuracy) {\n    this._verticalAccuracy = accuracy;\n  }\n\n  get altitude() {\n    return this._altitude;\n  }\n\n  set altitude(altitude) {\n    this._altitude = altitude;\n  }\n\n  get speed() {\n    return this._speed;\n  }\n\n  set speed(speed) {\n    this._speed = speed;\n  }\n\n  get course() {\n    return this._course;\n  }\n\n  set course(course) {\n    this._course = course;\n  }\n\n  get geometryAsGeoJSON() {\n    if (!this.hasCoordinate) {\n      return null;\n    }\n\n    return {\n      type: 'Point',\n      coordinates: [\n        this.longitude,\n        this.latitude\n      ]\n    };\n  }\n\n  get createdDuration() {\n    return this._createdDuration;\n  }\n\n  set createdDuration(value) {\n    this._createdDuration = (value != null ? +value : null);\n  }\n\n  get updatedDuration() {\n    return this._updatedDuration;\n  }\n\n  set updatedDuration(value) {\n    this._updatedDuration = (value != null ? +value : null);\n  }\n\n  get editedDuration() {\n    return this._editedDuration;\n  }\n\n  set editedDuration(value) {\n    this._editedDuration = (value != null ? +value : null);\n  }\n\n  get createdLatitude() {\n    return this._createdLatitude;\n  }\n\n  get createdLongitude() {\n    return this._createdLongitude;\n  }\n\n  get createdAltitude() {\n    return this._createdAltitude;\n  }\n\n  get createdAccuracy() {\n    return this._createdAccuracy;\n  }\n\n  set createdLatitude(value) {\n    this._createdLatitude = (value != null ? +value : null);\n  }\n\n  set createdLongitude(value) {\n    this._createdLongitude = (value != null ? +value : null);\n  }\n\n  set createdAltitude(value) {\n    this._createdAltitude = (value != null ? +value : null);\n  }\n\n  set createdAccuracy(value) {\n    this._createdAccuracy = (value != null ? +value : null);\n  }\n\n  get updatedLatitude() {\n    return this._updatedLatitude;\n  }\n\n  get updatedLongitude() {\n    return this._updatedLongitude;\n  }\n\n  get updatedAltitude() {\n    return this._updatedAltitude;\n  }\n\n  get updatedAccuracy() {\n    return this._updatedAccuracy;\n  }\n\n  set updatedLatitude(value) {\n    this._updatedLatitude = (value != null ? +value : null);\n  }\n\n  set updatedLongitude(value) {\n    this._updatedLongitude = (value != null ? +value : null);\n  }\n\n  set updatedAltitude(value) {\n    this._updatedAltitude = (value != null ? +value : null);\n  }\n\n  set updatedAccuracy(value) {\n    this._updatedAccuracy = (value != null ? +value : null);\n  }\n\n  get hasCreatedCoordinate() {\n    return this.createdLatitude != null && this.createdLongitude != null;\n  }\n\n  get hasUpdatedCoordinate() {\n    return this.updatedLatitude != null && this.updatedLongitude != null;\n  }\n\n  get createdLocation() {\n    if (this.hasCreatedCoordinate) {\n      return {\n        latitude: this.createdLatitude,\n        longitude: this.createdLongitude,\n        altitude: this.createdAltitude,\n        horizontal_accuracy: this.createdAccuracy\n      };\n    }\n\n    return null;\n  }\n\n  get updatedLocation() {\n    if (this.hasUpdatedCoordinate) {\n      return {\n        latitude: this.updatedLatitude,\n        longitude: this.updatedLongitude,\n        altitude: this.updatedAltitude,\n        horizontal_accuracy: this.updatedAccuracy\n      };\n    }\n\n    return null;\n  }\n\n  updateFromActionAttributes(attributes, role) {\n    for (const dataName of Object.keys(attributes)) {\n      switch (dataName) {\n        case 'project_id': {\n          if (attributes.project_id && role.canChangeProject) {\n            this.projectID = attributes.project_id;\n          }\n\n          break;\n        }\n\n        case 'assigned_to_id': {\n          if (attributes.assigned_to_id && role.canAssignRecords) {\n            this.assignedToID = attributes.assigned_to_id;\n          }\n\n          break;\n        }\n\n        case 'status': {\n          if (attributes.status && role.canChangeStatus) {\n            this.status = attributes.status;\n          }\n\n          break;\n        }\n\n        case 'latitude': {\n          if (attributes.latitude != null && attributes.latitude >= -90 && attributes.latitude <= 90) {\n            this.latitude = +attributes.latitude;\n          }\n\n          break;\n        }\n\n        case 'longitude': {\n          if (attributes.longitude != null && attributes.longitude >= -180 && attributes.longitude <= 180) {\n            this.longitude = +attributes.longitude;\n          }\n\n          break;\n        }\n\n        default: {\n          const element = this.form.elementsByDataName[dataName];\n          const value = attributes[dataName];\n\n          if (element && value != null) {\n            const formValue = this.formValues.createValueFromString(element, value);\n\n            if (formValue) {\n              this.formValues.set(element.key, formValue);\n            }\n          }\n\n          break;\n        }\n      }\n    }\n  }\n}\n"]}