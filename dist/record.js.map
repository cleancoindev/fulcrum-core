{"version":3,"sources":["../src/record.js"],"names":[],"mappings":"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","file":"record.js","sourcesContent":["import Feature from './feature';\nimport FormValues from './values/form-values';\nimport TextUtils from './utils/text-utils';\nimport DateUtils from './utils/date-utils';\nimport StatusValue from './values/status-value';\nimport uuid from 'uuid';\n\nexport default class Record extends Feature {\n  constructor(attributes, form) {\n    super();\n\n    this._form = form || null;\n\n    this.updateFromAPIAttributes(attributes);\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  set id(id) {\n    this._id = id;\n  }\n\n  get form() {\n    return this._form;\n  }\n\n  get version() {\n    return this._version;\n  }\n\n  get createdAt() {\n    return this._createdAt;\n  }\n\n  set createdAt(createdAt) {\n    this._createdAt = createdAt;\n  }\n\n  get updatedAt() {\n    return this._updatedAt;\n  }\n\n  set updatedAt(updatedAt) {\n    this._updatedAt = updatedAt;\n  }\n\n  get clientCreatedAt() {\n    return this._clientCreatedAt;\n  }\n\n  set clientCreatedAt(createdAt) {\n    this._clientCreatedAt = createdAt;\n  }\n\n  get clientUpdatedAt() {\n    return this._clientUpdatedAt;\n  }\n\n  set clientUpdatedAt(updatedAt) {\n    this._clientUpdatedAt = updatedAt;\n  }\n\n  get formValues() {\n    if (this._formValues == null) {\n      this._formValues = new FormValues(this._form, this._formValuesJSON);\n    }\n\n    return this._formValues;\n  }\n\n  get hasCoordinate() {\n    return this._latitude != null && this._longitude != null;\n  }\n\n  get changeset() {\n    return this._changeset;\n  }\n\n  set changeset(changeset) {\n    this._changesetID = changeset.id;\n    this._changeset = changeset;\n  }\n\n  get createdBy() {\n    return this._createdBy;\n  }\n\n  get updatedBy() {\n    return this._updatedBy;\n  }\n\n  loadChangeset(dataSource, callback) {\n    if (this._changesetID == null) {\n      callback();\n      return;\n    }\n\n    dataSource.getChangeset(this._changesetID, (err, changeset) => {\n      if (err) {\n        return callback(err);\n      }\n\n      this._changeset = changeset;\n\n      return callback();\n    });\n  }\n\n  toJSON() {\n    const json = {};\n\n    json.form_id = this._form.id;\n\n    json.id = this.id || null;\n    json.version = this._version || null;\n    json.created_at = DateUtils.formatISOTimestamp(this.createdAt);\n    json.updated_at = DateUtils.formatISOTimestamp(this.updatedAt);\n    json.client_created_at = DateUtils.formatISOTimestamp(this.clientCreatedAt);\n    json.client_updated_at = DateUtils.formatISOTimestamp(this.clientUpdatedAt);\n    json.form_values = this.formValues.toJSON();\n    json.latitude = this._latitude || null;\n    json.longitude = this._longitude || null;\n    json.project_id = this._projectID || null;\n    json.assigned_to_id = this._assignedToID || null;\n    json.status = this._status || null;\n\n    json.created_by_id = this._createdByID || null;\n    json.created_by = this._createdBy || null;\n    json.updated_by_id = this._updatedByID || null;\n    json.updated_by = this._updatedBy || null;\n\n    if (this._horizontalAccuracy != null) {\n      json.horizontal_accuracy = this._horizontalAccuracy;\n    }\n\n    if (this._verticalAccuracy != null) {\n      json.vertical_accuracy = this._verticalAccuracy;\n    }\n\n    if (this._altitude != null) {\n      json.altitude = this._altitude;\n    }\n\n    if (this._speed != null) {\n      json.speed = this._speed;\n    }\n\n    if (this._course != null) {\n      json.course = this._course;\n    }\n\n    if (this._changesetID) {\n      json.changeset_id = this._changesetID;\n    }\n\n    return json;\n  }\n\n  updateFromAPIAttributes(attrs) {\n    const attributes = attrs || {};\n\n    this._id = attributes.id || uuid.v4();\n    this._version = attributes.version || null;\n    this._createdAt = DateUtils.parseISOTimestamp(attributes.created_at);\n    this._updatedAt = DateUtils.parseISOTimestamp(attributes.updated_at);\n    this._clientCreatedAt = DateUtils.parseISOTimestamp(attributes.client_created_at);\n    this._clientUpdatedAt = DateUtils.parseISOTimestamp(attributes.client_updated_at);\n    this._formValuesJSON = attributes.form_values || {};\n    this._latitude = attributes.latitude || null;\n    this._longitude = attributes.longitude || null;\n    this._projectID = attributes.project_id || null;\n    this._assignedToID = attributes.assigned_to_id || null;\n    this._status = attributes.status || null;\n\n    this._createdByID = attributes.created_by_id || null;\n    this._createdBy = attributes.created_by || null;\n    this._updatedByID = attributes.updated_by_id || null;\n    this._updatedBy = attributes.updated_by || null;\n\n    this._horizontalAccuracy = attributes.horizontal_accuracy || null;\n    this._verticalAccuracy = attributes.vertical_accuracy || null;\n    this._altitude = attributes.altitude || null;\n    this._speed = attributes.speed || null;\n    this._course = attributes.course || null;\n\n    this._changesetID = attributes.changeset_id || null;\n  }\n\n  updateTimestamps() {\n    const now = new Date();\n\n    if (this.clientCreatedAt == null) {\n      this.clientCreatedAt = now;\n    }\n\n    this.clientUpdatedAt = now;\n  }\n\n  get isGeometryEnabled() {\n    return this.form.isGeometryEnabled;\n  }\n\n  get(key, formValues) {\n    if (key === '@status') {\n      return this.statusValue;\n    }\n\n    return formValues.get(key);\n  }\n\n  set(key, value, formValues) {\n    if (key === '@status') {\n      this.status = value.textValue;\n      return;\n    }\n\n    formValues.set(key, value);\n  }\n\n  get statusValue() {\n    return new StatusValue(this.form.statusField, this.status);\n  }\n\n  get displayValue() {\n    const titleFieldKeys = this.form.titleFieldKeys;\n    const titles = [];\n\n    for (const fieldKey of titleFieldKeys) {\n      const value = this.formValues.get(fieldKey);\n\n      if (value) {\n        const displayValue = value.displayValue;\n\n        if (TextUtils.isPresent(displayValue)) {\n          titles.push(displayValue);\n        }\n      }\n    }\n\n    return titles.join(', ');\n  }\n\n  get isStatusFieldEnabled() {\n    // invisible if there are no statuses or the status field is marked as hidden\n    if (this.form.statusField.choices.length === 0 || this.form.statusField.isHidden) {\n      return false;\n    }\n\n    // invisible if it's readonly and there's no status (nothing for the user to read)\n    if (this.status == null && this.form.statusField.isReadOnly) {\n      return false;\n    }\n\n    return this.form.statusField.isEnabled;\n  }\n\n  get projectID() {\n    return this._projectID;\n  }\n\n  set projectID(id) {\n    this._projectID = id;\n  }\n\n  get assignedToID() {\n    return this._assignedToID;\n  }\n\n  set assignedToID(id) {\n    this._assignedToID = id;\n  }\n\n  get status() {\n    return this._status;\n  }\n\n  set status(status) {\n    this._status = status;\n  }\n\n  get latitude() {\n    return this._latitude;\n  }\n\n  set latitude(latitude) {\n    this._latitude = latitude;\n  }\n\n  get longitude() {\n    return this._longitude;\n  }\n\n  set longitude(longitude) {\n    this._longitude = longitude;\n  }\n\n  get horizontalAccuracy() {\n    return this._horizontalAccuracy;\n  }\n\n  set horizontalAccuracy(accuracy) {\n    this._horizontalAccuracy = accuracy;\n  }\n\n  get verticalAccuracy() {\n    return this._verticalAccuracy;\n  }\n\n  set verticalAccuracy(accuracy) {\n    this._verticalAccuracy = accuracy;\n  }\n\n  get geometryAsGeoJSON() {\n    if (!this.hasCoordinate) {\n      return null;\n    }\n\n    return {\n      type: 'Point',\n      coordinates: [\n        this.longitude,\n        this.latitude\n      ]\n    };\n  }\n}\n"]}