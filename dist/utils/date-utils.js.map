{"version":3,"sources":["../../src/utils/date-utils.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAGA,IAAI,OAAO,IAAP;;AAEJ,IAAI,OAAO,IAAP,KAAgB,WAAhB,EAA6B;AAC/B,SAAO,OAAO,IAAP,CADwB;CAAjC;;IAIqB;;;;;;;8BACF,YAAY;AAC3B,aAAO,IAAI,IAAJ,CAAS,WAAW,OAAX,CAAmB,IAAnB,EAAyB,GAAzB,CAAT,CAAP,CAD2B;;;;8BAIZ,YAAY;AAC3B,UAAI,EAAE,UAAC,IAAc,IAAd,IAAuB,WAAW,MAAX,KAAsB,CAAtB,CAA1B,EAAoD;AACtD,eAAO,IAAP,CADsD;OAAxD;AAGA,aAAO,UAAP,CAJ2B;;;;+BAOX,MAAM;AACtB,UAAM,QAAQ,iBAAE,OAAF,CAAU,KAAK,QAAL,EAAV,EAA2B,CAA3B,EAA8B,GAA9B,CAAR,CADgB;AAEtB,UAAM,UAAU,iBAAE,OAAF,CAAU,KAAK,UAAL,EAAV,EAA6B,CAA7B,EAAgC,GAAhC,CAAV,CAFgB;;AAItB,aAAO,QAAQ,GAAR,GAAc,OAAd,CAJe;;;;mCAOF,iBAAiB;AACrC,aAAO,IAAI,IAAJ,CAAS,WAAW,eAAX,IAA8B,IAA9B,CAAhB,CADqC;;;;oCAIhB,MAAM;AAC3B,UAAI,QAAQ,IAAR,EAAc;AAChB,eAAO,IAAP,CADgB;OAAlB;AAGA,aAAO,KAAK,OAAL,GAAe,OAAf,CAAuB,CAAvB,CAAP,CAJ2B;;;;+BAOX,MAAM;AACtB,UAAM,OAAO,KAAK,WAAL,EAAP,CADgB;AAEtB,UAAM,QAAQ,iBAAE,OAAF,CAAU,KAAK,QAAL,KAAkB,CAAlB,EAAqB,CAA/B,EAAkC,GAAlC,CAAR,CAFgB;AAGtB,UAAM,MAAM,iBAAE,OAAF,CAAU,KAAK,OAAL,EAAV,EAA0B,CAA1B,EAA6B,GAA7B,CAAN,CAHgB;;AAKtB,aAAO,OAAO,GAAP,GAAa,KAAb,GAAqB,GAArB,GAA2B,GAA3B,CALe;;;;wCAQG,MAAM;AAC/B,UAAI,QAAQ,IAAR,EAAc;AAChB,eAAO,IAAP,CADgB;OAAlB;AAGA,aAAO,UAAU,qBAAV,CAAgC,IAAhC,CAAP,CAJ+B;;;;0CAOJ,MAAM;AACjC,UAAI,CAAC,iBAAO,eAAP,EAAD,EAA2B;AAC7B,YAAM,OAAO,KAAK,WAAL,EAAP,CADuB;AAE7B,YAAM,QAAQ,iBAAE,OAAF,CAAU,KAAK,QAAL,KAAkB,CAAlB,EAAqB,CAA/B,EAAkC,GAAlC,CAAR,CAFuB;AAG7B,YAAM,MAAM,iBAAE,OAAF,CAAU,KAAK,OAAL,EAAV,EAA0B,CAA1B,EAA6B,GAA7B,CAAN,CAHuB;AAI7B,eAAO,OAAO,GAAP,GAAa,KAAb,GAAqB,GAArB,GAA2B,GAA3B,CAJsB;OAA/B;;AAOA,UAAM,UAAU;AACd,cAAM,SAAN;AACA,eAAO,MAAP;AACA,aAAK,SAAL;OAHI,CAR2B;;AAcjC,aAAO,IAAI,KAAK,cAAL,CAAoB,iBAAO,aAAP,EAAxB,EAAgD,OAAhD,EAAyD,MAAzD,CAAgE,IAAhE,CAAP,CAdiC;;;;SA7ChB","file":"date-utils.js","sourcesContent":["import Locale from './locale';\nimport _ from 'lodash';\n\nlet intl = null;\n\nif (typeof Intl !== 'undefined') {\n  intl = global.Intl;\n}\n\nexport default class DateUtils {\n  static parseDate(dateString) {\n    return new Date(dateString.replace(/-/g, '/'));\n  }\n\n  static parseTime(timeString) {\n    if (!((timeString != null) && timeString.length === 5)) {\n      return null;\n    }\n    return timeString;\n  }\n\n  static formatTime(date) {\n    const hours = _.padLeft(date.getHours(), 2, '0');\n    const minutes = _.padLeft(date.getMinutes(), 2, '0');\n\n    return hours + ':' + minutes;\n  }\n\n  static parseTimestamp(timestampString) {\n    return new Date(parseFloat(timestampString) * 1000);\n  }\n\n  static formatTimestamp(date) {\n    if (date == null) {\n      return null;\n    }\n    return date.getTime().toFixed(3);\n  }\n\n  static formatDate(date) {\n    const year = date.getFullYear();\n    const month = _.padLeft(date.getMonth() + 1, 2, '0');\n    const day = _.padLeft(date.getDate(), 2, '0');\n\n    return year + '-' + month + '-' + day;\n  }\n\n  static formatLocalizedDate(date) {\n    if (date == null) {\n      return null;\n    }\n    return DateUtils.__formatLocalizedDate(date);\n  }\n\n  static __formatLocalizedDate(date) {\n    if (!Locale.supportsECMA402()) {\n      const year = date.getFullYear();\n      const month = _.padLeft(date.getMonth() + 1, 2, '0');\n      const day = _.padLeft(date.getDate(), 2, '0');\n      return year + '-' + month + '-' + day;\n    }\n\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n\n    return new intl.DateTimeFormat(Locale.currentLocale(), options).format(date);\n  }\n}\n"]}