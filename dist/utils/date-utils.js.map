{"version":3,"sources":["../../src/utils/date-utils.js"],"names":["intl","Intl","global","DateUtils","parseDate","dateString","date","Date","replace","isNaN","getTime","parseTime","timeString","length","split","hours","minutes","formatTime","getHours","getMinutes","formatTimeSeconds","seconds","milliseconds","ss","div","mm","hh","ms","h","Math","floor","m","s","u","formatTimeParts","parseISOTimestamp","timestampString","parseEpochTimestamp","parseFloat","formatISOTimestamp","toISOString","formatEpochTimestamp","toFixed","isValidTime","parts","hourPart","minutePart","hour","minute","isValidDate","yearPart","monthPart","dayPart","year","month","day","parsed","formatDate","getFullYear","getMonth","getDate","formatLocalizedDate","__formatLocalizedDate","formatLocalizedTimestamp","toLocaleString","formatRelativeTimestamp","Locale","supportsECMA402","options","result","DateTimeFormat","currentLocale","format","ex"],"mappings":"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","sourcesContent":["import Locale from './locale';\nimport padStart from 'lodash.padstart';\nimport relativeDate from 'relative-date';\n\nlet intl = null;\n\nif (typeof Intl !== 'undefined') {\n  intl = global.Intl;\n}\n\nexport default class DateUtils {\n  static parseDate(dateString) {\n    const date = new Date(dateString.replace(/-/g, '/'));\n\n    if (date == null || isNaN(date.getTime())) {\n      return null;\n    }\n\n    return date;\n  }\n\n  static parseTime(timeString) {\n    if (!((timeString != null) && timeString.length === 5)) {\n      return null;\n    }\n\n    let [ hours, minutes ] = timeString.split(':');\n\n    if (hours == null || minutes == null) {\n      return null;\n    }\n\n    hours = +hours;\n    minutes = +minutes;\n\n    if (isNaN(hours) || isNaN(minutes)) {\n      return null;\n    }\n\n    return (hours * 60) + minutes;\n  }\n\n  static formatTime(date) {\n    const hours = padStart(date.getHours(), 2, '0');\n    const minutes = padStart(date.getMinutes(), 2, '0');\n\n    return hours + ':' + minutes;\n  }\n\n  static formatTimeSeconds(seconds, milliseconds = false) {\n    const ss = +seconds % 60;\n    const div = (+seconds - ss) / 60;\n    const mm = div % 60;\n    const hh = (div - mm) / 60;\n    const ms = (ss * 1000 % 1000);\n\n    const h = padStart(Math.floor(hh), 2, '0');\n    const m = padStart(Math.floor(mm), 2, '0');\n    const s = padStart(Math.floor(ss), 2, '0');\n    const u = padStart(Math.floor(ms), 3, '0');\n\n    return h + ':' + m + ':' + s + (milliseconds ? '.' + u : '');\n  }\n\n  static formatTimeParts(hours, minutes, seconds) {\n    const h = padStart(+hours, 2, '0');\n    const m = padStart(+minutes, 2, '0');\n    const s = padStart(+seconds, 2, '0');\n\n    return h + ':' + m + ':' + s;\n  }\n\n  static parseISOTimestamp(timestampString) {\n    if (!timestampString) {\n      return null;\n    }\n\n    return new Date(timestampString);\n  }\n\n  static parseEpochTimestamp(timestampString) {\n    if (!timestampString) {\n      return null;\n    }\n\n    return new Date(parseFloat(timestampString) * 1000);\n  }\n\n  static formatISOTimestamp(date) {\n    if (date == null || isNaN(date.getTime())) {\n      return null;\n    }\n    return date.toISOString();\n  }\n\n  static formatEpochTimestamp(date) {\n    if (date == null || isNaN(date.getTime())) {\n      return null;\n    }\n    return (date.getTime() / 1000).toFixed(3);\n  }\n\n  static isValidTime(timeString) {\n    if (timeString == null) {\n      return true;\n    }\n\n    if (timeString.length !== 5) {\n      return false;\n    }\n\n    const parts = timeString.split(':');\n\n    if (parts.length !== 2) {\n      return false;\n    }\n\n    const [ hourPart, minutePart ] = parts;\n\n    if (hourPart.length !== 2 || minutePart.length !== 2) {\n      return false;\n    }\n\n    const hour = +hourPart;\n    const minute = +minutePart;\n\n    if (isNaN(hour) || isNaN(minute)) {\n      return false;\n    }\n\n    if (hour < 0 || hour >= 24) {\n      return false;\n    }\n\n    if (minute < 0 || minute >= 60) {\n      return false;\n    }\n\n    return true;\n  }\n\n  static isValidDate(dateString) {\n    if (dateString == null) {\n      return true;\n    }\n\n    if (dateString.length !== 10) {\n      return false;\n    }\n\n    const parts = dateString.split('-');\n\n    if (parts.length !== 3) {\n      return false;\n    }\n\n    const [ yearPart, monthPart, dayPart ] = parts;\n\n    if (yearPart.length !== 4 ||\n        monthPart.length !== 2 ||\n        dayPart.length !== 2) {\n      return false;\n    }\n\n    const year = +yearPart;\n    const month = +monthPart;\n    const day = +dayPart;\n\n    if (isNaN(year) || isNaN(month) || isNaN(day)) {\n      return false;\n    }\n\n    const parsed = DateUtils.parseDate(dateString);\n\n    return parsed && !isNaN(parsed);\n  }\n\n  static formatDate(date) {\n    if (date == null) {\n      return null;\n    }\n\n    const year = date.getFullYear();\n    const month = padStart(date.getMonth() + 1, 2, '0');\n    const day = padStart(date.getDate(), 2, '0');\n\n    return year + '-' + month + '-' + day;\n  }\n\n  static formatLocalizedDate(date) {\n    if (date == null) {\n      return null;\n    }\n\n    return DateUtils.__formatLocalizedDate(date);\n  }\n\n  static formatLocalizedTimestamp(date) {\n    if (date == null) {\n      return null;\n    }\n\n    return date.toLocaleString();\n  }\n\n  static formatRelativeTimestamp(date) {\n    return relativeDate(date);\n  }\n\n  static __formatLocalizedDate(date) {\n    if (!Locale.supportsECMA402()) {\n      const year = date.getFullYear();\n      const month = padStart(date.getMonth() + 1, 2, '0');\n      const day = padStart(date.getDate(), 2, '0');\n      return year + '-' + month + '-' + day;\n    }\n\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n\n    let result = null;\n\n    try {\n      result = new intl.DateTimeFormat(Locale.currentLocale(), options).format(date);\n    } catch (ex) {\n      // RangeError: Provided date is not in valid range.\n    }\n\n    return result;\n  }\n}\n"],"file":"date-utils.js"}