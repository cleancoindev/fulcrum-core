{"version":3,"sources":["../../src/utils/date-utils.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAGA,IAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;AAC/B,MAAI,GAAG,MAAM,CAAC,IAAI,CAAC;CACpB;;AAEc,MAAM,SAAS,CAAC;AAC7B,SAAO,SAAS,CAAC,UAAU,EAAE;AAC3B,WAAO,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;GAChD;;AAED,SAAO,SAAS,CAAC,UAAU,EAAE;AAC3B,QAAI,EAAE,AAAC,UAAU,IAAI,IAAI,IAAK,UAAU,CAAC,MAAM,KAAK,CAAC,CAAA,AAAC,EAAE;AACtD,aAAO,IAAI,CAAC;KACb;AACD,WAAO,UAAU,CAAC;GACnB;;AAED,SAAO,cAAc,CAAC,eAAe,EAAE;AACrC,WAAO,IAAI,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,CAAC;GACrD;;AAED,SAAO,eAAe,CAAC,IAAI,EAAE;AAC3B,QAAI,IAAI,IAAI,IAAI,EAAE;AAChB,aAAO,IAAI,CAAC;KACb;AACD,WAAO,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;GAClC;;AAED,SAAO,mBAAmB,CAAC,IAAI,EAAE;AAC/B,QAAI,IAAI,IAAI,IAAI,EAAE;AAChB,aAAO,IAAI,CAAC;KACb;AACD,WAAO,SAAS,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;GAC9C;;AAED,SAAO,qBAAqB,CAAC,IAAI,EAAE;AACjC,QAAI,CAAC,iBAAO,eAAe,EAAE,EAAE;AAC7B,YAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AAChC,YAAM,KAAK,GAAG,iBAAE,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AACrD,YAAM,GAAG,GAAG,iBAAE,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AAC9C,aAAO,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;KACvC;;AAED,UAAM,OAAO,GAAG;AACd,UAAI,EAAE,SAAS;AACf,WAAK,EAAE,MAAM;AACb,SAAG,EAAE,SAAS;KACf,CAAC;;AAEF,WAAO,IAAI,IAAI,CAAC,cAAc,CAAC,iBAAO,aAAa,EAAE,EAAE,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;GAC9E;CACF;kBA9CoB,SAAS","file":"date-utils.js","sourcesContent":["import Locale from './locale';\nimport _ from 'lodash';\n\nlet intl = null;\n\nif (typeof Intl !== 'undefined') {\n  intl = global.Intl;\n}\n\nexport default class DateUtils {\n  static parseDate(dateString) {\n    return new Date(dateString.replace(/-/g, '/'));\n  }\n\n  static parseTime(timeString) {\n    if (!((timeString != null) && timeString.length === 5)) {\n      return null;\n    }\n    return timeString;\n  }\n\n  static parseTimestamp(timestampString) {\n    return new Date(parseFloat(timestampString) * 1000);\n  }\n\n  static formatTimestamp(date) {\n    if (date == null) {\n      return null;\n    }\n    return date.getTime().toFixed(3);\n  }\n\n  static formatLocalizedDate(date) {\n    if (date == null) {\n      return null;\n    }\n    return DateUtils.__formatLocalizedDate(date);\n  }\n\n  static __formatLocalizedDate(date) {\n    if (!Locale.supportsECMA402()) {\n      const year = date.getFullYear();\n      const month = _.padLeft(date.getMonth() + 1, 2, '0');\n      const day = _.padLeft(date.getDate(), 2, '0');\n      return year + '-' + month + '-' + day;\n    }\n\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n\n    return new intl.DateTimeFormat(Locale.currentLocale(), options).format(date);\n  }\n}\n"]}