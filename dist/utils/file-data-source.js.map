{"version":3,"sources":["../../src/utils/file-data-source.js"],"names":["FileDataSource","root","toString","json","jsonPath","JSON","parse","readFileSync","getChoiceList","id","callback","join","choice_list","getClassificationSet","classification_set","getForm","form","getUsers","params","getProjects"],"mappings":";;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;IAEqBA,c;AACnB,0BAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKA,IAAL,GAAYA,KAAKC,QAAL,EAAZ;AACD;;2BAEDC,I,iBAAKC,Q,EAAU;AACb,WAAOC,KAAKC,KAAL,CAAW,aAAGC,YAAH,CAAgBH,QAAhB,EAA0BF,QAA1B,EAAX,CAAP;AACD,G;;2BAEDM,a,0BAAcC,E,EAAIC,Q,EAAU;AAC1B,QAAMN,WAAW,eAAKO,IAAL,CAAU,KAAKV,IAAf,EAAqB,cAArB,EAAqCQ,KAAK,OAA1C,CAAjB;;AAEA,WAAOC,SAAS,IAAT,EAAe,yBAAe,KAAKP,IAAL,CAAUC,QAAV,EAAoBQ,WAAnC,CAAf,CAAP;AACD,G;;2BAEDC,oB,iCAAqBJ,E,EAAIC,Q,EAAU;AACjC,QAAMN,WAAW,eAAKO,IAAL,CAAU,KAAKV,IAAf,EAAqB,qBAArB,EAA4CQ,KAAK,OAAjD,CAAjB;;AAEA,WAAOC,SAAS,IAAT,EAAe,gCAAsB,KAAKP,IAAL,CAAUC,QAAV,EAAoBU,kBAA1C,CAAf,CAAP;AACD,G;;2BAEDC,O,oBAAQN,E,EAAIC,Q,EAAU;AACpB,QAAMN,WAAW,eAAKO,IAAL,CAAU,KAAKV,IAAf,EAAqB,OAArB,EAA8BQ,KAAK,OAAnC,CAAjB;;AAEA,WAAOC,SAAS,IAAT,EAAe,mBAAS,KAAKP,IAAL,CAAUC,QAAV,EAAoBY,IAA7B,CAAf,CAAP;AACD,G;;2BAEDC,Q,qBAASC,M,EAAQR,Q,EAAU;AACzB,WAAOA,SAAS,IAAT,EAAe,EAAf,CAAP;AACD,G;;2BAEDS,W,wBAAYD,M,EAAQR,Q,EAAU;AAC5B,WAAOA,SAAS,IAAT,EAAe,EAAf,CAAP;AACD,G;;;;;kBAjCkBV,c","file":"file-data-source.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nimport Form from '../form';\nimport ChoiceList from '../choice-list';\nimport ClassificationSet from '../classification-set';\n\nexport default class FileDataSource {\n  constructor(root) {\n    this.root = root.toString();\n  }\n\n  json(jsonPath) {\n    return JSON.parse(fs.readFileSync(jsonPath).toString());\n  }\n\n  getChoiceList(id, callback) {\n    const jsonPath = path.join(this.root, 'choice_lists', id + '.json');\n\n    return callback(null, new ChoiceList(this.json(jsonPath).choice_list));\n  }\n\n  getClassificationSet(id, callback) {\n    const jsonPath = path.join(this.root, 'classification_sets', id + '.json');\n\n    return callback(null, new ClassificationSet(this.json(jsonPath).classification_set));\n  }\n\n  getForm(id, callback) {\n    const jsonPath = path.join(this.root, 'forms', id + '.json');\n\n    return callback(null, new Form(this.json(jsonPath).form));\n  }\n\n  getUsers(params, callback) {\n    return callback(null, []);\n  }\n\n  getProjects(params, callback) {\n    return callback(null, []);\n  }\n}\n"]}