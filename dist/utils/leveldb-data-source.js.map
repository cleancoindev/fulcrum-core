{"version":3,"sources":["../../src/utils/leveldb-data-source.js"],"names":["CACHE_VERSION","LevelDBDataSource","db","cacheVersion","callbacks","initialize","callback","formVersions","choiceListVersions","classificationSetVersions","objects","checkVersion","Object","keys","id","push","type","version","getVersions","err","versions","async","each","object","cb","key","del","checkAlreadyFetching","length","invokeCallbacks","handler","get","value","notFound","JSON","parse","put","stringify","join","getChoiceList","json","ChoiceList","getClassificationSet","ClassificationSet","getForm","Form","getChoiceListComplete","updateObject","getClassificationSetComplete","getFormComplete","updateVersion","deleteAll","createKeyStream","on"],"mappings":"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","file":"leveldb-data-source.js","sourcesContent":["import ChoiceList from '../choice-list';\nimport ClassificationSet from '../classification-set';\nimport Form from '../form';\nimport async from 'async';\n\nconst CACHE_VERSION = 1;\n\nexport default class LevelDBDataSource {\n  constructor(db, cacheVersion) {\n    this.db = db;\n    this.callbacks = [];\n    this.cacheVersion = cacheVersion || CACHE_VERSION;\n  }\n\n  initialize({formVersions, choiceListVersions, classificationSetVersions}, callback) {\n    const objects = [];\n\n    this.checkVersion(() => {\n      for (const id of Object.keys(formVersions)) {\n        objects.push({type: 'form', id, version: formVersions[id]});\n      }\n\n      for (const id of Object.keys(choiceListVersions)) {\n        objects.push({type: 'choice-list', id, version: choiceListVersions[id]});\n      }\n\n      for (const id of Object.keys(classificationSetVersions)) {\n        objects.push({type: 'classification-set', id, version: classificationSetVersions[id]});\n      }\n\n      this.getVersions((err, versions) => {\n        if (err) {\n          return callback(err);\n        }\n\n        return async.each(objects, (object, cb) => {\n          const key = this.key(object.type, object.id);\n          const version = object.version;\n\n          // delete the object from the cache if the versions don't match\n          if (versions[key] == null || versions[key] !== version) {\n            return this.del(key, cb);\n          }\n\n          return cb(err);\n        }, callback);\n      });\n    });\n  }\n\n  checkAlreadyFetching(id, callback) {\n    if (!this.callbacks[id]) {\n      this.callbacks[id] = [];\n    }\n\n    this.callbacks[id].push(callback);\n\n    return this.callbacks[id].length > 1;\n  }\n\n  invokeCallbacks(id, err, object) {\n    for (const handler of this.callbacks[id]) {\n      handler(err, object);\n    }\n\n    delete this.callbacks[id];\n  }\n\n  get(key, callback) {\n    return this.db.get(key, (err, value) => {\n      if (err && err.notFound) {\n        return callback(null, null);\n      }\n\n      return callback(err, value && JSON.parse(value));\n    });\n  }\n\n  del(key, callback) {\n    return this.db.del(key, callback);\n  }\n\n  put(key, value, callback) {\n    return this.db.put(key, JSON.stringify(value), callback);\n  }\n\n  key(type, id) {\n    return [ type, id ].join(':');\n  }\n\n  getChoiceList(id, callback) {\n    if (this.checkAlreadyFetching(id, callback)) {\n      return;\n    }\n\n    this.get(this.key('choice-list', id), (err, json) => {\n      this.invokeCallbacks(id, err, json ? new ChoiceList(json) : null);\n    });\n  }\n\n  getClassificationSet(id, callback) {\n    if (this.checkAlreadyFetching(id, callback)) {\n      return;\n    }\n\n    this.get(this.key('classification-set', id), (err, json) => {\n      this.invokeCallbacks(id, err, json ? new ClassificationSet(json) : null);\n    });\n  }\n\n  getForm(id, callback) {\n    if (this.checkAlreadyFetching(id, callback)) {\n      return;\n    }\n\n    this.get(this.key('form', id), (err, json) => {\n      this.invokeCallbacks(id, err, json ? new Form(json) : null);\n    });\n  }\n\n  getChoiceListComplete(id, object, callback) {\n    this.updateObject(this.key('choice-list', id), object, callback);\n  }\n\n  getClassificationSetComplete(id, object, callback) {\n    this.updateObject(this.key('classification-set', id), object, callback);\n  }\n\n  getFormComplete(id, object, callback) {\n    this.updateObject(this.key('form', id), object, callback);\n  }\n\n  updateObject(key, object, callback) {\n    this.put(key, object, (err) => {\n      if (err) {\n        return callback(err);\n      }\n\n      return this.updateVersion(key, object.version, callback);\n    });\n  }\n\n  getVersions(callback) {\n    this.get('versions', (err, object) => {\n      if (err) {\n        return callback(err);\n      }\n\n      return callback(null, object || {});\n    });\n  }\n\n  updateVersion(key, version, callback) {\n    this.getVersions((err, versions) => {\n      if (err) {\n        return callback(err);\n      }\n\n      versions[key] = version;\n\n      this.put('versions', versions, callback);\n\n      return null;\n    });\n  }\n\n  checkVersion(callback) {\n    this.get('version', (err, version) => {\n      if (err) {\n        return callback(err);\n      }\n\n      if (version !== this.cacheVersion) {\n        this.deleteAll((err) => {\n          if (err) {\n            return callback(err);\n          }\n\n          return this.put('version', this.cacheVersion, callback);\n        });\n\n        return null;\n      }\n\n      return callback();\n    });\n  }\n\n  deleteAll(callback) {\n    const keys = [];\n\n    this.db.createKeyStream()\n      .on('data', (key) => {\n        keys.push(key);\n      })\n      .on('close', () => {\n        async.each(keys, (key, cb) => {\n          this.del(key, cb);\n        }, callback);\n      });\n  }\n}\n"]}