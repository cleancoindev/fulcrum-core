{"version":3,"sources":["../../src/validation/length-validation-error.js"],"names":[],"mappings":"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","file":"length-validation-error.js","sourcesContent":["import ElementValidationError from './element-validation-error';\nimport {format} from 'util';\n\nconst AT_LEAST = 'at-least';\nconst AT_MOST = 'at-most';\nconst BETWEEN = 'between';\nconst EXACTLY = 'exactly';\n\nexport default class LengthValidationError extends ElementValidationError {\n  constructor(element) {\n    super(element);\n\n    if (element.hasMinLength && element.hasMaxLength && element.minLength === element.maxLength) {\n      this.type = EXACTLY;\n    } else if (element.hasMinLength && element.hasMaxLength) {\n      this.type = BETWEEN;\n    } else if (element.hasMinLength) {\n      this.type = AT_LEAST;\n    } else if (element.hasMaxLength) {\n      this.type = AT_MOST;\n    }\n  }\n\n  get message() {\n    if (this.element.isTextElement) {\n      return this.textElementMessage;\n    } else if (this.element.isChoiceElement) {\n      return this.choiceElementMessage;\n    } else if (this.element.isPhotoElement) {\n      return this.photoElementMessage;\n    } else if (this.element.isVideoElement) {\n      return this.videoElementMessage;\n    } else if (this.element.isAudioElement) {\n      return this.audioElementMessage;\n    } else if (this.element.isRepeatableElement) {\n      return this.repeatableElementMessage;\n    }\n\n    return '';\n  }\n\n  get isAtLeastError() {\n    return this.type === AT_LEAST;\n  }\n\n  get isAtMostError() {\n    return this.type === AT_MOST;\n  }\n\n  get isBetweenError() {\n    return this.type === BETWEEN;\n  }\n\n  get isExactlyError() {\n    return this.type === EXACTLY;\n  }\n\n  get textElementMessage() {\n    if (this.isAtLeastError) {\n      return this.messageWithFormats(\"The field '%s' must have at least 1 character.\",\n                                     \"The field '%s' must have at least %s characters.\",\n                                     this.element.minLength);\n    } else if (this.isAtMostError) {\n      return this.messageWithFormats(\"The field '%s' cannot have more than 1 character.\",\n                                     \"The field '%s' cannot have more than %s characters.\",\n                                     this.element.maxLength);\n    } else if (this.isBetweenError) {\n      return format(\"The field '%s' must have between %s and %s characters.\",\n                    this.label,\n                    this.element.minLength,\n                    this.element.maxLength);\n    } else if (this.isExactlyError) {\n      return this.messageWithFormats(\"The field '%s' must have exactly 1 character.\",\n                                     \"The field '%s' must have exactly %s characters.\",\n                                     this.element.minLength);\n    }\n\n    return '';\n  }\n\n  get photoElementMessage() {\n    if (this.isAtLeastError) {\n      return this.messageWithFormats(\"The field '%s' must have at least 1 photo.\",\n                                     \"The field '%s' must have at least %s photos.\",\n                                     this.element.minLength);\n    } else if (this.isAtMostError) {\n      return this.messageWithFormats(\"The field '%s' cannot have more than 1 photo.\",\n                                     \"The field '%s' cannot have more than %s photos.\",\n                                     this.element.maxLength);\n    } else if (this.isBetweenError) {\n      return format(\"The field '%s' must have between %s and %s photos.\",\n                    this.label,\n                    this.element.minLength,\n                    this.element.maxLength);\n    } else if (this.isExactlyError) {\n      return this.messageWithFormats(\"The field '%s' must have exactly 1 photo.\",\n                                     \"The field '%s' must have exactly %s photos.\",\n                                     this.element.minLength);\n    }\n\n    return '';\n  }\n\n  get videoElementMessage() {\n    if (this.isAtLeastError) {\n      return this.messageWithFormats(\"The field '%s' must have at least 1 video.\",\n                                     \"The field '%s' must have at least %s videos.\",\n                                     this.element.minLength);\n    } else if (this.isAtMostError) {\n      return this.messageWithFormats(\"The field '%s' cannot have more than 1 video.\",\n                                     \"The field '%s' cannot have more than %s videos.\",\n                                     this.element.maxLength);\n    } else if (this.isBetweenError) {\n      return format(\"The field '%s' must have between %s and %s videos.\",\n                    this.label,\n                    this.element.minLength,\n                    this.element.maxLength);\n    } else if (this.isExactlyError) {\n      return this.messageWithFormats(\"The field '%s' must have exactly 1 video.\",\n                                     \"The field '%s' must have exactly %s videos.\",\n                                     this.element.minLength);\n    }\n\n    return '';\n  }\n\n  get audioElementMessage() {\n    if (this.isAtLeastError) {\n      return this.messageWithFormats(\"The field '%s' must have at least 1 audio file.\",\n                                     \"The field '%s' must have at least %s audio files.\",\n                                     this.element.minLength);\n    } else if (this.isAtMostError) {\n      return this.messageWithFormats(\"The field '%s' cannot have more than 1 audio file.\",\n                                     \"The field '%s' cannot have more than %s audio files.\",\n                                     this.element.maxLength);\n    } else if (this.isBetweenError) {\n      return format(\"The field '%s' must have between %s and %s audio files.\",\n                    this.label,\n                    this.element.minLength,\n                    this.element.maxLength);\n    } else if (this.isExactlyError) {\n      return this.messageWithFormats(\"The field '%s' must have exactly 1 audio file.\",\n                                     \"The field '%s' must have exactly %s audio files.\",\n                                     this.element.minLength);\n    }\n\n    return '';\n  }\n\n  get choiceElementMessage() {\n    if (this.isAtLeastError) {\n      return this.messageWithFormats(\"The field '%s' must have at least 1 choice.\",\n                                     \"The field '%s' must have at least %s choices.\",\n                                     this.element.minLength);\n    } else if (this.isAtMostError) {\n      return this.messageWithFormats(\"The field '%s' cannot have more than 1 choice.\",\n                                     \"The field '%s' cannot have more than %s choices.\",\n                                     this.element.maxLength);\n    } else if (this.isBetweenError) {\n      return format(\"The field '%s' must have between %s and %s choices.\",\n                    this.label,\n                    this.element.minLength,\n                    this.element.maxLength);\n    } else if (this.isExactlyError) {\n      return this.messageWithFormats(\"The field '%s' must have exactly 1 choice.\",\n                                     \"The field '%s' must have exactly %s choices.\",\n                                     this.element.minLength);\n    }\n\n    return '';\n  }\n\n  get repeatableElementMessage() {\n    if (this.isAtLeastError) {\n      return this.messageWithFormats(\"The field '%s' must have at least 1 item.\",\n                                     \"The field '%s' must have at least %s items.\",\n                                     this.element.minLength);\n    } else if (this.isAtMostError) {\n      return this.messageWithFormats(\"The field '%s' cannot have more than 1 item.\",\n                                     \"The field '%s' cannot have more than %s items.\",\n                                     this.element.maxLength);\n    } else if (this.isBetweenError) {\n      return format(\"The field '%s' must have between %s and %s items.\",\n                    this.label,\n                    this.element.minLength,\n                    this.element.maxLength);\n    } else if (this.isExactlyError) {\n      return this.messageWithFormats(\"The field '%s' must have exactly 1 item.\",\n                                     \"The field '%s' must have exactly %s items.\",\n                                     this.element.minLength);\n    }\n\n    return '';\n  }\n\n  messageWithFormats(singularFormat, pluralFormat, length) {\n    if (length === 1) {\n      return format(singularFormat, this.label, length);\n    } else {\n      return format(pluralFormat, this.label, length);\n    }\n  }\n}\n"]}