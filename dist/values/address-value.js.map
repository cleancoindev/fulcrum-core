{"version":3,"sources":["../../src/values/address-value.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;IAGqB;;;AACnB,WADmB,YACnB,CAAY,OAAZ,EAAqB,UAArB,EAAiC;0BADd,cACc;;iDAC/B,sBAAM,OAAN,GAD+B;;AAG/B,UAAK,OAAL,GAAe,sBAAY,UAAZ,CAAf,CAH+B;;GAAjC;;;;;AADmB,yBA2CnB,2BAAS;AACP,QAAI,KAAK,OAAL,EAAc;AAChB,aAAO,IAAP,CADgB;KAAlB;;AAIA,WAAO,KAAK,OAAL,CAAa,MAAb,EAAP,CALO;;;AA3CU,yBAmDnB,2BAAQ,aAAa;AACnB,WAAO,KAAP,CADmB;;;AAnDF,yBAuDnB,6BAAS,aAAa;AACpB,WAAO,KAAP,CADoB;;;AAvDH,yBA2DnB,iCAAW,aAAa;AACtB,WAAO,KAAP,CADsB;;;AA3DL,yBA+DnB,iCAAW,aAAa;AACtB,WAAO,KAAP,CADsB;;;AA/DL,yBAmEnB,uCAAc,aAAa;AACzB,WAAO,KAAP,CADyB;;;eAnER;;wBAOL;AACZ,aAAO,KAAK,OAAL,CAAa,OAAb,CADK;;;;wBAIK;AACjB,aAAO,KAAK,OAAL,CAAa,KAAb,CAAmB,IAAnB,CAAwB,IAAxB,CAAP,CADiB;;;;wBAIG;AACpB,aAAO,KAAK,OAAL,CAAa,KAAb,CAAmB,IAAnB,CAAwB,GAAxB,CAAP,CADoB;;;;wBAIT;AACX,aAAO,KAAK,YAAL,CAAkB,MAAlB,CADI;;;;wBAIK;AAChB,UAAM,QAAQ,EAAR,CADU;;AAGhB,UAAM,UAAU,KAAK,OAAL,CAAa,MAAb,EAAV,CAHU;;AAKhB,2BAAkB,OAAO,IAAP,CAAY,OAAZ,+GAAlB,IAAwC;;;;;;;;;;;;YAA7B,WAA6B;;AACtC,cAAM,MAAM,KAAK,OAAL,CAAa,GAAb,GAAmB,GAAzB,GAA+B,GAA/B,CAAN,GAA4C,QAAQ,GAAR,CAA5C,CADsC;OAAxC;;AAIA,YAAM,MAAM,KAAK,OAAL,CAAa,GAAb,CAAZ,GAAgC,KAAK,eAAL,CAThB;;AAWhB,aAAO,KAAP,CAXgB;;;;wBAcG;AACnB,aAAO,IAAP,CADmB;;;;SArCF","file":"address-value.js","sourcesContent":["import FormValue from './form-value';\nimport Address from './address';\n\nexport default class AddressValue extends FormValue {\n  constructor(element, attributes) {\n    super(element);\n\n    this.address = new Address(attributes);\n  }\n\n  get isEmpty() {\n    return this.address.isEmpty;\n  }\n\n  get displayValue() {\n    return this.address.lines.join('\\n');\n  }\n\n  get searchableValue() {\n    return this.address.lines.join(' ');\n  }\n\n  get length() {\n    return this.displayValue.length;\n  }\n\n  get columnValue() {\n    const value = {};\n\n    const address = this.address.toJSON();\n\n    for (const key of Object.keys(address)) {\n      value['f' + this.element.key + '_' + key] = address[key];\n    }\n\n    value['f' + this.element.key] = this.searchableValue;\n\n    return value;\n  }\n\n  get multipleValues() {\n    return null;\n    // TODO(zhm) implement\n    // throw new Error('Not implemented');\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    return this.address.toJSON();\n  }\n\n  isEqual(stringValue) {\n    return false;\n  }\n\n  contains(stringValue) {\n    return false;\n  }\n\n  startsWith(stringValue) {\n    return false;\n  }\n\n  isLessThan(stringValue) {\n    return false;\n  }\n\n  isGreaterThan(stringValue) {\n    return false;\n  }\n}\n"]}