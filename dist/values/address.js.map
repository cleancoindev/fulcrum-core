{"version":3,"sources":["../../src/values/address.js"],"names":[],"mappings":"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","file":"address.js","sourcesContent":["import TextUtils from '../utils/text-utils';\n\nexport default class Address {\n  constructor(attributes) {\n    if (attributes) {\n      this.streetNumber = attributes.sub_thoroughfare;\n      this.streetName = attributes.thoroughfare;\n      this.suite = attributes.suite;\n      this.city = attributes.locality;\n      this.county = attributes.sub_admin_area;\n      this.state = attributes.admin_area;\n      this.postalCode = attributes.postal_code;\n      this.country = attributes.country;\n    }\n  }\n\n  toJSON() {\n    const json = {};\n\n    json.sub_thoroughfare = this.streetNumber || null;\n    json.thoroughfare = this.streetName || null;\n    json.suite = this.suite || null;\n    json.locality = this.city || null;\n    json.sub_admin_area = this.county || null;\n    json.admin_area = this.state || null;\n    json.postal_code = this.postalCode || null;\n    json.country = this.country || null;\n\n    return json;\n  }\n\n  clear() {\n    this.streetNumber = null;\n    this.streetName = null;\n    this.suite = null;\n    this.city = null;\n    this.county = null;\n    this.state = null;\n    this.postalCode = null;\n    this.country = null;\n  }\n\n  isEmpty() {\n    return !(TextUtils.isPresent(this.streetNumber) ||\n             TextUtils.isPresent(this.streetName) ||\n             TextUtils.isPresent(this.suite) ||\n             TextUtils.isPresent(this.city) ||\n             TextUtils.isPresent(this.county) ||\n             TextUtils.isPresent(this.state) ||\n             TextUtils.isPresent(this.postalCode) ||\n             TextUtils.isPresent(this.country));\n  }\n\n  get lines() {\n    const result = [];\n\n    const line1 = this.line1;\n    const line2 = this.line2;\n    const line3 = this.line3;\n\n    if (TextUtils.isPresent(line1)) {\n      result.push(line1);\n    }\n\n    if (TextUtils.isPresent(line2)) {\n      result.push(line2);\n    }\n\n    if (TextUtils.isPresent(line3)) {\n      result.push(line3);\n    }\n\n    return result;\n  }\n\n  get line1() {\n    return this.line(this.streetNumber, this.streetName, this.suite);\n  }\n\n  get line2() {\n    return this.line(this.city, this.state, this.postalCode);\n  }\n\n  get line3() {\n    return this.line(this.country);\n  }\n\n  line(...parts) {\n    const result = [];\n\n    for (let part of parts) {\n      if (TextUtils.isPresent(part)) {\n        result.push(part);\n      }\n    }\n\n    return result.join(' ');\n  }\n}\n"]}