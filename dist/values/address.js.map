{"version":3,"sources":["../../src/values/address.js"],"names":[],"mappings":"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","file":"address.js","sourcesContent":["import TextUtils from '../utils/text-utils';\n\nexport default class Address {\n  constructor(attributes) {\n    if (attributes) {\n      this.streetNumber = attributes.sub_thoroughfare;\n      this.streetName = attributes.thoroughfare;\n      this.suite = attributes.suite;\n      this.city = attributes.locality;\n      this.county = attributes.sub_admin_area;\n      this.state = attributes.admin_area;\n      this.postalCode = attributes.postal_code;\n      this.country = attributes.country;\n    }\n  }\n\n  toJSON() {\n    const json = {};\n\n    json.sub_thoroughfare = this.streetNumber || null;\n    json.thoroughfare = this.streetName || null;\n    json.suite = this.suite || null;\n    json.locality = this.city || null;\n    json.sub_admin_area = this.county || null;\n    json.admin_area = this.state || null;\n    json.postal_code = this.postalCode || null;\n    json.country = this.country || null;\n\n    return json;\n  }\n\n  clear() {\n    this.streetNumber = null;\n    this.streetName = null;\n    this.suite = null;\n    this.city = null;\n    this.county = null;\n    this.state = null;\n    this.postalCode = null;\n    this.country = null;\n  }\n\n  get isEmpty() {\n    return !(TextUtils.isPresent(this.streetNumber) ||\n             TextUtils.isPresent(this.streetName) ||\n             TextUtils.isPresent(this.suite) ||\n             TextUtils.isPresent(this.city) ||\n             TextUtils.isPresent(this.county) ||\n             TextUtils.isPresent(this.state) ||\n             TextUtils.isPresent(this.postalCode) ||\n             TextUtils.isPresent(this.country));\n  }\n\n  get lines() {\n    const result = [];\n\n    const line1 = this.line1;\n    const line2 = this.line2;\n    const line3 = this.line3;\n\n    if (TextUtils.isPresent(line1)) {\n      result.push(line1);\n    }\n\n    if (TextUtils.isPresent(line2)) {\n      result.push(line2);\n    }\n\n    if (TextUtils.isPresent(line3)) {\n      result.push(line3);\n    }\n\n    return result;\n  }\n\n  get line1() {\n    return this.line(this.streetNumber, this.streetName, this.suite);\n  }\n\n  get line2() {\n    return this.line(this.city, this.state, this.postalCode);\n  }\n\n  get line3() {\n    return this.line(this.country);\n  }\n\n  line(...parts) {\n    const result = [];\n\n    for (let part of parts) {\n      if (TextUtils.isPresent(part)) {\n        result.push(part);\n      }\n    }\n\n    return result.join(' ');\n  }\n}\n"]}