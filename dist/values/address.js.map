{"version":3,"sources":["../../src/values/address.js"],"names":["Address","attributes","streetNumber","sub_thoroughfare","streetName","thoroughfare","suite","city","locality","county","sub_admin_area","state","admin_area","postalCode","postal_code","country","toJSON","json","clear","line","result","parts","part","isPresent","push","join","line1","line2","line3"],"mappings":";;;;;;AAAA;;;;;;;;IAEqBA,O;AACnB,mBAAYC,UAAZ,EAAwB;AAAA;;AACtB,QAAIA,UAAJ,EAAgB;AACd,WAAKC,YAAL,GAAoBD,WAAWE,gBAA/B;AACA,WAAKC,UAAL,GAAkBH,WAAWI,YAA7B;AACA,WAAKC,KAAL,GAAaL,WAAWK,KAAxB;AACA,WAAKC,IAAL,GAAYN,WAAWO,QAAvB;AACA,WAAKC,MAAL,GAAcR,WAAWS,cAAzB;AACA,WAAKC,KAAL,GAAaV,WAAWW,UAAxB;AACA,WAAKC,UAAL,GAAkBZ,WAAWa,WAA7B;AACA,WAAKC,OAAL,GAAed,WAAWc,OAA1B;AACD;AACF;;oBAEDC,M,qBAAS;AACP,QAAMC,OAAO,EAAb;;AAEAA,SAAKd,gBAAL,GAAwB,KAAKD,YAAL,IAAqB,IAA7C;AACAe,SAAKZ,YAAL,GAAoB,KAAKD,UAAL,IAAmB,IAAvC;AACAa,SAAKX,KAAL,GAAa,KAAKA,KAAL,IAAc,IAA3B;AACAW,SAAKT,QAAL,GAAgB,KAAKD,IAAL,IAAa,IAA7B;AACAU,SAAKP,cAAL,GAAsB,KAAKD,MAAL,IAAe,IAArC;AACAQ,SAAKL,UAAL,GAAkB,KAAKD,KAAL,IAAc,IAAhC;AACAM,SAAKH,WAAL,GAAmB,KAAKD,UAAL,IAAmB,IAAtC;AACAI,SAAKF,OAAL,GAAe,KAAKA,OAAL,IAAgB,IAA/B;;AAEA,WAAOE,IAAP;AACD,G;;oBAEDC,K,oBAAQ;AACN,SAAKhB,YAAL,GAAoB,IAApB;AACA,SAAKE,UAAL,GAAkB,IAAlB;AACA,SAAKE,KAAL,GAAa,IAAb;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKE,MAAL,GAAc,IAAd;AACA,SAAKE,KAAL,GAAa,IAAb;AACA,SAAKE,UAAL,GAAkB,IAAlB;AACA,SAAKE,OAAL,GAAe,IAAf;AACD,G;;oBA+CDI,I,mBAAe;AACb,QAAMC,SAAS,EAAf;;AADa,sCAAPC,KAAO;AAAPA,WAAO;AAAA;;AAGb,yBAAmBA,KAAnB,kHAA0B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,UAAfC,IAAe;;AACxB,UAAI,oBAAUC,SAAV,CAAoBD,IAApB,CAAJ,EAA+B;AAC7BF,eAAOI,IAAP,CAAYF,IAAZ;AACD;AACF;;AAED,WAAOF,OAAOK,IAAP,CAAY,GAAZ,CAAP;AACD,G;;;;wBAvDa;AACZ,aAAO,EAAE,oBAAUF,SAAV,CAAoB,KAAKrB,YAAzB,KACA,oBAAUqB,SAAV,CAAoB,KAAKnB,UAAzB,CADA,IAEA,oBAAUmB,SAAV,CAAoB,KAAKjB,KAAzB,CAFA,IAGA,oBAAUiB,SAAV,CAAoB,KAAKhB,IAAzB,CAHA,IAIA,oBAAUgB,SAAV,CAAoB,KAAKd,MAAzB,CAJA,IAKA,oBAAUc,SAAV,CAAoB,KAAKZ,KAAzB,CALA,IAMA,oBAAUY,SAAV,CAAoB,KAAKV,UAAzB,CANA,IAOA,oBAAUU,SAAV,CAAoB,KAAKR,OAAzB,CAPF,CAAP;AAQD;;;wBAEW;AACV,UAAMK,SAAS,EAAf;;AAEA,UAAMM,QAAQ,KAAKA,KAAnB;AACA,UAAMC,QAAQ,KAAKA,KAAnB;AACA,UAAMC,QAAQ,KAAKA,KAAnB;;AAEA,UAAI,oBAAUL,SAAV,CAAoBG,KAApB,CAAJ,EAAgC;AAC9BN,eAAOI,IAAP,CAAYE,KAAZ;AACD;;AAED,UAAI,oBAAUH,SAAV,CAAoBI,KAApB,CAAJ,EAAgC;AAC9BP,eAAOI,IAAP,CAAYG,KAAZ;AACD;;AAED,UAAI,oBAAUJ,SAAV,CAAoBK,KAApB,CAAJ,EAAgC;AAC9BR,eAAOI,IAAP,CAAYI,KAAZ;AACD;;AAED,aAAOR,MAAP;AACD;;;wBAEW;AACV,aAAO,KAAKD,IAAL,CAAU,KAAKjB,YAAf,EAA6B,KAAKE,UAAlC,EAA8C,KAAKE,KAAnD,CAAP;AACD;;;wBAEW;AACV,aAAO,KAAKa,IAAL,CAAU,KAAKZ,IAAf,EAAqB,KAAKI,KAA1B,EAAiC,KAAKE,UAAtC,CAAP;AACD;;;wBAEW;AACV,aAAO,KAAKM,IAAL,CAAU,KAAKJ,OAAf,CAAP;AACD;;;;;;kBAnFkBf,O","file":"address.js","sourcesContent":["import TextUtils from '../utils/text-utils';\n\nexport default class Address {\n  constructor(attributes) {\n    if (attributes) {\n      this.streetNumber = attributes.sub_thoroughfare;\n      this.streetName = attributes.thoroughfare;\n      this.suite = attributes.suite;\n      this.city = attributes.locality;\n      this.county = attributes.sub_admin_area;\n      this.state = attributes.admin_area;\n      this.postalCode = attributes.postal_code;\n      this.country = attributes.country;\n    }\n  }\n\n  toJSON() {\n    const json = {};\n\n    json.sub_thoroughfare = this.streetNumber || null;\n    json.thoroughfare = this.streetName || null;\n    json.suite = this.suite || null;\n    json.locality = this.city || null;\n    json.sub_admin_area = this.county || null;\n    json.admin_area = this.state || null;\n    json.postal_code = this.postalCode || null;\n    json.country = this.country || null;\n\n    return json;\n  }\n\n  clear() {\n    this.streetNumber = null;\n    this.streetName = null;\n    this.suite = null;\n    this.city = null;\n    this.county = null;\n    this.state = null;\n    this.postalCode = null;\n    this.country = null;\n  }\n\n  get isEmpty() {\n    return !(TextUtils.isPresent(this.streetNumber) ||\n             TextUtils.isPresent(this.streetName) ||\n             TextUtils.isPresent(this.suite) ||\n             TextUtils.isPresent(this.city) ||\n             TextUtils.isPresent(this.county) ||\n             TextUtils.isPresent(this.state) ||\n             TextUtils.isPresent(this.postalCode) ||\n             TextUtils.isPresent(this.country));\n  }\n\n  get lines() {\n    const result = [];\n\n    const line1 = this.line1;\n    const line2 = this.line2;\n    const line3 = this.line3;\n\n    if (TextUtils.isPresent(line1)) {\n      result.push(line1);\n    }\n\n    if (TextUtils.isPresent(line2)) {\n      result.push(line2);\n    }\n\n    if (TextUtils.isPresent(line3)) {\n      result.push(line3);\n    }\n\n    return result;\n  }\n\n  get line1() {\n    return this.line(this.streetNumber, this.streetName, this.suite);\n  }\n\n  get line2() {\n    return this.line(this.city, this.state, this.postalCode);\n  }\n\n  get line3() {\n    return this.line(this.country);\n  }\n\n  line(...parts) {\n    const result = [];\n\n    for (const part of parts) {\n      if (TextUtils.isPresent(part)) {\n        result.push(part);\n      }\n    }\n\n    return result.join(' ');\n  }\n}\n"]}