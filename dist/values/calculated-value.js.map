{"version":3,"sources":["../../src/values/calculated-value.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAGe,MAAM,eAAN,gCAA2C;AACxD,cAAY,OAAZ,EAAqB,KAArB,EAA4B;AAC1B,UAAM,OAAN,EAAe,KAAf,EAD0B;;AAG1B,SAAK,KAAL,GAAa,IAAb,CAH0B;GAA5B;;AAMA,MAAI,YAAJ,GAAmB;AACjB,QAAI,KAAK,QAAL,EAAe;AACjB,aAAO,KAAK,KAAL,CADU;KAAnB;;AAIA,WAAO,KAAK,OAAL,CAAa,OAAb,CAAqB,MAArB,CAA4B,KAAK,SAAL,CAAnC,CALiB;GAAnB;;AAQA,MAAI,QAAJ,GAAe;AACb,WAAO,KAAK,KAAL,IAAc,IAAd,CADM;GAAf;;AAIA,MAAI,WAAJ,GAAkB;AAChB,UAAM,UAAU,KAAK,OAAL,CAAa,OAAb;;;;;;AADA,QAOZ,QAAQ,UAAR,IAAsB,QAAQ,QAAR,EAAkB;AAC1C,aAAO,sBAAY,WAAZ,CAAwB,KAAK,SAAL,CAA/B,CAD0C;KAA5C,MAEO,IAAI,QAAQ,MAAR,EAAgB;AACzB,YAAM,OAAO,IAAI,IAAJ,CAAS,CAAC,GAAE,KAAK,SAAL,EAAe,UAAlB,CAAT,CAAP,CADmB;;AAGzB,UAAI,IAAJ,EAAU;AACR,eAAO,KAAK,OAAL,EAAP,CADQ;OAAV;KAHK;;AAQP,WAAO,KAAK,SAAL,CAjBS;GAAlB;CAnBa;kBAAM","file":"calculated-value.js","sourcesContent":["import TextualValue from './textual-value';\nimport NumberUtils from '../utils/number-utils';\n\nexport default class CalculatedValue extends TextualValue {\n  constructor(element, value) {\n    super(element, value);\n\n    this.error = null;\n  }\n\n  get displayValue() {\n    if (this.hasError) {\n      return this.error;\n    }\n\n    return this.element.display.format(this.textValue);\n  }\n\n  get hasError() {\n    return this.error != null;\n  }\n\n  get columnValue() {\n    const display = this.element.display;\n\n    // - for currency or number display, return the numeric value\n    // - for date calculations return the UTC epoch seconds\n    // - for text (and anything else) just return the string value\n\n    if (display.isCurrency || display.isNumber) {\n      return NumberUtils.parseDouble(this.textValue);\n    } else if (display.isDate) {\n      const date = new Date(`${this.textValue} 00:00:00Z`);\n\n      if (date) {\n        return date.getTime();\n      }\n    }\n\n    return this.textValue;\n  }\n}\n\n"]}