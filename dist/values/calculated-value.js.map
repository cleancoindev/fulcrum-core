{"version":3,"sources":["../../src/values/calculated-value.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;IAGqB,eAAe;YAAf,eAAe;;AAClC,WADmB,eAAe,CACtB,OAAO,EAAE,KAAK,EAAE;0BADT,eAAe;;uEAAf,eAAe,aAE1B,OAAO,EAAE,KAAK;;AAEpB,UAAK,KAAK,GAAG,IAAI,CAAC;;GACnB;;eALkB,eAAe;;wBAOf;AACjB,UAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,eAAO,IAAI,CAAC,KAAK,CAAC;OACnB;;AAED,aAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACpD;;;wBAEc;AACb,aAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;KAC3B;;;wBAEiB;AAChB,UAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO;;;;;;AAAC,AAMrC,UAAI,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,QAAQ,EAAE;AAC1C,eAAO,sBAAY,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;OAChD,MAAM,IAAI,OAAO,CAAC,MAAM,EAAE;AACzB,YAAM,IAAI,GAAG,IAAI,IAAI,CAAI,IAAI,CAAC,SAAS,gBAAa,CAAC;;AAErD,YAAI,IAAI,EAAE;AACR,iBAAO,IAAI,CAAC,OAAO,EAAE,CAAC;SACvB;OACF;;AAED,aAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;SArCkB,eAAe;;;kBAAf,eAAe","file":"calculated-value.js","sourcesContent":["import TextualValue from './textual-value';\nimport NumberUtils from '../utils/number-utils';\n\nexport default class CalculatedValue extends TextualValue {\n  constructor(element, value) {\n    super(element, value);\n\n    this.error = null;\n  }\n\n  get displayValue() {\n    if (this.hasError) {\n      return this.error;\n    }\n\n    return this.element.display.format(this.textValue);\n  }\n\n  get hasError() {\n    return this.error != null;\n  }\n\n  get columnValue() {\n    const display = this.element.display;\n\n    // - for currency or number display, return the numeric value\n    // - for date calculations return the UTC epoch seconds\n    // - for text (and anything else) just return the string value\n\n    if (display.isCurrency || display.isNumber) {\n      return NumberUtils.parseDouble(this.textValue);\n    } else if (display.isDate) {\n      const date = new Date(`${this.textValue} 00:00:00Z`);\n\n      if (date) {\n        return date.getTime();\n      }\n    }\n\n    return this.textValue;\n  }\n}\n\n"]}