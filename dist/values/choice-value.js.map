{"version":3,"sources":["../../src/values/choice-value.js"],"names":["ChoiceDisplaySeparator","ChoiceSearchSeparator","ChoiceValue","element","attributes","_choiceValues","_otherValues","choice_values","choice","TextUtils","isPresent","push","other_values","format","useDisplayValue","isEmpty","values","labelStrings","sort","valueStrings","multiple","toJSON","choiceValues","otherValues","rawValue","otherValue","toSimpleJSON","labels","strings","isEqual","value","selectedValues","contains","startsWith","length","choiceByValue","label","join","allValues","slice","hasOtherValue","FormValue"],"mappings":"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","file":"choice-value.js","sourcesContent":["import FormValue from './form-value';\nimport TextUtils from '../utils/text-utils';\nimport includes from 'lodash.includes';\n\nconst ChoiceDisplaySeparator = ', ';\nconst ChoiceSearchSeparator = ' ';\n\nexport default class ChoiceValue extends FormValue {\n  constructor(element, attributes) {\n    super(element, attributes);\n\n    this._choiceValues = [];\n    this._otherValues = [];\n\n    if (attributes) {\n      if (attributes.choice_values) {\n        for (const choice of attributes.choice_values) {\n          if (TextUtils.isPresent(choice)) {\n            this._choiceValues.push(choice);\n          }\n        }\n      }\n\n      if (attributes.other_values) {\n        for (const choice of attributes.other_values) {\n          if (TextUtils.isPresent(choice)) {\n            this._otherValues.push(choice);\n          }\n        }\n      }\n    }\n  }\n\n  get isEmpty() {\n    if (this._choiceValues.length) {\n      return false;\n    }\n    if (this._otherValues.length) {\n      return false;\n    }\n    return true;\n  }\n\n  format({useDisplayValue = false}) {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const values = useDisplayValue ? this.labelStrings.sort() : this.valueStrings.sort();\n\n    if (!this.element.multiple) {\n      return values[0];\n    }\n\n    return values;\n  }\n\n  get labelStrings() {\n    const labels = [];\n\n    for (const rawValue of this._choiceValues) {\n      const choice = this.element.choiceByValue(rawValue);\n\n      const label = (choice != null ? choice.label : rawValue);\n\n      if (TextUtils.isPresent(label)) {\n        labels.push(label);\n      }\n    }\n\n    for (const otherValue of this._otherValues) {\n      labels.push(otherValue);\n    }\n\n    return labels;\n  }\n\n  get valueStrings() {\n    const values = [];\n\n    for (const rawValue of this._choiceValues) {\n      values.push(rawValue);\n    }\n\n    for (const otherValue of this._otherValues) {\n      values.push(otherValue);\n    }\n\n    return values;\n  }\n\n  get displayValue() {\n    return this.labelStrings.join(ChoiceDisplaySeparator);\n  }\n\n  get searchableValue() {\n    const values = [];\n\n    for (const rawValue of this._choiceValues) {\n      const choice = this.element.choiceByValue(rawValue);\n\n      if (choice != null) {\n        values.push(choice.label);\n\n        if (choice.label !== choice.value) {\n          values.push(choice.value);\n        }\n      } else {\n        values.push(rawValue);\n      }\n    }\n\n    for (const otherValue of this._otherValues) {\n      values.push(otherValue);\n    }\n\n    return values.join(ChoiceSearchSeparator);\n  }\n\n  get length() {\n    return this._choiceValues.length + this._otherValues.length;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const choiceValues = [];\n    const otherValues = [];\n\n    for (const rawValue of this._choiceValues) {\n      choiceValues.push(rawValue);\n    }\n\n    for (const otherValue of this._otherValues) {\n      otherValues.push(otherValue);\n    }\n\n    return {\n      choice_values: choiceValues,\n      other_values: otherValues\n    };\n  }\n\n  toSimpleJSON({labels} = {}) {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const strings = labels ? this.labelStrings : this.valueStrings;\n\n    return this.element.multiple ? strings : strings[0];\n  }\n\n  get columnValue() {\n    const allValues = this.valueStrings.sort();\n\n    if (allValues.length === 0) {\n      return null;\n    }\n\n    if (!this.element.multiple) {\n      return allValues[0];\n    }\n\n    return allValues;\n  }\n\n  get multipleValues() {\n    return null;\n  }\n\n  get hasOtherValue() {\n    return this._otherValues.length !== 0;\n  }\n\n  get selectedValues() {\n    return this._choiceValues.slice();\n  }\n\n  set selectedValues(values) {\n    this._choiceValues = (values || []).slice();\n  }\n\n  get otherValues() {\n    return this._otherValues.slice();\n  }\n\n  set otherValues(values) {\n    this._otherValues = (values || []).slice();\n  }\n\n  get otherValue() {\n    if (!this.hasOtherValue) {\n      return null;\n    }\n\n    return this._otherValues[0];\n  }\n\n  isEqual(value) {\n    if (includes(this.selectedValues, value)) {\n      return true;\n    }\n\n    return this.otherValue === value;\n  }\n\n  contains(value) {\n    return this.isEqual(value);\n  }\n\n  startsWith(value) {\n    return this.contains(value);\n  }\n\n  // isLessThan(value) {\n  //   notImplemented();\n  // }\n\n  // isGreaterThan(value) {\n  //   notImplemented();\n  // }\n}\n"]}