{"version":3,"sources":["../../src/values/choice-value.js"],"names":[],"mappings":"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","file":"choice-value.js","sourcesContent":["import FormValue from './form-value';\nimport TextUtils from '../utils/text-utils';\n\nconst ChoiceDisplaySeparator = ', ';\nconst ChoiceSearchSeparator = ' ';\n\nexport default class ChoiceValue extends FormValue {\n  constructor(element, attributes) {\n    super(element, attributes);\n\n    this._choiceValues = [];\n    this._otherValues = [];\n\n    if (attributes) {\n      for (let choice of attributes.choice_values) {\n        if (TextUtils.isPresent(choice)) {\n          this._choiceValues.push(choice);\n        }\n      }\n\n      for (let choice of attributes.other_values) {\n        if (TextUtils.isPresent(choice)) {\n          this._otherValues.push(choice);\n        }\n      }\n    }\n  }\n\n  get isEmpty() {\n    if (this._choiceValues.length) {\n      return false;\n    }\n    if (this._otherValues.length) {\n      return false;\n    }\n    return true;\n  }\n\n  get displayValue() {\n    const labels = [];\n\n    for (let rawValue of this._choiceValues) {\n      const choice = this.choiceElement.choiceByValue(rawValue);\n\n      const label = (choice != null ? choice.label : rawValue);\n\n      if (TextUtils.isPresent(label)) {\n        labels.push(label);\n      }\n    }\n\n    for (let otherValue of this._otherValues) {\n      labels.push(otherValue);\n    }\n\n    return labels.join(ChoiceDisplaySeparator);\n  }\n\n  get searchableValue() {\n    const values = [];\n\n    for (let rawValue of this._choiceValues) {\n      const choice = this.choiceElement.choiceByValue(rawValue);\n\n      if (choice != null) {\n        values.push(choice.label);\n        values.push(choice.value);\n      } else {\n        values.push(rawValue);\n      }\n    }\n\n    for (let otherValue of this._otherValues) {\n      values.push(otherValue);\n    }\n\n    return values.join(ChoiceSearchSeparator);\n  }\n\n  get length() {\n    return this._choiceValues.length + this._otherValues.length;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const choiceValues = [];\n    const otherValues = [];\n\n    for (let rawValue of this._choiceValues) {\n      choiceValues.push(rawValue);\n    }\n\n    for (let otherValue of this._otherValues) {\n      otherValues.push(otherValue);\n    }\n\n    return {\n      choice_values: choiceValues,\n      other_values: otherValues\n    };\n  }\n\n  get columnValue() {\n    const allValues = [];\n\n    for (let rawValue of this._choiceValues) {\n      allValues.push(rawValue);\n    }\n\n    for (let otherValue of this._otherValues) {\n      allValues.push(otherValue);\n    }\n\n    if (allValues.length === 0) {\n      return null;\n    }\n\n    if (!this.element.multiple) {\n      return allValues[0];\n    }\n\n    return '\\t' + allValues.join('\\t') + '\\t';\n  }\n\n  get multipleValues() {\n    return null;\n  }\n\n  get hasOtherValue() {\n    return this._otherValues.length !== 0;\n  }\n\n  get selectedValues() {\n    return this._choiceValues.slice();\n  }\n\n  set selectedValues(values) {\n    this._choiceValues = (values || []).slice();\n  }\n\n  get otherValues() {\n    return this._otherValues.slice();\n  }\n\n  set otherValues(values) {\n    this._otherValues = (values || []).slice();\n  }\n\n  get otherValue() {\n    if (!this.hasOtherValue) {\n      return null;\n    }\n\n    return this._otherValues[0];\n  }\n}\n"]}