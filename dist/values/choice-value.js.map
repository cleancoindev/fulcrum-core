{"version":3,"sources":["../../src/values/choice-value.js"],"names":[],"mappings":"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","file":"choice-value.js","sourcesContent":["import FormValue from './form-value';\nimport TextUtils from '../utils/text-utils';\n\nconst ChoiceDisplaySeparator = ', ';\nconst ChoiceSearchSeparator = ' ';\n\nexport default class ChoiceValue extends FormValue {\n  constructor(element, attributes) {\n    super(element, attributes);\n\n    this._choiceValues = [];\n    this._otherValues = [];\n\n    if (attributes) {\n      if (attributes.choice_values) {\n        for (let choice of attributes.choice_values) {\n          if (TextUtils.isPresent(choice)) {\n            this._choiceValues.push(choice);\n          }\n        }\n      }\n\n      if (attributes.other_values) {\n        for (let choice of attributes.other_values) {\n          if (TextUtils.isPresent(choice)) {\n            this._otherValues.push(choice);\n          }\n        }\n      }\n    }\n  }\n\n  get isEmpty() {\n    if (this._choiceValues.length) {\n      return false;\n    }\n    if (this._otherValues.length) {\n      return false;\n    }\n    return true;\n  }\n\n  get displayValue() {\n    const labels = [];\n\n    for (let rawValue of this._choiceValues) {\n      const choice = this.element.choiceByValue(rawValue);\n\n      const label = (choice != null ? choice.label : rawValue);\n\n      if (TextUtils.isPresent(label)) {\n        labels.push(label);\n      }\n    }\n\n    for (let otherValue of this._otherValues) {\n      labels.push(otherValue);\n    }\n\n    return labels.join(ChoiceDisplaySeparator);\n  }\n\n  get searchableValue() {\n    const values = [];\n\n    for (let rawValue of this._choiceValues) {\n      const choice = this.element.choiceByValue(rawValue);\n\n      if (choice != null) {\n        values.push(choice.label);\n        values.push(choice.value);\n      } else {\n        values.push(rawValue);\n      }\n    }\n\n    for (let otherValue of this._otherValues) {\n      values.push(otherValue);\n    }\n\n    return values.join(ChoiceSearchSeparator);\n  }\n\n  get length() {\n    return this._choiceValues.length + this._otherValues.length;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const choiceValues = [];\n    const otherValues = [];\n\n    for (let rawValue of this._choiceValues) {\n      choiceValues.push(rawValue);\n    }\n\n    for (let otherValue of this._otherValues) {\n      otherValues.push(otherValue);\n    }\n\n    return {\n      choice_values: choiceValues,\n      other_values: otherValues\n    };\n  }\n\n  get columnValue() {\n    const allValues = [];\n\n    for (let rawValue of this._choiceValues) {\n      allValues.push(rawValue);\n    }\n\n    for (let otherValue of this._otherValues) {\n      allValues.push(otherValue);\n    }\n\n    if (allValues.length === 0) {\n      return null;\n    }\n\n    if (!this.element.multiple) {\n      return allValues[0];\n    }\n\n    return '\\t' + allValues.join('\\t') + '\\t';\n  }\n\n  get multipleValues() {\n    return null;\n  }\n\n  get hasOtherValue() {\n    return this._otherValues.length !== 0;\n  }\n\n  get selectedValues() {\n    return this._choiceValues.slice();\n  }\n\n  set selectedValues(values) {\n    this._choiceValues = (values || []).slice();\n  }\n\n  get otherValues() {\n    return this._otherValues.slice();\n  }\n\n  set otherValues(values) {\n    this._otherValues = (values || []).slice();\n  }\n\n  get otherValue() {\n    if (!this.hasOtherValue) {\n      return null;\n    }\n\n    return this._otherValues[0];\n  }\n}\n"]}