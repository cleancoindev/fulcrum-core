{"version":3,"sources":["../../src/values/choice-value.js"],"names":["ChoiceDisplaySeparator","ChoiceSearchSeparator","ChoiceValue","element","attributes","_choiceValues","_otherValues","choice_values","choice","isPresent","push","other_values","format","useDisplayValue","isEmpty","labelStrings","sort","valueStrings","toJSON","choiceValues","otherValues","rawValue","otherValue","isEqual","value","selectedValues","contains","startsWith","length","labels","choiceByValue","label","values","join","allValues","multiple","slice","hasOtherValue"],"mappings":"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","file":"choice-value.js","sourcesContent":["import FormValue from './form-value';\nimport TextUtils from '../utils/text-utils';\nimport includes from 'lodash.includes';\n\nconst ChoiceDisplaySeparator = ', ';\nconst ChoiceSearchSeparator = ' ';\n\nexport default class ChoiceValue extends FormValue {\n  constructor(element, attributes) {\n    super(element, attributes);\n\n    this._choiceValues = [];\n    this._otherValues = [];\n\n    if (attributes) {\n      if (attributes.choice_values) {\n        for (const choice of attributes.choice_values) {\n          if (TextUtils.isPresent(choice)) {\n            this._choiceValues.push(choice);\n          }\n        }\n      }\n\n      if (attributes.other_values) {\n        for (const choice of attributes.other_values) {\n          if (TextUtils.isPresent(choice)) {\n            this._otherValues.push(choice);\n          }\n        }\n      }\n    }\n  }\n\n  get isEmpty() {\n    if (this._choiceValues.length) {\n      return false;\n    }\n    if (this._otherValues.length) {\n      return false;\n    }\n    return true;\n  }\n\n  format({useDisplayValue = false}) {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    return useDisplayValue ? this.labelStrings.sort() : this.valueStrings.sort();\n  }\n\n  get labelStrings() {\n    const labels = [];\n\n    for (const rawValue of this._choiceValues) {\n      const choice = this.element.choiceByValue(rawValue);\n\n      const label = (choice != null ? choice.label : rawValue);\n\n      if (TextUtils.isPresent(label)) {\n        labels.push(label);\n      }\n    }\n\n    for (const otherValue of this._otherValues) {\n      labels.push(otherValue);\n    }\n\n    return labels;\n  }\n\n  get valueStrings() {\n    const values = [];\n\n    for (const rawValue of this._choiceValues) {\n      values.push(rawValue);\n    }\n\n    for (const otherValue of this._otherValues) {\n      values.push(otherValue);\n    }\n\n    return values;\n  }\n\n  get displayValue() {\n    return this.labelStrings.join(ChoiceDisplaySeparator);\n  }\n\n  get searchableValue() {\n    const values = [];\n\n    for (const rawValue of this._choiceValues) {\n      const choice = this.element.choiceByValue(rawValue);\n\n      if (choice != null) {\n        values.push(choice.label);\n\n        if (choice.label !== choice.value) {\n          values.push(choice.value);\n        }\n      } else {\n        values.push(rawValue);\n      }\n    }\n\n    for (const otherValue of this._otherValues) {\n      values.push(otherValue);\n    }\n\n    return values.join(ChoiceSearchSeparator);\n  }\n\n  get length() {\n    return this._choiceValues.length + this._otherValues.length;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const choiceValues = [];\n    const otherValues = [];\n\n    for (const rawValue of this._choiceValues) {\n      choiceValues.push(rawValue);\n    }\n\n    for (const otherValue of this._otherValues) {\n      otherValues.push(otherValue);\n    }\n\n    return {\n      choice_values: choiceValues,\n      other_values: otherValues\n    };\n  }\n\n  get columnValue() {\n    const allValues = this.valueStrings.sort();\n\n    if (allValues.length === 0) {\n      return null;\n    }\n\n    if (!this.element.multiple) {\n      return allValues[0];\n    }\n\n    return allValues;\n  }\n\n  get multipleValues() {\n    return null;\n  }\n\n  get hasOtherValue() {\n    return this._otherValues.length !== 0;\n  }\n\n  get selectedValues() {\n    return this._choiceValues.slice();\n  }\n\n  set selectedValues(values) {\n    this._choiceValues = (values || []).slice();\n  }\n\n  get otherValues() {\n    return this._otherValues.slice();\n  }\n\n  set otherValues(values) {\n    this._otherValues = (values || []).slice();\n  }\n\n  get otherValue() {\n    if (!this.hasOtherValue) {\n      return null;\n    }\n\n    return this._otherValues[0];\n  }\n\n  isEqual(value) {\n    if (includes(this.selectedValues, value)) {\n      return true;\n    }\n\n    return this.otherValue === value;\n  }\n\n  contains(value) {\n    return this.isEqual(value);\n  }\n\n  startsWith(value) {\n    return this.contains(value);\n  }\n\n  // isLessThan(value) {\n  //   notImplemented();\n  // }\n\n  // isGreaterThan(value) {\n  //   notImplemented();\n  // }\n}\n"]}