{"version":3,"sources":["../../src/values/classification-value.js"],"names":[],"mappings":"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","file":"classification-value.js","sourcesContent":["import FormValue from './form-value';\nimport TextUtils from '../utils/text-utils';\nimport Classification from '../elements/classification';\n\nconst DisplaySeparator = ' â–¸ ';\n\nconst SearchSeparator = ' ';\n\nexport default class ClassificationValue extends FormValue {\n  constructor(element, attributes) {\n    super(element, attributes);\n\n    this._choiceValues = [];\n    this._otherValues = [];\n\n    if (attributes) {\n      for (let choice of attributes.choice_values) {\n        if (TextUtils.isPresent(choice)) {\n          this._choiceValues.push(choice);\n        }\n      }\n\n      for (let choice of attributes.other_values) {\n        if (TextUtils.isPresent(choice)) {\n          this._otherValues.push(choice);\n        }\n      }\n    }\n  }\n\n  get isEmpty() {\n    if (this._choiceValues.length) {\n      return false;\n    }\n\n    if (this._otherValues.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  get displayValue() {\n    const values = [];\n\n    const classification = this.selectedClassification;\n\n    if (classification) {\n      for (let item of classification.exploded) {\n        if (item.label) {\n          values.push(item.label);\n        }\n      }\n    }\n\n    if (this.hasOtherValue) {\n      values.push(this.otherValue);\n    }\n\n    return values.join(DisplaySeparator);\n  }\n\n  get searchableValue() {\n    const values = [];\n\n    const classification = this.selectedClassification;\n\n    if (classification) {\n      for (let item of classification.exploded) {\n        if (item.label) {\n          values.push(item.label);\n        }\n\n        if (item.value) {\n          values.push(item.value);\n        }\n      }\n    }\n\n    if (this.hasOtherValue) {\n      values.push(this.otherValue);\n    }\n\n    return values.join(SearchSeparator);\n  }\n\n  get length() {\n    return this._choiceValues.length + this._otherValues.length;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const choiceValues = this._choiceValues.slice();\n    const otherValues = this._otherValues.slice();\n\n    return {\n      choice_values: choiceValues,\n      other_values: otherValues\n    };\n  }\n\n  get columnValue() {\n    const allValues = [];\n\n    for (let value of this._choiceValues) {\n      allValues.push(value);\n    }\n\n    for (let value of this._otherValues) {\n      allValues.push(value);\n    }\n\n    if (allValues.length === 0) {\n      return null;\n    }\n\n    return allValues.join('\\t');\n  }\n\n  get multipleValues() {\n    return null;\n  }\n\n  get hasOtherValue() {\n    return this._otherValues.length !== 0;\n  }\n\n  get otherValue() {\n    if (!this.hasOtherValue) {\n      return null;\n    }\n\n    return this._otherValues[0];\n  }\n\n  get selectedClassification() {\n    let result = null;\n\n    if (this._choiceValues.length === 0) {\n      return null;\n    }\n\n    let currentClassifications = this.element.classificationItems;\n\n    for (let classificationValue of this._choiceValues) {\n      for (let classification of currentClassifications) {\n        if (classification.value === classificationValue) {\n          result = classification;\n          currentClassifications = classification.children;\n          break;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  setSelectedClassification(classification, otherValue) {\n    if (classification instanceof Classification) {\n      this._choiceValues = classification.toJSON();\n    } else {\n      this._choiceValues = [];\n    }\n\n    if (otherValue) {\n      this._otherValues = [ otherValue.toString() ];\n    } else {\n      this._otherVaues = [];\n    }\n  }\n}\n"]}