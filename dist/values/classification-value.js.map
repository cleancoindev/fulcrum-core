{"version":3,"sources":["../../src/values/classification-value.js"],"names":[],"mappings":"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","file":"classification-value.js","sourcesContent":["import FormValue from './form-value';\nimport TextUtils from '../utils/text-utils';\nimport Classification from '../elements/classification';\n\nconst DisplaySeparator = ' â–¸ ';\n\nconst SearchSeparator = ' ';\n\nexport default class ClassificationValue extends FormValue {\n  constructor(element, attributes) {\n    super(element, attributes);\n\n    this._choiceValues = [];\n    this._otherValues = [];\n\n    for (let choice of attributes.choice_values) {\n      if (TextUtils.isPresent(choice)) {\n        this._choiceValues.push(choice);\n      }\n    }\n\n    for (let choice of attributes.other_values) {\n      if (TextUtils.isPresent(choice)) {\n        this._otherValues.push(choice);\n      }\n    }\n  }\n\n  get isEmpty() {\n    if (this._choiceValues.length) {\n      return false;\n    }\n\n    if (this._otherValues.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  get displayValue() {\n    const values = [];\n\n    const classification = this.selectedClassification;\n\n    if (classification) {\n      for (let item of classification.exploded) {\n        if (item.label) {\n          values.push(item.label);\n        }\n      }\n    }\n\n    if (this.hasOtherValue) {\n      values.push(this.otherValue);\n    }\n\n    return values.join(DisplaySeparator);\n  }\n\n  get searchableValue() {\n    const values = [];\n\n    const classification = this.selectedClassification;\n\n    if (classification) {\n      for (let item of classification.exploded) {\n        if (item.label) {\n          values.push(item.label);\n        }\n\n        if (item.value) {\n          values.push(item.value);\n        }\n      }\n    }\n\n    if (this.hasOtherValue) {\n      values.push(this.otherValue);\n    }\n\n    return values.join(SearchSeparator);\n  }\n\n  get length() {\n    return this._choiceValues.length + this._otherValues.length;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const choiceValues = this._choiceValues.slice();\n    const otherValues = this._otherValues.slice();\n\n    return {\n      choice_values: choiceValues,\n      other_values: otherValues\n    };\n  }\n\n  get columnValue() {\n    const allValues = [];\n\n    for (let value of this._choiceValues) {\n      allValues.push(value);\n    }\n\n    for (let value of this._otherValues) {\n      allValues.push(value);\n    }\n\n    if (allValues.length === 0) {\n      return null;\n    }\n\n    return allValues.join('\\t');\n  }\n\n  get multipleValues() {\n    return null;\n  }\n\n  get hasOtherValue() {\n    return this._otherValues.length !== 0;\n  }\n\n  get otherValue() {\n    if (!this.hasOtherValue) {\n      return null;\n    }\n\n    return this._otherValues[0];\n  }\n\n  get selectedClassification() {\n    let result = null;\n\n    if (this._choiceValues.length === 0) {\n      return null;\n    }\n\n    let currentClassifications = this.element.classificationItems;\n\n    for (let classificationValue of this._choiceValues) {\n      for (let classification of currentClassifications) {\n        if (classification.value === classificationValue) {\n          result = classification;\n          currentClassifications = classification.children;\n          break;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  setSelectedClassification(classification, otherValue) {\n    if (classification instanceof Classification) {\n      this._choiceValues = classification.toJSON();\n    } else {\n      this._choiceValues = [];\n    }\n\n    if (otherValue) {\n      this._otherValues = [ otherValue.toString() ];\n    } else {\n      this._otherVaues = [];\n    }\n  }\n}\n"]}