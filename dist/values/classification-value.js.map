{"version":3,"sources":["../../src/values/classification-value.js"],"names":[],"mappings":"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","file":"classification-value.js","sourcesContent":["import FormValue from './form-value';\nimport TextUtils from '../utils/text-utils';\nimport Classification from '../elements/classification';\n\nconst DisplaySeparator = ' â–¸ ';\n\nconst SearchSeparator = ' ';\n\nexport default class ClassificationValue extends FormValue {\n  constructor(element, attributes) {\n    super(element, attributes);\n\n    this._choiceValues = [];\n    this._otherValues = [];\n\n    for (let choice of attributes.choice_values) {\n      if (TextUtils.isPresent(choice)) {\n        this._choiceValues.push(choice);\n      }\n    }\n\n    for (let choice of attributes.other_values) {\n      if (TextUtils.isPresent(choice)) {\n        this._otherValues.push(choice);\n      }\n    }\n  }\n\n  get isEmpty() {\n    if (this._choiceValues.length) {\n      return false;\n    }\n\n    if (this._otherValues.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  get displayValue() {\n    const values = [];\n\n    const classification = this.selectedClassification;\n\n    if (classification) {\n      for (let item of classification.exploded) {\n        if (item.label) {\n          values.push(item.label);\n        }\n      }\n    }\n\n    if (this.hasOtherValue) {\n      values.push(this.otherValue);\n    }\n\n    return values.join(DisplaySeparator);\n  }\n\n  get searchableValue() {\n    const values = [];\n\n    const classification = this.selectedClassification;\n\n    if (classification) {\n      for (let item of classification.exploded) {\n        if (item.label) {\n          values.push(item.label);\n        }\n\n        if (item.value) {\n          values.push(item.value);\n        }\n      }\n    }\n\n    if (this.hasOtherValue) {\n      values.push(this.otherValue);\n    }\n\n    return values.join(SearchSeparator);\n  }\n\n  get length() {\n    return this._choiceValues.length + this._otherValues.length;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const choiceValues = this._choiceValues.slice();\n    const otherValues = this._otherValues.slice();\n\n    return {\n      choice_values: choiceValues,\n      other_values: otherValues\n    };\n  }\n\n  get columnValue() {\n    const allValues = [];\n\n    for (let value of this._choiceValues) {\n      allValues.push(value);\n    }\n\n    for (let value of this._otherValues) {\n      allValues.push(value);\n    }\n\n    if (allValues.length === 0) {\n      return null;\n    }\n\n    return allValues.join('\\t');\n  }\n\n  get multipleValues() {\n    return null;\n  }\n\n  get hasOtherValue() {\n    return this._otherValues.length !== 0;\n  }\n\n  get otherValue() {\n    if (!this.hasOtherValue) {\n      return null;\n    }\n\n    return this._otherValues[0];\n  }\n\n  get selectedClassification() {\n    let result = null;\n\n    if (this._choiceValues.length === 0) {\n      return null;\n    }\n\n    let currentClassifications = this.element.classificationItems;\n\n    for (let classificationValue of this._choiceValues) {\n      for (let classification of currentClassifications) {\n        if (classification.value === classificationValue) {\n          result = classification;\n          currentClassifications = classification.children;\n          break;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  setSelectedClassification(classification, otherValue) {\n    if (classification instanceof Classification) {\n      this._choiceValues = classification.toJSON();\n    } else {\n      this._choiceValues = [];\n    }\n\n    if (otherValue) {\n      this._otherValues = [ otherValue.toString() ];\n    } else {\n      this._otherVaues = [];\n    }\n  }\n}\n"]}