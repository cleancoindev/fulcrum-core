{"version":3,"sources":["../../src/values/default-values.js"],"names":[],"mappings":"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","file":"default-values.js","sourcesContent":["import DateUtils from '../utils/date-utils';\nimport TextUtils from '../utils/text-utils';\n\nconst NOW = 'now';\n\nexport default class DefaultValues {\n  static applyDefaultValue(defaultValue, element, formValues) {\n    const value = formValues.get(element.key);\n\n    const hasValue = value && !value.isEmpty;\n\n    if (hasValue || defaultValue == null) {\n      return;\n    }\n\n    if (element.isDateElement && defaultValue === NOW) {\n      defaultValue = DateUtils.formatDate(new Date());\n    } else if (element.isTimeElement && defaultValue === NOW) {\n      defaultValue = DateUtils.formatTime(new Date());\n    }\n\n    const fieldValue = formValues.createValueFromString(element, defaultValue);\n\n    if (fieldValue) {\n      formValues.set(element.key, fieldValue);\n    }\n  }\n\n  static applyPreviousDefaults(defaultValues, formValues, record) {\n    if (defaultValues == null) {\n      return;\n    }\n\n    const elements = DefaultValues.elementsWithPreviousDefaultsEnabledWithinElements(formValues.elements, record.form);\n\n    for (const element of elements) {\n      const previousDefaultAsJSON = defaultValues[element.key];\n\n      if (previousDefaultAsJSON) {\n        const fieldValue = formValues.createValue(element, previousDefaultAsJSON);\n        const currentValue = record.get(element.key, formValues);\n\n        const isCurrentlyEmpty = (currentValue == null || currentValue.isEmpty);\n\n        if (fieldValue && isCurrentlyEmpty) {\n          record.set(element.key, fieldValue, formValues);\n\n          if (element.isRecordLinkElement) {\n            DefaultValues.applyDefaultValuesForRecordLinkValue(fieldValue, formValues, record);\n          }\n        }\n      }\n    }\n  }\n\n  static applyDefaultValuesForRecordLinkValue(recordLinkValue, formValues, record) {\n    const recordLinkElement = recordLinkValue.element;\n\n    const itemValue = recordLinkValue.items[recordLinkValue.length - 1];\n\n    // TODO(zhm) reload?\n    // [itemValue.record reload];\n\n    const otherRecord = itemValue.record;\n\n    for (const recordDefault of recordLinkElement.recordDefaults) {\n      const otherValue = otherRecord.get(recordDefault.sourceKey, otherRecord.formValues);\n\n      // TODO(zhm) verify container here\n      // FCMElement *newElement = [record.form elementByKey:recordDefault.destinationKey withinContainer:nil];\n      const newElement = record.form.elementsByKey[recordDefault.destinationKey];\n\n      if (newElement) {\n        const newValue = formValues.createValueFromOtherValue(newElement, otherValue);\n\n        if (newValue) {\n          record.set(recordDefault.destinationKey, newValue, formValues);\n        }\n      }\n    }\n  }\n\n  static applyDefaultValueForElement(element, formValues) {\n    const defaultValue = element.defaultValue;\n\n    if (defaultValue == null) {\n      return;\n    }\n\n    DefaultValues.applyDefaultValue(defaultValue, element, formValues);\n  }\n\n  static applyDefaultValuesForElements(elements, formValues, record) {\n    const hasStatusDefault = (record.form.statusField &&\n                              TextUtils.isPresent(record.form.statusField.defaultValue) &&\n                              record.form.statusField.isEnabled);\n\n    if (hasStatusDefault && TextUtils.isEmpty(record.status)) {\n      record.status = record.form.statusField.defaultValue;\n    }\n\n    DefaultValues.applyDefaultValuesForElementsRecursive(elements, formValues);\n  }\n\n  static applyDefaultValuesForElementsRecursive(elements, formValues) {\n    for (const element of elements) {\n      if (element.isSectionElement) {\n        DefaultValues.applyDefaultValuesForElementsRecursive(element.elements, formValues);\n      } else {\n        DefaultValues.applyDefaultValueForElement(element, formValues);\n      }\n    }\n  }\n\n  static elementsWithPreviousDefaultsEnabledWithinElements(elements, form) {\n    const results = [];\n\n    if (form && form.statusField.isEnabled && form.statusField.isDefaultPreviousValueEnabled) {\n      results.push(form.statusField);\n    }\n\n    for (const element of elements) {\n      if (element.isSectionElement) {\n        // when recursing don't pass in the form, so the status field is only added once\n        Array.prototype.push.apply(results, DefaultValues.elementsWithPreviousDefaultsEnabledWithinElements(element.elements, null));\n      } else if (element.isDefaultPreviousValueEnabled) {\n        results.push(element);\n      }\n    }\n\n    return results;\n  }\n}\n"]}