{"version":3,"sources":["../../src/values/default-values.js"],"names":[],"mappings":"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","file":"default-values.js","sourcesContent":["import DateUtils from '../utils/date-utils';\nimport TextUtils from '../utils/text-utils';\n\nconst NOW = 'now';\n\nexport default class DefaultValues {\n  static applyDefaultValue(defaultValue, element, formValues) {\n    const value = formValues.get(element.key);\n\n    const hasValue = value && !value.isEmpty;\n\n    if (hasValue || defaultValue == null) {\n      return;\n    }\n\n    if (element.isDateElement && defaultValue === NOW) {\n      defaultValue = DateUtils.formatDate(new Date());\n    } else if (element.isTimeElement && defaultValue === NOW) {\n      defaultValue = DateUtils.formatTime(new Date());\n    }\n\n    const fieldValue = formValues.createValueFromString(element, defaultValue);\n\n    if (fieldValue) {\n      formValues.set(element.key, fieldValue);\n    }\n  }\n\n  static applyPreviousDefaults(defaultValues, formValues, record) {\n    if (defaultValues == null) {\n      return;\n    }\n\n    const elements = DefaultValues.elementsWithPreviousDefaultsEnabledWithinElements(formValues.elements, record.form);\n\n    for (const element of elements) {\n      const previousDefaultAsJSON = defaultValues[element.key];\n\n      if (previousDefaultAsJSON) {\n        const fieldValue = formValues.createValue(element, previousDefaultAsJSON);\n        const currentValue = record.get(element.key, formValues);\n\n        const isCurrentlyEmpty = (currentValue == null || currentValue.isEmpty);\n\n        if (fieldValue && isCurrentlyEmpty) {\n          record.set(element.key, fieldValue, formValues);\n\n          if (element.isRecordLinkElement) {\n            DefaultValues.applyDefaultValuesForRecordLinkValue(fieldValue, formValues, record);\n          }\n        }\n      }\n    }\n  }\n\n  static applyDefaultValuesForRecordLinkValue(recordLinkValue, formValues, record) {\n    const recordLinkElement = recordLinkValue.element;\n\n    const itemValue = recordLinkValue.items[recordLinkValue.length - 1];\n\n    // TODO(zhm) reload?\n    // [itemValue.record reload];\n\n    const otherRecord = itemValue.record;\n\n    for (const recordDefault of recordLinkElement.recordDefaults) {\n      const otherValue = otherRecord.get(recordDefault.sourceKey, otherRecord.formValues);\n\n      // TODO(zhm) verify container here\n      // FCMElement *newElement = [record.form elementByKey:recordDefault.destinationKey withinContainer:nil];\n      const newElement = record.form.elementsByKey[recordDefault.destinationKey];\n\n      if (newElement) {\n        const newValue = formValues.createValueFromOtherValue(newElement, otherValue);\n\n        if (newValue) {\n          record.set(recordDefault.destinationKey, newValue, formValues);\n        }\n      }\n    }\n  }\n\n  static applyDefaultValueForElement(element, formValues) {\n    const defaultValue = element.defaultValue;\n\n    if (defaultValue == null) {\n      return;\n    }\n\n    DefaultValues.applyDefaultValue(defaultValue, element, formValues);\n  }\n\n  static applyDefaultValuesForElements(elements, formValues, record) {\n    const hasStatusDefault = (record.form.statusField &&\n                              TextUtils.isPresent(record.form.statusField.defaultValue) &&\n                              record.form.statusField.isEnabled);\n\n    if (hasStatusDefault && TextUtils.isEmpty(record.status)) {\n      record.status = record.form.statusField.defaultValue;\n    }\n\n    DefaultValues.applyDefaultValuesForElementsRecursive(elements, formValues);\n  }\n\n  static applyDefaultValuesForElementsRecursive(elements, formValues) {\n    for (const element of elements) {\n      if (element.isSectionElement) {\n        DefaultValues.applyDefaultValuesForElementsRecursive(element.elements, formValues);\n      } else {\n        DefaultValues.applyDefaultValueForElement(element, formValues);\n      }\n    }\n  }\n\n  static elementsWithPreviousDefaultsEnabledWithinElements(elements, form) {\n    const results = [];\n\n    if (form && form.statusField.isEnabled && form.statusField.isDefaultPreviousValueEnabled) {\n      results.push(form.statusField);\n    }\n\n    for (const element of elements) {\n      if (element.isSectionElement) {\n        // when recursing don't pass in the form, so the status field is only added once\n        Array.prototype.push.apply(results, DefaultValues.elementsWithPreviousDefaultsEnabledWithinElements(element.elements, null));\n      } else if (element.isDefaultPreviousValueEnabled) {\n        results.push(element);\n      }\n    }\n\n    return results;\n  }\n}\n"]}