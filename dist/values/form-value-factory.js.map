{"version":3,"sources":["../../src/values/form-value-factory.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,IAAM,eAAe;AACnB,oCADmB;AAEnB,gCAFmB;AAGnB,oCAHmB;AAInB,gCAJmB;AAKnB,gCALmB;AAMnB,kCANmB;AAOnB,kCAPmB;AAQnB,kCARmB;AASnB,0CATmB;AAUnB,oDAVmB;AAWnB,uCAXmB;AAYnB,sCAZmB;AAanB,kCAbmB;AAcnB,0CAdmB;AAenB,sCAfmB;AAgBnB,4CAhBmB;AAiBnB,4CAjBmB;CAAf;;IAoBe;;;;;mBACZ,yBAAO,SAAS,YAAY;AACjC,QAAM,cAAc,aAAa,QAAQ,IAAR,CAA3B,CAD2B;;AAGjC,QAAI,eAAe,IAAf,EAAqB;AACvB,YAAM,IAAI,KAAJ,CAAU,yBAAyB,QAAQ,IAAR,CAAzC,CADuB;KAAzB;;AAIA,WAAO,IAAI,WAAJ,CAAgB,OAAhB,EAAyB,UAAzB,CAAP,CAPiC;;;AADhB,mBAWZ,6BAAU;AACf,WAAO,YAAP,CADe;;;SAXE","file":"form-value-factory.js","sourcesContent":["import ChoiceValue from './choice-value';\nimport TextValue from './text-value';\nimport DateValue from './date-value';\nimport TimeValue from './time-value';\nimport PhotoValue from './photo-value';\nimport VideoValue from './video-value';\nimport AudioValue from './audio-value';\nimport SignatureValue from './signature-value';\nimport ClassificationValue from './classification-value';\nimport RepeatableValue from './repeatable-value';\nimport AddressValue from './address-value';\nimport YesNoValue from './yes-no-value';\nimport HyperlinkValue from './hyperlink-value';\nimport BarcodeValue from './barcode-value';\nimport CalculatedValue from './calculated-value';\nimport RecordLinkValue from './record-link-value';\n\nconst Constructors = {\n  ChoiceField: ChoiceValue,\n  TextField: TextValue,\n  DateTimeField: DateValue,\n  DateField: DateValue,\n  TimeField: TimeValue,\n  PhotoField: PhotoValue,\n  VideoField: VideoValue,\n  AudioField: AudioValue,\n  SignatureField: SignatureValue,\n  ClassificationField: ClassificationValue,\n  Repeatable: RepeatableValue,\n  AddressField: AddressValue,\n  YesNoField: YesNoValue,\n  HyperlinkField: HyperlinkValue,\n  BarcodeField: BarcodeValue,\n  CalculatedField: CalculatedValue,\n  RecordLinkField: RecordLinkValue\n};\n\nexport default class FormValueFactory {\n  static create(element, attributes) {\n    const constructor = Constructors[element.type];\n\n    if (constructor == null) {\n      throw new Error('Unsupported element ' + element.type);\n    }\n\n    return new constructor(element, attributes);\n  }\n\n  static classes() {\n    return Constructors;\n  }\n}\n\n"]}