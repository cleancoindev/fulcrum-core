{"version":3,"sources":["../../src/values/form-value.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAEA,SAAS,cAAT,GAA0B;AACxB,QAAM,IAAI,KAAJ,CAAU,iBAAV,CAAN,CADwB;CAA1B;;AAIA,IAAI,mBAAmB,IAAnB;;IAEiB;AACnB,WADmB,SACnB,CAAY,OAAZ,EAAqB,KAArB,EAA4B;0BADT,WACS;;AAC1B,SAAK,QAAL,GAAgB,OAAhB,CAD0B;AAE1B,SAAK,SAAL,GAAiB,KAAjB,CAF0B;GAA5B;;eADmB;;6BAsCV;AACP,uBADO;;;;4BAID,OAAO;AACb,uBADa;;;;6BAIN,OAAO;AACd,uBADc;;;;+BAIL,OAAO;AAChB,uBADgB;;;;+BAIP,OAAO;AAChB,uBADgB;;;;kCAIJ,OAAO;AACnB,uBADmB;;;;wBApDP;AACZ,aAAO,KAAK,QAAL,CADK;;sBAIF,SAAS;AACnB,WAAK,QAAL,GAAgB,OAAhB,CADmB;;;;wBAIP;AACZ,uBADY;;;;wBAIK;AACjB,uBADiB;;;;wBAIG;AACpB,uBADoB;;;;wBAIT;AACX,uBADW;;;;wBAIK;AAChB,uBADgB;;;;wBAIG;AACnB,uBADmB;;;;8BA4BJ;AACf,aAAQ,mBAAmB,oBAAoB,QAAQ,sBAAR,EAAgC,OAAhC,CADhC;;;;2BAIH,SAAS,YAAY;AACjC,aAAO,UAAU,OAAV,GAAoB,MAApB,CAA2B,OAA3B,EAAoC,UAApC,CAAP,CADiC;;;;8BAIlB;AACf,UAAI,UAAU,QAAV,IAAsB,IAAtB,EAA4B;AAC9B,kBAAU,QAAV,GAAqB,EAArB,CAD8B;;;;;;;AAG9B,+BAAkB,OAAO,IAAP,kDAAlB,oGAAsC;gBAA7B,oBAA6B;;AACpC,gBAAM,cAAc,UAAU,OAAV,GAAoB,OAApB,GAA8B,uBAAM,KAAN,CAA9B,CAAd,CAD8B;;AAGpC,gBAAI,WAAJ,EAAiB;AACf,wBAAU,QAAV,CAAmB,YAAY,IAAZ,CAAnB,GAAuC,WAAvC,CADe;aAAjB;WAHF;;;;;;;;;;;;;;SAH8B;OAAhC;;AAYA,aAAO,UAAU,QAAV,CAbQ;;;;SAtEE","file":"form-value.js","sourcesContent":["import Types from '../elements/element-types';\n\nfunction notImplemented() {\n  throw new Error('Not implemented');\n}\n\nlet FormValueFactory = null;\n\nexport default class FormValue {\n  constructor(element, value) {\n    this._element = element;\n    this._rawValue = value;\n  }\n\n  get element() {\n    return this._element;\n  }\n\n  set element(element) {\n    this._element = element;\n  }\n\n  get isEmpty() {\n    notImplemented();\n  }\n\n  get displayValue() {\n    notImplemented();\n  }\n\n  get searchableValue() {\n    notImplemented();\n  }\n\n  get length() {\n    notImplemented();\n  }\n\n  get columnValue() {\n    notImplemented();\n  }\n\n  get multipleValues() {\n    notImplemented();\n  }\n\n  toJSON() {\n    notImplemented();\n  }\n\n  isEqual(value) {\n    notImplemented();\n  }\n\n  contains(value) {\n    notImplemented();\n  }\n\n  startsWith(value) {\n    notImplemented();\n  }\n\n  isLessThan(value) {\n    notImplemented();\n  }\n\n  isGreaterThan(value) {\n    notImplemented();\n  }\n\n  static factory() {\n    return (FormValueFactory = FormValueFactory || require('./form-value-factory').default);\n  }\n\n  static create(element, attributes) {\n    return FormValue.factory().create(element, attributes);\n  }\n\n  static classes() {\n    if (FormValue._classes == null) {\n      FormValue._classes = {};\n\n      for (let klass of Object.keys(Types)) {\n        const constructor = FormValue.factory().classes()[Types[klass]];\n\n        if (constructor) {\n          FormValue._classes[constructor.name] = constructor;\n        }\n      }\n    }\n\n    return FormValue._classes;\n  }\n}\n"]}