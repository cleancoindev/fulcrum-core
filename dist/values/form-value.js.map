{"version":3,"sources":["../../src/values/form-value.js"],"names":[],"mappings":";;;;;;;;;;;;AAEA,SAAS,cAAT,GAA0B;AACxB,QAAM,IAAI,KAAJ,CAAU,iBAAV,CAAN,CADwB;CAA1B;;AAIA,IAAI,mBAAmB,IAAnB;;AAEW,MAAM,SAAN,CAAgB;AAC7B,cAAY,OAAZ,EAAqB,KAArB,EAA4B;AAC1B,SAAK,QAAL,GAAgB,OAAhB,CAD0B;AAE1B,SAAK,SAAL,GAAiB,KAAjB,CAF0B;GAA5B;;AAKA,MAAI,OAAJ,GAAc;AACZ,WAAO,KAAK,QAAL,CADK;GAAd;;AAIA,MAAI,OAAJ,CAAY,OAAZ,EAAqB;AACnB,SAAK,QAAL,GAAgB,OAAhB,CADmB;GAArB;;AAIA,MAAI,OAAJ,GAAc;AACZ,qBADY;GAAd;;AAIA,MAAI,YAAJ,GAAmB;AACjB,qBADiB;GAAnB;;AAIA,MAAI,eAAJ,GAAsB;AACpB,qBADoB;GAAtB;;AAIA,MAAI,MAAJ,GAAa;AACX,qBADW;GAAb;;AAIA,MAAI,WAAJ,GAAkB;AAChB,qBADgB;GAAlB;;AAIA,MAAI,cAAJ,GAAqB;AACnB,qBADmB;GAArB;;AAIA,WAAS;AACP,qBADO;GAAT;;AAIA,UAAQ,KAAR,EAAe;AACb,qBADa;GAAf;;AAIA,WAAS,KAAT,EAAgB;AACd,qBADc;GAAhB;;AAIA,aAAW,KAAX,EAAkB;AAChB,qBADgB;GAAlB;;AAIA,aAAW,KAAX,EAAkB;AAChB,qBADgB;GAAlB;;AAIA,gBAAc,KAAd,EAAqB;AACnB,qBADmB;GAArB;;AAIA,SAAO,OAAP,GAAiB;AACf,WAAQ,mBAAmB,oBAAoB,QAAQ,sBAAR,EAAgC,OAAhC,CADhC;GAAjB;;AAIA,SAAO,MAAP,CAAc,OAAd,EAAuB,UAAvB,EAAmC;AACjC,WAAO,UAAU,OAAV,GAAoB,MAApB,CAA2B,OAA3B,EAAoC,UAApC,CAAP,CADiC;GAAnC;;AAIA,SAAO,OAAP,GAAiB;AACf,QAAI,UAAU,QAAV,IAAsB,IAAtB,EAA4B;AAC9B,gBAAU,QAAV,GAAqB,EAArB,CAD8B;;AAG9B,WAAK,IAAI,KAAJ,IAAa,OAAO,IAAP,wBAAlB,EAAsC;AACpC,cAAM,cAAc,UAAU,OAAV,GAAoB,OAApB,GAA8B,uBAAM,KAAN,CAA9B,CAAd,CAD8B;;AAGpC,YAAI,WAAJ,EAAiB;AACf,oBAAU,QAAV,CAAmB,YAAY,IAAZ,CAAnB,GAAuC,WAAvC,CADe;SAAjB;OAHF;KAHF;;AAYA,WAAO,UAAU,QAAV,CAbQ;GAAjB;CAtEa;kBAAM","file":"form-value.js","sourcesContent":["import Types from '../elements/element-types';\n\nfunction notImplemented() {\n  throw new Error('Not implemented');\n}\n\nlet FormValueFactory = null;\n\nexport default class FormValue {\n  constructor(element, value) {\n    this._element = element;\n    this._rawValue = value;\n  }\n\n  get element() {\n    return this._element;\n  }\n\n  set element(element) {\n    this._element = element;\n  }\n\n  get isEmpty() {\n    notImplemented();\n  }\n\n  get displayValue() {\n    notImplemented();\n  }\n\n  get searchableValue() {\n    notImplemented();\n  }\n\n  get length() {\n    notImplemented();\n  }\n\n  get columnValue() {\n    notImplemented();\n  }\n\n  get multipleValues() {\n    notImplemented();\n  }\n\n  toJSON() {\n    notImplemented();\n  }\n\n  isEqual(value) {\n    notImplemented();\n  }\n\n  contains(value) {\n    notImplemented();\n  }\n\n  startsWith(value) {\n    notImplemented();\n  }\n\n  isLessThan(value) {\n    notImplemented();\n  }\n\n  isGreaterThan(value) {\n    notImplemented();\n  }\n\n  static factory() {\n    return (FormValueFactory = FormValueFactory || require('./form-value-factory').default);\n  }\n\n  static create(element, attributes) {\n    return FormValue.factory().create(element, attributes);\n  }\n\n  static classes() {\n    if (FormValue._classes == null) {\n      FormValue._classes = {};\n\n      for (let klass of Object.keys(Types)) {\n        const constructor = FormValue.factory().classes()[Types[klass]];\n\n        if (constructor) {\n          FormValue._classes[constructor.name] = constructor;\n        }\n      }\n    }\n\n    return FormValue._classes;\n  }\n}\n"]}