{"version":3,"sources":["../../src/values/form-value.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAEA,SAAS,cAAc,GAAG;AACxB,QAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;CACpC;;AAED,IAAI,gBAAgB,GAAG,IAAI,CAAC;;IAEP,SAAS;AAC5B,WADmB,SAAS,CAChB,OAAO,EAAE,KAAK,EAAE;0BADT,SAAS;;AAE1B,QAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AACxB,QAAI,CAAC,SAAS,GAAG,KAAK,CAAC;GACxB;;eAJkB,SAAS;;6BAsCnB;AACP,oBAAc,EAAE,CAAC;KAClB;;;4BAEO,KAAK,EAAE;AACb,oBAAc,EAAE,CAAC;KAClB;;;6BAEQ,KAAK,EAAE;AACd,oBAAc,EAAE,CAAC;KAClB;;;+BAEU,KAAK,EAAE;AAChB,oBAAc,EAAE,CAAC;KAClB;;;+BAEU,KAAK,EAAE;AAChB,oBAAc,EAAE,CAAC;KAClB;;;kCAEa,KAAK,EAAE;AACnB,oBAAc,EAAE,CAAC;KAClB;;;wBAtDa;AACZ,aAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;sBAEW,OAAO,EAAE;AACnB,UAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;KACzB;;;wBAEa;AACZ,oBAAc,EAAE,CAAC;KAClB;;;wBAEkB;AACjB,oBAAc,EAAE,CAAC;KAClB;;;wBAEqB;AACpB,oBAAc,EAAE,CAAC;KAClB;;;wBAEY;AACX,oBAAc,EAAE,CAAC;KAClB;;;wBAEiB;AAChB,oBAAc,EAAE,CAAC;KAClB;;;wBAEoB;AACnB,oBAAc,EAAE,CAAC;KAClB;;;8BA0BgB;AACf,aAAQ,gBAAgB,GAAG,gBAAgB,IAAI,OAAO,CAAC,sBAAsB,CAAC,CAAC,OAAO,CAAE;KACzF;;;2BAEa,OAAO,EAAE,UAAU,EAAE;AACjC,aAAO,SAAS,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;KACxD;;;8BAEgB;AACf,UAAI,SAAS,CAAC,QAAQ,IAAI,IAAI,EAAE;AAC9B,iBAAS,CAAC,QAAQ,GAAG,EAAE,CAAC;;;;;;;AAExB,+BAAkB,MAAM,CAAC,IAAI,wBAAO,8HAAE;gBAA7B,KAAK;;AACZ,gBAAM,WAAW,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,uBAAM,KAAK,CAAC,CAAC,CAAC;;AAEhE,gBAAI,WAAW,EAAE;AACf,uBAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC;aACpD;WACF;;;;;;;;;;;;;;;OACF;;AAED,aAAO,SAAS,CAAC,QAAQ,CAAC;KAC3B;;;SApFkB,SAAS;;;kBAAT,SAAS","file":"form-value.js","sourcesContent":["import Types from '../elements/element-types';\n\nfunction notImplemented() {\n  throw new Error('Not implemented');\n}\n\nlet FormValueFactory = null;\n\nexport default class FormValue {\n  constructor(element, value) {\n    this._element = element;\n    this._rawValue = value;\n  }\n\n  get element() {\n    return this._element;\n  }\n\n  set element(element) {\n    this._element = element;\n  }\n\n  get isEmpty() {\n    notImplemented();\n  }\n\n  get displayValue() {\n    notImplemented();\n  }\n\n  get searchableValue() {\n    notImplemented();\n  }\n\n  get length() {\n    notImplemented();\n  }\n\n  get columnValue() {\n    notImplemented();\n  }\n\n  get multipleValues() {\n    notImplemented();\n  }\n\n  toJSON() {\n    notImplemented();\n  }\n\n  isEqual(value) {\n    notImplemented();\n  }\n\n  contains(value) {\n    notImplemented();\n  }\n\n  startsWith(value) {\n    notImplemented();\n  }\n\n  isLessThan(value) {\n    notImplemented();\n  }\n\n  isGreaterThan(value) {\n    notImplemented();\n  }\n\n  static factory() {\n    return (FormValueFactory = FormValueFactory || require('./form-value-factory').default);\n  }\n\n  static create(element, attributes) {\n    return FormValue.factory().create(element, attributes);\n  }\n\n  static classes() {\n    if (FormValue._classes == null) {\n      FormValue._classes = {};\n\n      for (let klass of Object.keys(Types)) {\n        const constructor = FormValue.factory().classes()[Types[klass]];\n\n        if (constructor) {\n          FormValue._classes[constructor.name] = constructor;\n        }\n      }\n    }\n\n    return FormValue._classes;\n  }\n}\n"]}