{"version":3,"sources":["../../src/values/form-values.js"],"names":[],"mappings":"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","file":"form-values.js","sourcesContent":["import FormValueFactory from './form-value-factory';\nimport FormValue from './form-value';\n\nconst SearchValueSeparator = ' ';\n\nexport default class FormValues {\n  constructor(container, attributes) {\n    this._values = {};\n    this.container = container;\n    this.loadValues(container.elements, attributes);\n  }\n\n  get all() {\n    const result = [];\n\n    for (const key of Object.keys(this._values)) {\n      result.push(this._values[key]);\n    }\n\n    return result;\n  }\n\n  get(key) {\n    return this._values[key];\n  }\n\n  set(key, value) {\n    if (value && !(value instanceof FormValue)) {\n      throw new Error('Invalid value ' + value);\n    }\n\n    if (value != null) {\n      this._values[key] = value;\n    } else {\n      delete this._values[key];\n    }\n  }\n\n  find(dataName) {\n    const element = this.container.elementsByDataName[dataName];\n\n    if (element) {\n      return this.get(element.key);\n    }\n\n    return null;\n  }\n\n  loadValues(elements, attributes) {\n    for (let element of elements) {\n      this.loadValue(element, attributes);\n    }\n  }\n\n  loadValue(element, attributes) {\n    if (element.isSectionElement) {\n      this.loadValues(element.elements, attributes);\n    } else {\n      const rawValue = attributes[element.key];\n\n      if (rawValue != null) {\n        const formValue = FormValueFactory.create(element, rawValue);\n\n        this.set(element.key, formValue);\n      }\n    }\n  }\n\n  toJSON() {\n    const json = {};\n\n    for (let key of Object.keys(this._values)) {\n      const formValue = this._values[key];\n\n      if (formValue) {\n        const jsonValue = formValue.toJSON();\n\n        if (jsonValue) {\n          json[key] = jsonValue;\n        }\n      }\n    }\n\n    return json;\n  }\n\n  copy() {\n    return new FormValues(this.container, this.toJSON());\n  }\n\n  merge(formValues) {\n    if (!(formValues instanceof FormValues)) {\n      throw new Error('Invalid values');\n    }\n\n    for (let key of Object.keys(this._values)) {\n      const formValue = this._values[key];\n\n      this.set(key, formValue);\n    }\n  }\n\n  createValue(element, rawValue) {\n    return FormValueFactory.create(element, rawValue != null ? rawValue : null);\n  }\n\n  get searchableValue() {\n    const searchValues = [];\n\n    for (let key of Object.keys(this._values)) {\n      const formValue = this._values[key];\n\n      if (formValue) {\n        const searchValue = formValue.searchableValue;\n\n        if (searchValue != null) {\n          searchValues.push(searchValue);\n        }\n      }\n    }\n\n    return searchValues.join(SearchValueSeparator);\n  }\n}\n"]}