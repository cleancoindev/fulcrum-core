{"version":3,"sources":["../../src/values/form-values.js"],"names":[],"mappings":"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","file":"form-values.js","sourcesContent":["import FormValueFactory from './form-value-factory';\nimport FormValue from './form-value';\nimport TextualElement from '../elements/textual-element';\nimport TextUtils from '../utils/text-utils';\n\nconst SearchValueSeparator = ' ';\n\nexport default class FormValues {\n  constructor(container, attributes) {\n    this._values = {};\n    this.container = container;\n    this.loadValues(container.elements, attributes);\n  }\n\n  get all() {\n    const result = [];\n\n    for (const key of Object.keys(this._values)) {\n      result.push(this._values[key]);\n    }\n\n    return result;\n  }\n\n  get(key) {\n    return this._values[key];\n  }\n\n  set(key, value) {\n    if (value && !(value instanceof FormValue)) {\n      throw new Error('Invalid value ' + value);\n    }\n\n    if (value != null) {\n      this._values[key] = value;\n    } else {\n      delete this._values[key];\n    }\n  }\n\n  find(dataName) {\n    const element = this.container.elementsByDataName[dataName];\n\n    if (element) {\n      return this.get(element.key);\n    }\n\n    return null;\n  }\n\n  loadValues(elements, attributes) {\n    for (let element of elements) {\n      this.loadValue(element, attributes);\n    }\n  }\n\n  loadValue(element, attributes) {\n    if (element.isSectionElement) {\n      this.loadValues(element.elements, attributes);\n    } else {\n      const rawValue = attributes[element.key];\n\n      if (rawValue != null) {\n        const formValue = FormValueFactory.create(element, rawValue);\n\n        this.set(element.key, formValue);\n      }\n    }\n  }\n\n  toJSON() {\n    const json = {};\n\n    for (let key of Object.keys(this._values)) {\n      const formValue = this._values[key];\n\n      if (formValue) {\n        const jsonValue = formValue.toJSON();\n\n        if (jsonValue) {\n          json[key] = jsonValue;\n        }\n      }\n    }\n\n    return json;\n  }\n\n  copy() {\n    return new FormValues(this.container, this.toJSON());\n  }\n\n  merge(formValues) {\n    if (!(formValues instanceof FormValues)) {\n      throw new Error('Invalid values');\n    }\n\n    for (let key of Object.keys(formValues._values)) {\n      const formValue = formValues._values[key];\n\n      this.set(key, formValue);\n    }\n  }\n\n  createValue(element, rawValue) {\n    return FormValueFactory.create(element, rawValue != null ? rawValue : null);\n  }\n\n  createValueFromString(element, string) {\n    if (element.isTextElement) {\n      return this.createValue(element, string);\n    } else if (element.isChoiceElement) {\n      const choice = element.choiceByValue(string);\n\n      if (choice) {\n        return this.createValue(element, {choice_values: [ choice.value ]});\n      }\n    } else if (element.isYesNoElement) {\n      return this.createValue(element, string);\n    } else if (element.isBarcodeElement) {\n      return this.createValue(element, string);\n    } else if (element.isClassificationElement) {\n      return this.createValue(element, {choice_values: [ string ]});\n    } else if (element.isDateElement) {\n      return this.createValue(element, string);\n    } else if (element.isTimeElement) {\n      return this.createValue(element, string);\n    } else if (element.isHyperlinkElement) {\n      return this.createValue(element, string);\n    }\n\n    return null;\n  }\n\n  createValueFromOtherValue(element, otherValue) {\n    if (otherValue == null) {\n      return this.createValue(element, null);\n    }\n\n    const destinationIsTextual = element instanceof TextualElement;\n    const otherIsTextual = otherValue.element instanceof TextualElement;\n\n    if (destinationIsTextual && otherIsTextual) {\n      // converting text -> text\n      // if the other field is a calculated field and it's being copied to a regular text field,\n      // use the display value instead of the raw value so it can use the display formatting logic\n\n      let stringValue = otherValue.textValue;\n\n      if (otherValue.element.isCalculatedElement && element.isTextElement) {\n        if (!element.isNumeric) {\n          stringValue = otherValue.displayValue;\n        }\n      }\n\n      return this.createValue(element, stringValue);\n    } else if (destinationIsTextual && !otherIsTextual) {\n      // converting choice -> text\n      if (otherValue.element.isChoiceElement || otherValue.element.isClassificationElement) {\n        const displayValue = otherValue.displayValue;\n\n        if (TextUtils.isPresent(displayValue)) {\n          return this.createValue(element, displayValue);\n        }\n      }\n    } else if (!destinationIsTextual && otherIsTextual) {\n      // converting text -> choice\n      if (element.isChoiceElement) {\n        if (!otherValue.isEmpty) {\n          return this.createValueFromString(element, otherValue.textValue);\n        }\n      }\n    } else if (!destinationIsTextual && !otherIsTextual) {\n      // choice -> choice\n      if ((element.isChoiceElement && otherValue.element.isChoiceElement) ||\n          (element.isClassificationElement && otherValue.element.isClassificationElement)) {\n        return this.createValue(element, otherValue.toJSON());\n      } else if (element.isAddressElement && otherValue.element.isAddressElement) {\n        // address -> address\n        return this.createValue(element, otherValue.toJSON());\n      }\n    }\n\n    return null;\n  }\n\n  get searchableValue() {\n    const searchValues = [];\n\n    for (let key of Object.keys(this._values)) {\n      const formValue = this._values[key];\n\n      if (formValue) {\n        const searchValue = formValue.searchableValue;\n\n        if (searchValue != null) {\n          searchValues.push(searchValue);\n        }\n      }\n    }\n\n    return searchValues.join(SearchValueSeparator);\n  }\n}\n"]}