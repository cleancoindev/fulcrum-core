{"version":3,"sources":["../../src/values/media-value.js"],"names":[],"mappings":"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","file":"media-value.js","sourcesContent":["import FormValue from './form-value';\nimport MultipleValueItem from './multiple-value-item';\nimport TextUtils from '../utils/text-utils';\nimport NumberUtils from '../utils/number-utils';\n\nexport default class MediaValue extends FormValue {\n  constructor(element, items) {\n    super(element, items);\n\n    this._items = [];\n\n    if (Array.isArray(items)) {\n      for (const item of items) {\n        this._items.push(new this.ItemClass(this, item));\n      }\n    }\n  }\n\n  get isEmpty() {\n    return this._items.length === 0;\n  }\n\n  get searchableValue() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const ids = [];\n\n    for (const item of this._items) {\n      if (TextUtils.isPresent(item.caption)) {\n        ids.push(item.caption);\n      }\n    }\n\n    return ids.join(' ');\n  }\n\n  get length() {\n    return this._items.length;\n  }\n\n  get columnValue() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const ids = [];\n    const captions = [];\n\n    for (const item of this._items) {\n      ids.push(item.mediaID);\n      captions.push(item.caption);\n    }\n\n    const value = {};\n\n    value['f' + this.element.key + '_captions'] = captions;\n    value['f' + this.element.key] = ids;\n\n    return value;\n  }\n\n  get multipleValues() {\n    const items = [];\n\n    for (const item of this._items) {\n      items.push(new MultipleValueItem(this.element, item.mediaID));\n    }\n\n    return items;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const items = [];\n\n    for (const item of this._items) {\n      items.push(item.toJSON());\n    }\n\n    return items;\n  }\n\n  isEqual(value) {\n    return false;\n  }\n\n  contains(value) {\n    return false;\n  }\n\n  startsWith(value) {\n    return false;\n  }\n\n  isLessThan(value) {\n    return this.length < NumberUtils.parseDouble(value);\n  }\n\n  isGreaterThan(value) {\n    return this.length > NumberUtils.parseDouble(value);\n  }\n\n  mapItems(callback) {\n    return this._items.slice().map(callback);\n  }\n\n  addItem(id, caption) {\n    const item = new this.ItemClass(this, { caption: caption });\n\n    item.mediaID = id;\n\n    this._items.push(item);\n\n    return item;\n  }\n\n  removeItem(id) {\n    for (let index = 0; index < this._items.length; ++index) {\n      if (this._items[index].mediaID === id) {\n        const item = this._items[index];\n\n        this._items.splice(index, 1);\n\n        return item;\n      }\n    }\n\n    return null;\n  }\n\n  get hasCaptions() {\n    for (const item of this._items) {\n      if (TextUtils.isPresent(item.caption)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  // return a copy until it's determined that a mutable API is necessary\n  get items() {\n    return this._items.slice();\n  }\n}\n"]}