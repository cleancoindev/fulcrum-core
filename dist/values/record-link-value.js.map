{"version":3,"sources":["../../src/values/record-link-value.js"],"names":[],"mappings":"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","file":"record-link-value.js","sourcesContent":["import FormValue from './form-value';\nimport RecordLinkItemValue from './record-link-item-value';\nimport MultipleValueItem from './multiple-value-item';\nimport NumberUtils from '../utils/number-utils';\n\nexport default class RecordLinkValue extends FormValue {\n  constructor(element, items) {\n    super(element, items);\n\n    this._items = [];\n\n    if (items) {\n      for (const item of items) {\n        this._items.push(new RecordLinkItemValue(this, item));\n      }\n    }\n  }\n\n  get isEmpty() {\n    return this.length === 0;\n  }\n\n  get displayValue() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    if (this.length === 1) {\n      return '1 record';\n    }\n\n    return this.length + ' records';\n  }\n\n  get searchableValue() {\n    return this.displayValue;\n  }\n\n  get length() {\n    return this._items.length;\n  }\n\n  toJSON() {\n    const items = [];\n\n    for (const item of this._items) {\n      items.push(item.toJSON());\n    }\n\n    return items;\n  }\n\n  get columnValue() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const ids = [];\n\n    for (const item of this._items) {\n      ids.push(item.mediaID);\n    }\n\n    return ids;\n  }\n\n  get multipleValues() {\n    const ids = [];\n\n    for (const item of this._items) {\n      ids.push(new MultipleValueItem(this.element, item.recordID));\n    }\n\n    return ids;\n  }\n\n  isEqual(value) {\n    return false;\n  }\n\n  contains(value) {\n    return false;\n  }\n\n  startsWith(value) {\n    return false;\n  }\n\n  isLessThan(value) {\n    return this.length < NumberUtils.parseDouble(value);\n  }\n\n  isGreaterThan(value) {\n    return this.length > NumberUtils.parseDouble(value);\n  }\n\n  get items() {\n    return this._items.slice();\n  }\n\n  addRecord(record) {\n    const item = new RecordLinkItemValue(this, {record_id: record.id});\n\n    item._record = record;\n\n    this.insertItem(item);\n  }\n\n  itemIndex(id) {\n    for (let index = 0; index < this._items.length; ++index) {\n      if (id === this._items[index].id) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n\n  insertItem(item) {\n    const index = this.itemIndex(item.id);\n\n    if (index > -1) {\n      this._items[index] = item;\n    } else {\n      this._items.push(item);\n    }\n  }\n\n  removeItem(id) {\n    const index = this.itemIndex(id);\n\n    if (index > -1) {\n      const item = this._items[index];\n\n      this._items.splice(index, 1);\n\n      return item;\n    }\n\n    return null;\n  }\n}\n"]}