{"version":3,"sources":["../../src/values/record-link-value.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAKe,MAAM,eAAe,6BAAmB;AACrD,aAAW,CAAC,OAAO,EAAE,KAAK,EAAE;AAC1B,SAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;;AAEtB,QAAI,CAAC,MAAM,GAAG,EAAE,CAAC;;AAEjB,QAAI,KAAK,EAAE;AACT,WAAK,IAAI,IAAI,IAAI,KAAK,EAAE;AACtB,YAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kCAAwB,IAAI,CAAC,CAAC,CAAC;OACjD;KACF;GACF;;AAED,MAAI,OAAO,GAAG;AACZ,WAAO,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC;GAC1B;;AAED,MAAI,YAAY,GAAG;AACjB,QAAI,IAAI,CAAC,OAAO,EAAE;AAChB,aAAO,IAAI,CAAC;KACb;;AAED,QAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AACrB,aAAO,UAAU,CAAC;KACnB;;AAED,WAAO,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;GACjC;;AAED,MAAI,eAAe,GAAG;AACpB,WAAO,IAAI,CAAC,YAAY,CAAC;GAC1B;;AAED,MAAI,MAAM,GAAG;AACX,WAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;GAC3B;;AAED,QAAM,GAAG;AACP,UAAM,KAAK,GAAG,EAAE,CAAC;;AAEjB,SAAK,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;AAC5B,WAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;KAC3B;;AAED,WAAO,KAAK,CAAC;GACd;;AAED,MAAI,WAAW,GAAG;AAChB,WAAO,IAAI,CAAC;GACb;;AAED,MAAI,cAAc,GAAG;AACnB,UAAM,GAAG,GAAG,EAAE,CAAC;;AAEf,SAAK,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;AAC5B,SAAG,CAAC,IAAI,CAAC,gCAAsB,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;KAC9D;;AAED,WAAO,GAAG,CAAC;GACZ;;AAED,SAAO,CAAC,KAAK,EAAE;AACb,WAAO,KAAK,CAAC;GACd;;AAED,UAAQ,CAAC,KAAK,EAAE;AACd,WAAO,KAAK,CAAC;GACd;;AAED,YAAU,CAAC,KAAK,EAAE;AAChB,WAAO,KAAK,CAAC;GACd;;AAED,YAAU,CAAC,KAAK,EAAE;AAChB,WAAO,IAAI,CAAC,MAAM,GAAG,sBAAY,WAAW,CAAC,KAAK,CAAC,CAAC;GACrD;;AAED,eAAa,CAAC,KAAK,EAAE;AACnB,WAAO,IAAI,CAAC,MAAM,GAAG,sBAAY,WAAW,CAAC,KAAK,CAAC,CAAC;GACrD;CACF;kBAhFoB,eAAe","file":"record-link-value.js","sourcesContent":["import FormValue from './form-value';\nimport RecordLinkItemValue from './record-link-item-value';\nimport MultipleValueItem from './multiple-value-item';\nimport NumberUtils from '../utils/number-utils';\n\nexport default class RecordLinkValue extends FormValue {\n  constructor(element, items) {\n    super(element, items);\n\n    this._items = [];\n\n    if (items) {\n      for (let item of items) {\n        this._items.push(new RecordLinkItemValue(item));\n      }\n    }\n  }\n\n  get isEmpty() {\n    return this.length === 0;\n  }\n\n  get displayValue() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    if (this.length === 1) {\n      return '1 record';\n    }\n\n    return this.length + ' records';\n  }\n\n  get searchableValue() {\n    return this.displayValue;\n  }\n\n  get length() {\n    return this._items.length;\n  }\n\n  toJSON() {\n    const items = [];\n\n    for (let item of this._items) {\n      items.push(item.toJSON());\n    }\n\n    return items;\n  }\n\n  get columnValue() {\n    return null;\n  }\n\n  get multipleValues() {\n    const ids = [];\n\n    for (let item of this._items) {\n      ids.push(new MultipleValueItem(this.element, item.recordID));\n    }\n\n    return ids;\n  }\n\n  isEqual(value) {\n    return false;\n  }\n\n  contains(value) {\n    return false;\n  }\n\n  startsWith(value) {\n    return false;\n  }\n\n  isLessThan(value) {\n    return this.length < NumberUtils.parseDouble(value);\n  }\n\n  isGreaterThan(value) {\n    return this.length > NumberUtils.parseDouble(value);\n  }\n}\n"]}