{"version":3,"sources":["../../src/values/record-link-value.js"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqB;;;AACnB,WADmB,eACnB,CAAY,OAAZ,EAAqB,KAArB,EAA4B;0BADT,iBACS;;iDAC1B,sBAAM,OAAN,EAAe,KAAf,GAD0B;;AAG1B,UAAK,MAAL,GAAc,EAAd,CAH0B;;AAK1B,QAAI,KAAJ,EAAW;AACT,2BAAiB,mHAAjB,IAAwB;;;;;;;;;;;;YAAf,YAAe;;AACtB,cAAK,MAAL,CAAY,IAAZ,CAAiB,yCAA8B,IAA9B,CAAjB,EADsB;OAAxB;KADF;iBAL0B;GAA5B;;AADmB,4BAqCnB,2BAAS;AACP,QAAM,QAAQ,EAAR,CADC;;AAGP,0BAAiB,KAAK,MAAL,qHAAjB,IAA8B;;;;;;;;;;;;UAArB,aAAqB;;AAC5B,YAAM,IAAN,CAAW,KAAK,MAAL,EAAX,EAD4B;KAA9B;;AAIA,WAAO,KAAP,CAPO;;;AArCU,4BA6DnB,2BAAQ,OAAO;AACb,WAAO,KAAP,CADa;;;AA7DI,4BAiEnB,6BAAS,OAAO;AACd,WAAO,KAAP,CADc;;;AAjEG,4BAqEnB,iCAAW,OAAO;AAChB,WAAO,KAAP,CADgB;;;AArEC,4BAyEnB,iCAAW,OAAO;AAChB,WAAO,KAAK,MAAL,GAAc,sBAAY,WAAZ,CAAwB,KAAxB,CAAd,CADS;;;AAzEC,4BA6EnB,uCAAc,OAAO;AACnB,WAAO,KAAK,MAAL,GAAc,sBAAY,WAAZ,CAAwB,KAAxB,CAAd,CADY;;;AA7EF,4BAqFnB,+BAAU,QAAQ;AAChB,QAAM,OAAO,kCAAwB,IAAxB,EAA8B,EAAC,WAAW,OAAO,EAAP,EAA1C,CAAP,CADU;;AAGhB,SAAK,OAAL,GAAe,MAAf,CAHgB;;AAKhB,SAAK,UAAL,CAAgB,IAAhB,EALgB;;;AArFC,4BA6FnB,+BAAU,IAAI;AACZ,SAAK,IAAI,QAAQ,CAAR,EAAW,QAAQ,KAAK,MAAL,CAAY,MAAZ,EAAoB,EAAE,KAAF,EAAS;AACvD,UAAI,OAAO,KAAK,MAAL,CAAY,KAAZ,EAAmB,EAAnB,EAAuB;AAChC,eAAO,KAAP,CADgC;OAAlC;KADF;;AAMA,WAAO,CAAC,CAAD,CAPK;;;AA7FK,4BAuGnB,iCAAW,MAAM;AACf,QAAM,QAAQ,KAAK,SAAL,CAAe,KAAK,EAAL,CAAvB,CADS;;AAGf,QAAI,QAAQ,CAAC,CAAD,EAAI;AACd,WAAK,MAAL,CAAY,KAAZ,IAAqB,IAArB,CADc;KAAhB,MAEO;AACL,WAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,EADK;KAFP;;;AA1GiB,4BAiHnB,iCAAW,IAAI;AACb,QAAM,QAAQ,KAAK,SAAL,CAAe,EAAf,CAAR,CADO;;AAGb,QAAI,QAAQ,CAAC,CAAD,EAAI;AACd,UAAM,OAAO,KAAK,MAAL,CAAY,KAAZ,CAAP,CADQ;;AAGd,WAAK,MAAL,CAAY,MAAZ,CAAmB,KAAnB,EAA0B,CAA1B,EAHc;;AAKd,aAAO,IAAP,CALc;KAAhB;;AAQA,WAAO,IAAP,CAXa;;;eAjHI;;wBAaL;AACZ,aAAO,KAAK,MAAL,KAAgB,CAAhB,CADK;;;;wBAIK;AACjB,UAAI,KAAK,OAAL,EAAc;AAChB,eAAO,IAAP,CADgB;OAAlB;;AAIA,UAAI,KAAK,MAAL,KAAgB,CAAhB,EAAmB;AACrB,eAAO,UAAP,CADqB;OAAvB;;AAIA,aAAO,KAAK,MAAL,GAAc,UAAd,CATU;;;;wBAYG;AACpB,aAAO,KAAK,YAAL,CADa;;;;wBAIT;AACX,aAAO,KAAK,MAAL,CAAY,MAAZ,CADI;;;;wBAcK;AAChB,aAAO,IAAP,CADgB;;;;wBAIG;AACnB,UAAM,MAAM,EAAN,CADa;;AAGnB,4BAAiB,KAAK,MAAL,qHAAjB,IAA8B;;;;;;;;;;;;YAArB,aAAqB;;AAC5B,YAAI,IAAJ,CAAS,gCAAsB,KAAK,OAAL,EAAc,KAAK,QAAL,CAA7C,EAD4B;OAA9B;;AAIA,aAAO,GAAP,CAPmB;;;;wBA8BT;AACV,aAAO,KAAK,MAAL,CAAY,KAAZ,EAAP,CADU;;;;SAjFO","file":"record-link-value.js","sourcesContent":["import FormValue from './form-value';\nimport RecordLinkItemValue from './record-link-item-value';\nimport MultipleValueItem from './multiple-value-item';\nimport NumberUtils from '../utils/number-utils';\n\nexport default class RecordLinkValue extends FormValue {\n  constructor(element, items) {\n    super(element, items);\n\n    this._items = [];\n\n    if (items) {\n      for (let item of items) {\n        this._items.push(new RecordLinkItemValue(this, item));\n      }\n    }\n  }\n\n  get isEmpty() {\n    return this.length === 0;\n  }\n\n  get displayValue() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    if (this.length === 1) {\n      return '1 record';\n    }\n\n    return this.length + ' records';\n  }\n\n  get searchableValue() {\n    return this.displayValue;\n  }\n\n  get length() {\n    return this._items.length;\n  }\n\n  toJSON() {\n    const items = [];\n\n    for (let item of this._items) {\n      items.push(item.toJSON());\n    }\n\n    return items;\n  }\n\n  get columnValue() {\n    return null;\n  }\n\n  get multipleValues() {\n    const ids = [];\n\n    for (let item of this._items) {\n      ids.push(new MultipleValueItem(this.element, item.recordID));\n    }\n\n    return ids;\n  }\n\n  isEqual(value) {\n    return false;\n  }\n\n  contains(value) {\n    return false;\n  }\n\n  startsWith(value) {\n    return false;\n  }\n\n  isLessThan(value) {\n    return this.length < NumberUtils.parseDouble(value);\n  }\n\n  isGreaterThan(value) {\n    return this.length > NumberUtils.parseDouble(value);\n  }\n\n  get items() {\n    return this._items.slice();\n  }\n\n  addRecord(record) {\n    const item = new RecordLinkItemValue(this, {record_id: record.id});\n\n    item._record = record;\n\n    this.insertItem(item);\n  }\n\n  itemIndex(id) {\n    for (let index = 0; index < this._items.length; ++index) {\n      if (id === this._items[index].id) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n\n  insertItem(item) {\n    const index = this.itemIndex(item.id);\n\n    if (index > -1) {\n      this._items[index] = item;\n    } else {\n      this._items.push(item);\n    }\n  }\n\n  removeItem(id) {\n    const index = this.itemIndex(id);\n\n    if (index > -1) {\n      const item = this._items[index];\n\n      this._items.splice(index, 1);\n\n      return item;\n    }\n\n    return null;\n  }\n}\n"]}