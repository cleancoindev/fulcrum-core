{"version":3,"sources":["../../src/values/record-link-value.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAKqB;;;AACnB,WADmB,eACnB,CAAY,OAAZ,EAAqB,KAArB,EAA4B;0BADT,iBACS;;uEADT,4BAEX,SAAS,QADW;;AAG1B,UAAK,MAAL,GAAc,EAAd,CAH0B;;AAK1B,QAAI,KAAJ,EAAW;;;;;;AACT,6BAAiB,+BAAjB,oGAAwB;cAAf,mBAAe;;AACtB,gBAAK,MAAL,CAAY,IAAZ,CAAiB,kCAAwB,IAAxB,CAAjB,EADsB;SAAxB;;;;;;;;;;;;;;OADS;KAAX;iBAL0B;GAA5B;;eADmB;;6BAqCV;AACP,UAAM,QAAQ,EAAR,CADC;;;;;;;AAGP,8BAAiB,KAAK,MAAL,2BAAjB,wGAA8B;cAArB,oBAAqB;;AAC5B,gBAAM,IAAN,CAAW,KAAK,MAAL,EAAX,EAD4B;SAA9B;;;;;;;;;;;;;;OAHO;;AAOP,aAAO,KAAP,CAPO;;;;4BAwBD,OAAO;AACb,aAAO,KAAP,CADa;;;;6BAIN,OAAO;AACd,aAAO,KAAP,CADc;;;;+BAIL,OAAO;AAChB,aAAO,KAAP,CADgB;;;;+BAIP,OAAO;AAChB,aAAO,KAAK,MAAL,GAAc,sBAAY,WAAZ,CAAwB,KAAxB,CAAd,CADS;;;;kCAIJ,OAAO;AACnB,aAAO,KAAK,MAAL,GAAc,sBAAY,WAAZ,CAAwB,KAAxB,CAAd,CADY;;;;8BAQX,QAAQ;AAChB,UAAM,OAAO,kCAAwB,EAAC,WAAW,OAAO,EAAP,EAApC,CAAP,CADU;;AAGhB,WAAK,OAAL,GAAe,MAAf,CAHgB;;AAKhB,WAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,EALgB;;;;wBAxEJ;AACZ,aAAO,KAAK,MAAL,KAAgB,CAAhB,CADK;;;;wBAIK;AACjB,UAAI,KAAK,OAAL,EAAc;AAChB,eAAO,IAAP,CADgB;OAAlB;;AAIA,UAAI,KAAK,MAAL,KAAgB,CAAhB,EAAmB;AACrB,eAAO,UAAP,CADqB;OAAvB;;AAIA,aAAO,KAAK,MAAL,GAAc,UAAd,CATU;;;;wBAYG;AACpB,aAAO,KAAK,YAAL,CADa;;;;wBAIT;AACX,aAAO,KAAK,MAAL,CAAY,MAAZ,CADI;;;;wBAcK;AAChB,aAAO,IAAP,CADgB;;;;wBAIG;AACnB,UAAM,MAAM,EAAN,CADa;;;;;;;AAGnB,8BAAiB,KAAK,MAAL,2BAAjB,wGAA8B;cAArB,oBAAqB;;AAC5B,cAAI,IAAJ,CAAS,gCAAsB,KAAK,OAAL,EAAc,KAAK,QAAL,CAA7C,EAD4B;SAA9B;;;;;;;;;;;;;;OAHmB;;AAOnB,aAAO,GAAP,CAPmB;;;;wBA8BT;AACV,aAAO,KAAK,MAAL,CADG;;;;SAjFO","file":"record-link-value.js","sourcesContent":["import FormValue from './form-value';\nimport RecordLinkItemValue from './record-link-item-value';\nimport MultipleValueItem from './multiple-value-item';\nimport NumberUtils from '../utils/number-utils';\n\nexport default class RecordLinkValue extends FormValue {\n  constructor(element, items) {\n    super(element, items);\n\n    this._items = [];\n\n    if (items) {\n      for (let item of items) {\n        this._items.push(new RecordLinkItemValue(item));\n      }\n    }\n  }\n\n  get isEmpty() {\n    return this.length === 0;\n  }\n\n  get displayValue() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    if (this.length === 1) {\n      return '1 record';\n    }\n\n    return this.length + ' records';\n  }\n\n  get searchableValue() {\n    return this.displayValue;\n  }\n\n  get length() {\n    return this._items.length;\n  }\n\n  toJSON() {\n    const items = [];\n\n    for (let item of this._items) {\n      items.push(item.toJSON());\n    }\n\n    return items;\n  }\n\n  get columnValue() {\n    return null;\n  }\n\n  get multipleValues() {\n    const ids = [];\n\n    for (let item of this._items) {\n      ids.push(new MultipleValueItem(this.element, item.recordID));\n    }\n\n    return ids;\n  }\n\n  isEqual(value) {\n    return false;\n  }\n\n  contains(value) {\n    return false;\n  }\n\n  startsWith(value) {\n    return false;\n  }\n\n  isLessThan(value) {\n    return this.length < NumberUtils.parseDouble(value);\n  }\n\n  isGreaterThan(value) {\n    return this.length > NumberUtils.parseDouble(value);\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  addRecord(record) {\n    const item = new RecordLinkItemValue({record_id: record.id});\n\n    item._record = record;\n\n    this._items.push(item);\n  }\n}\n"]}