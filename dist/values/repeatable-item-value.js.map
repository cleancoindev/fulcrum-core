{"version":3,"sources":["../../src/values/repeatable-item-value.js"],"names":[],"mappings":"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","file":"repeatable-item-value.js","sourcesContent":["import Feature from '../feature';\nimport FormValues from './form-values';\nimport DateUtils from '../utils/date-utils';\nimport TextUtils from '../utils/text-utils';\n\nexport default class RepeatableItemValue extends Feature {\n  constructor(element, item, index) {\n    super();\n\n    this.index = index;\n\n    this._element = element;\n    this._id = item.id;\n    this._createdAt = DateUtils.parseEpochTimestamp(item.created_at);\n    this._updatedAt = DateUtils.parseEpochTimestamp(item.updated_at);\n    this._formValuesJSON = item.form_values;\n\n    const geometry = item.geometry;\n\n    if (geometry != null && geometry.type === 'Point') {\n      this._latitude = geometry.coordinates[1];\n      this._longitude = geometry.coordinates[0];\n    }\n  }\n\n  get element() {\n    return this._element;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get createdAt() {\n    return this._createdAt;\n  }\n\n  set createdAt(createdAt) {\n    if (!(createdAt instanceof Date)) {\n      throw new TypeError('createdAt must be a Date');\n    }\n\n    this._createdAt = createdAt;\n  }\n\n  get updatedAt() {\n    return this._updatedAt;\n  }\n\n  set updatedAt(updatedAt) {\n    if (!(updatedAt instanceof Date)) {\n      throw new TypeError('updatedAt must be a Date');\n    }\n\n    this._updatedAt = updatedAt;\n  }\n\n  get formValues() {\n    if (!this._formValues) {\n      this._formValues = new FormValues(this._element, this._formValuesJSON);\n    }\n\n    return this._formValues;\n  }\n\n  get hasCoordinate() {\n    return this._latitude != null && this._longitude != null;\n  }\n\n  toJSON() {\n    const json = {};\n\n    json.id = this.identifier;\n    json.created_at = DateUtils.formatEpochTimestamp(this.createdAt);\n    json.updated_at = DateUtils.formatEpochTimestamp(this.updatedAt);\n    json.form_values = this.formValues.toJSON();\n    json.geometry = this.geometryAsGeoJSON;\n\n    return json;\n  }\n\n  updateTimestamps() {\n    const now = new Date();\n\n    if (!this._createdAt) {\n      this._createdAt = now;\n    }\n\n    this._updatedAt = now;\n  }\n\n  get isGeometryEnabled() {\n    return this._element.isGeometryEnabled;\n  }\n\n  get displayValue() {\n    const titleFieldKeys = this._element.titleFieldKeys;\n    const titles = [];\n\n    for (let fieldKey of titleFieldKeys) {\n      const formValue = this.formValues.get(fieldKey);\n\n      if (formValue) {\n        const displayValue = formValue.displayValue;\n\n        if (TextUtils.isPresent(displayValue)) {\n          titles.push(displayValue);\n        }\n      }\n    }\n\n    return titles.join(', ');\n  }\n\n  get geometryAsGeoJSON() {\n    if (!this.hasCoordinate) {\n      return null;\n    }\n\n    return {\n      type: 'Point',\n      coordinates: [this._longitude, this._latitude]\n    };\n  }\n\n  get latitude() {\n    return this._latitude;\n  }\n\n  set latitude(latitude) {\n    this._latitude = latitude;\n  }\n\n  get longitude() {\n    return this._longitude;\n  }\n\n  set longitude(longitude) {\n    this._longitude = longitude;\n  }\n}\n"]}