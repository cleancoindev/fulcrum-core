{"version":3,"sources":["../../src/values/repeatable-item-value.js"],"names":[],"mappings":"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","file":"repeatable-item-value.js","sourcesContent":["import Feature from '../feature';\nimport FormValues from './form-values';\nimport DateUtils from '../utils/date-utils';\nimport TextUtils from '../utils/text-utils';\n\nexport default class RepeatableItemValue extends Feature {\n  constructor(element, item, index) {\n    super();\n\n    this.index = index;\n\n    this._element = element;\n    this._id = item.id;\n    this._createdAt = DateUtils.parseEpochTimestamp(item.created_at);\n    this._updatedAt = DateUtils.parseEpochTimestamp(item.updated_at);\n    this._formValuesJSON = item.form_values;\n    this._version = item.version || 1;\n\n    const geometry = item.geometry;\n\n    if (geometry != null && geometry.type === 'Point') {\n      this._latitude = geometry.coordinates[1];\n      this._longitude = geometry.coordinates[0];\n    }\n  }\n\n  get element() {\n    return this._element;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get createdAt() {\n    return this._createdAt;\n  }\n\n  get version() {\n    return this._version;\n  }\n\n  set createdAt(createdAt) {\n    if (createdAt != null && !(createdAt instanceof Date)) {\n      throw new TypeError('createdAt must be a Date');\n    }\n\n    this._createdAt = createdAt;\n  }\n\n  get updatedAt() {\n    return this._updatedAt;\n  }\n\n  set updatedAt(updatedAt) {\n    if (updatedAt != null && !(updatedAt instanceof Date)) {\n      throw new TypeError('updatedAt must be a Date');\n    }\n\n    this._updatedAt = updatedAt;\n  }\n\n  get formValues() {\n    if (!this._formValues) {\n      this._formValues = new FormValues(this._element, this._formValuesJSON);\n    }\n\n    return this._formValues;\n  }\n\n  get hasCoordinate() {\n    return this._latitude != null && this._longitude != null;\n  }\n\n  toJSON() {\n    const json = {};\n\n    json.id = this.id;\n    json.created_at = DateUtils.formatEpochTimestamp(this.createdAt);\n    json.updated_at = DateUtils.formatEpochTimestamp(this.updatedAt);\n    json.form_values = this.formValues.toJSON();\n    json.geometry = this.geometryAsGeoJSON;\n\n    return json;\n  }\n\n  updateTimestamps() {\n    const now = new Date();\n\n    if (!this._createdAt) {\n      this._createdAt = now;\n    }\n\n    this._updatedAt = now;\n  }\n\n  get isGeometryEnabled() {\n    return this._element.isGeometryEnabled;\n  }\n\n  get displayValue() {\n    const titleFieldKeys = this._element.titleFieldKeys;\n    const titles = [];\n\n    for (let fieldKey of titleFieldKeys) {\n      const formValue = this.formValues.get(fieldKey);\n\n      if (formValue) {\n        const displayValue = formValue.displayValue;\n\n        if (TextUtils.isPresent(displayValue)) {\n          titles.push(displayValue);\n        }\n      }\n    }\n\n    return titles.join(', ');\n  }\n\n  get geometryAsGeoJSON() {\n    if (!this.hasCoordinate) {\n      return null;\n    }\n\n    return {\n      type: 'Point',\n      coordinates: [this._longitude, this._latitude]\n    };\n  }\n\n  get latitude() {\n    return this._latitude;\n  }\n\n  set latitude(latitude) {\n    this._latitude = latitude;\n  }\n\n  get longitude() {\n    return this._longitude;\n  }\n\n  set longitude(longitude) {\n    this._longitude = longitude;\n  }\n}\n"]}