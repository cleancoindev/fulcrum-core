{"version":3,"sources":["../../src/values/repeatable-item-value.js"],"names":[],"mappings":"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","file":"repeatable-item-value.js","sourcesContent":["import Feature from '../feature';\nimport FormValues from './form-values';\nimport DateUtils from '../utils/date-utils';\nimport TextUtils from '../utils/text-utils';\n\nexport default class RepeatableItemValue extends Feature {\n  constructor(element, item, index) {\n    super();\n\n    this.index = index;\n\n    this._element = element;\n    this._id = item.id;\n    this._createdAt = DateUtils.parseTimestamp(item.created_at);\n    this._updatedAt = DateUtils.parseTimestamp(item.updated_at);\n    this._formValuesJSON = item.form_values;\n\n    const geometry = item.geometry;\n\n    if (geometry != null && geometry.type === 'Point') {\n      this._latitude = geometry.coordinates[1];\n      this._longitude = geometry.coordinates[0];\n    }\n  }\n\n  get identifier() {\n    return this._id;\n  }\n\n  get createdAt() {\n    return this._createdAt;\n  }\n\n  get updatedAt() {\n    return this._updatedAt;\n  }\n\n  get formValues() {\n    if (!this._formValues) {\n      this._formValues = new FormValues(this._element, this._formValuesJSON);\n    }\n\n    return this._formValues;\n  }\n\n  get hasCoordinate() {\n    return this._latitude != null && this._longitude != null;\n  }\n\n  toJSON() {\n    const json = {};\n\n    json.id = this.identifier;\n    json.created_at = DateUtils.formatTimestamp(this.createdAt);\n    json.updated_at = DateUtils.formatTimestamp(this.updatedAt);\n    json.form_values = this.formValues.toJSON();\n    json.geometry = this.geometryAsGeoJSON();\n\n    return json;\n  }\n\n  updateTimestamps() {\n    const now = new Date();\n\n    if (!this._createdAt) {\n      this._createdAt = now;\n    }\n\n    this._updatedAt = now;\n  }\n\n  get isGeometryEnabled() {\n    return this._element.isGeometryEnabled;\n  }\n\n  get latitude() {\n    return this._latitude;\n  }\n\n  get longitude() {\n    return this._longitude;\n  }\n\n  get displayValue() {\n    const titleFieldKeys = this._element.titleFieldKeys;\n    const titles = [];\n\n    for (let fieldKey of titleFieldKeys) {\n      const formValue = this.formValues.get(fieldKey);\n\n      if (formValue) {\n        const displayValue = formValue.displayValue;\n\n        if (TextUtils.isPresent(displayValue)) {\n          titles.push(displayValue);\n        }\n      }\n    }\n\n    return titles.join(', ');\n  }\n\n  geometryAsGeoJSON() {\n    if (!this.hasCoordinate) {\n      return null;\n    }\n\n    return {\n      type: 'Point',\n      coordinates: [this._longitude, this._latitude]\n    };\n  }\n}\n"]}