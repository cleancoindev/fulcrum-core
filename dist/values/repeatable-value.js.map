{"version":3,"sources":["../../src/values/repeatable-value.js"],"names":[],"mappings":"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","file":"repeatable-value.js","sourcesContent":["import FormValue from './form-value';\nimport RepeatableItemValue from './repeatable-item-value';\nimport TextUtils from '../utils/text-utils';\nimport uuid from 'uuid';\n\nconst SearchSeparator = ' ';\n\nexport default class RepeatableValue extends FormValue {\n  constructor(element, items) {\n    super(element, items);\n\n    this._items = [];\n\n    if (items != null) {\n      for (let item of items) {\n        this._items.push(new RepeatableItemValue(this.element, item, this._items.length));\n      }\n    }\n  }\n\n  get isEmpty() {\n    return this._items.length === 0;\n  }\n\n  get displayValue() {\n    if (this.length === 1) {\n      return '1 Item';\n    } else {\n      return this.length + ' Items';\n    }\n  }\n\n  get searchableValue() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const values = [];\n\n    for (let item of this._items) {\n      const searchValue = item.searchableValue;\n\n      if (TextUtils.isPresent(searchValue)) {\n        values.push(searchValue);\n      }\n    }\n\n    return values.join(SearchSeparator);\n  }\n\n  get length() {\n    return this._items.length;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const items = [];\n\n    for (let item of this._items) {\n      items.push(item.toJSON());\n    }\n\n    return items;\n  }\n\n  get columnValue() {\n    return null;\n  }\n\n  get multipleValues() {\n    return null;\n  }\n\n  isEqual(value) {\n    return false;\n  }\n\n  contains(value) {\n    return false;\n  }\n\n  startsWith(value) {\n    return false;\n  }\n\n  isLessThan(value) {\n    return false;\n  }\n\n  isGreaterThan(value) {\n    return false;\n  }\n\n  mapItems(callback) {\n    return this._items.slice().map(callback);\n  }\n\n  forEachItem(callback) {\n    this.mapItems(callback);\n  }\n\n  itemIndex(item) {\n    for (let index = 0; index < this._items.length; ++index) {\n      if (item.id === this._items[index].id) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n\n  insertItem(item) {\n    const index = this.itemIndex(item);\n\n    if (index > -1) {\n      this._items[index] = item;\n    } else {\n      this._items.push(item);\n    }\n  }\n\n  createNewItem() {\n    const attributes = {\n      id: uuid.v4(),\n      form_values: {}\n    };\n\n    return new RepeatableItemValue(this.element, attributes, this._items.length);\n  }\n}\n"]}