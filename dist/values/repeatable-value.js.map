{"version":3,"sources":["../../src/values/repeatable-value.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAM,eAAe,GAAG,GAAG,CAAC;;IAEP,eAAe;YAAf,eAAe;;AAClC,WADmB,eAAe,CACtB,OAAO,EAAE,KAAK,EAAE;0BADT,eAAe;;uEAAf,eAAe,aAE1B,OAAO,EAAE,KAAK;;AAEpB,UAAK,MAAM,GAAG,EAAE,CAAC;;AAEjB,QAAI,KAAK,IAAI,IAAI,EAAE;;;;;;AACjB,6BAAiB,KAAK,8HAAE;cAAf,IAAI;;AACX,gBAAK,MAAM,CAAC,IAAI,CAAC,kCAAwB,MAAK,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;SAC/D;;;;;;;;;;;;;;;KACF;;GACF;;eAXkB,eAAe;;6BA+CzB;AACP,UAAI,IAAI,CAAC,OAAO,EAAE;AAChB,eAAO,IAAI,CAAC;OACb;;AAED,UAAM,KAAK,GAAG,EAAE,CAAC;;;;;;;AAEjB,8BAAiB,IAAI,CAAC,MAAM,mIAAE;cAArB,IAAI;;AACX,eAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;SAC3B;;;;;;;;;;;;;;;;AAED,aAAO,KAAK,CAAC;KACd;;;4BAUO,KAAK,EAAE;AACb,aAAO,KAAK,CAAC;KACd;;;6BAEQ,KAAK,EAAE;AACd,aAAO,KAAK,CAAC;KACd;;;+BAEU,KAAK,EAAE;AAChB,aAAO,KAAK,CAAC;KACd;;;+BAEU,KAAK,EAAE;AAChB,aAAO,KAAK,CAAC;KACd;;;kCAEa,KAAK,EAAE;AACnB,aAAO,KAAK,CAAC;KACd;;;6BAEQ,QAAQ,EAAE;AACjB,aAAO,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;KAC1C;;;gCAEW,QAAQ,EAAE;AACpB,UAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KACzB;;;wBAlFa;AACZ,aAAO,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC;KACjC;;;wBAEkB;AACjB,UAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AACrB,eAAO,QAAQ,CAAC;OACjB,MAAM;AACL,eAAO,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;OAC/B;KACF;;;wBAEqB;AACpB,UAAI,IAAI,CAAC,OAAO,EAAE;AAChB,eAAO,IAAI,CAAC;OACb;;AAED,UAAM,MAAM,GAAG,EAAE,CAAC;;;;;;;AAElB,8BAAiB,IAAI,CAAC,MAAM,mIAAE;cAArB,IAAI;;AACX,cAAM,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;;AAE3C,cAAI,oBAAU,SAAS,CAAC,WAAW,CAAC,EAAE;AACpC,kBAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;WAC1B;SACF;;;;;;;;;;;;;;;;AAED,aAAO,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;KACrC;;;wBAEY;AACX,aAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;KAC3B;;;wBAgBiB;AAChB,aAAO,IAAI,CAAC;KACb;;;wBAEoB;AACnB,aAAO,IAAI,CAAC;KACb;;;SAnEkB,eAAe;;;kBAAf,eAAe","file":"repeatable-value.js","sourcesContent":["import FormValue from './form-value';\nimport RepeatableItemValue from './repeatable-item-value';\nimport TextUtils from '../utils/text-utils';\n\nconst SearchSeparator = ' ';\n\nexport default class RepeatableValue extends FormValue {\n  constructor(element, items) {\n    super(element, items);\n\n    this._items = [];\n\n    if (items != null) {\n      for (let item of items) {\n        this._items.push(new RepeatableItemValue(this.element, item));\n      }\n    }\n  }\n\n  get isEmpty() {\n    return this._items.length === 0;\n  }\n\n  get displayValue() {\n    if (this.length === 1) {\n      return '1 Item';\n    } else {\n      return this.length + ' Items';\n    }\n  }\n\n  get searchableValue() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const values = [];\n\n    for (let item of this._items) {\n      const searchValue = item.searchableValue();\n\n      if (TextUtils.isPresent(searchValue)) {\n        values.push(searchValue);\n      }\n    }\n\n    return values.join(SearchSeparator);\n  }\n\n  get length() {\n    return this._items.length;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const items = [];\n\n    for (let item of this._items) {\n      items.push(item.toJSON());\n    }\n\n    return items;\n  }\n\n  get columnValue() {\n    return null;\n  }\n\n  get multipleValues() {\n    return null;\n  }\n\n  isEqual(value) {\n    return false;\n  }\n\n  contains(value) {\n    return false;\n  }\n\n  startsWith(value) {\n    return false;\n  }\n\n  isLessThan(value) {\n    return false;\n  }\n\n  isGreaterThan(value) {\n    return false;\n  }\n\n  mapItems(callback) {\n    return this._items.slice().map(callback);\n  }\n\n  forEachItem(callback) {\n    this.mapItems(callback);\n  }\n}\n"]}