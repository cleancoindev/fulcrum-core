{"version":3,"sources":["../../src/values/repeatable-value.js"],"names":[],"mappings":"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","file":"repeatable-value.js","sourcesContent":["import FormValue from './form-value';\nimport RepeatableItemValue from './repeatable-item-value';\nimport TextUtils from '../utils/text-utils';\nimport uuid from 'uuid';\n\nconst SearchSeparator = ' ';\n\nexport default class RepeatableValue extends FormValue {\n  constructor(element, items) {\n    super(element, items);\n\n    this._items = [];\n\n    if (items != null) {\n      for (const item of items) {\n        this._items.push(new RepeatableItemValue(this.element, item, this._items.length));\n      }\n    }\n  }\n\n  get isEmpty() {\n    return this._items.length === 0;\n  }\n\n  get displayValue() {\n    if (this.length === 1) {\n      return '1 Item';\n    }\n\n    return this.length + ' Items';\n  }\n\n  get searchableValue() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const values = [];\n\n    for (const item of this._items) {\n      const searchValue = item.searchableValue;\n\n      if (TextUtils.isPresent(searchValue)) {\n        values.push(searchValue);\n      }\n    }\n\n    return values.join(SearchSeparator);\n  }\n\n  get length() {\n    return this._items.length;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const items = [];\n\n    for (const item of this._items) {\n      items.push(item.toJSON());\n    }\n\n    return items;\n  }\n\n  get columnValue() {\n    return null;\n  }\n\n  get multipleValues() {\n    return null;\n  }\n\n  isEqual(value) {\n    return false;\n  }\n\n  contains(value) {\n    return false;\n  }\n\n  startsWith(value) {\n    return false;\n  }\n\n  isLessThan(value) {\n    return false;\n  }\n\n  isGreaterThan(value) {\n    return false;\n  }\n\n  mapItems(callback) {\n    return this._items.slice().map(callback);\n  }\n\n  // return a copy until it's determined that a mutable API is necessary\n  get items() {\n    return this._items.slice();\n  }\n\n  forEachItem(callback) {\n    this.mapItems(callback);\n  }\n\n  itemIndex(id) {\n    for (let index = 0; index < this._items.length; ++index) {\n      if (id === this._items[index].id) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n\n  insertItem(item) {\n    const index = this.itemIndex(item.id);\n\n    if (index > -1) {\n      this._items[index] = item;\n    } else {\n      this._items.push(item);\n    }\n  }\n\n  removeItem(id) {\n    const index = this.itemIndex(id);\n\n    if (index > -1) {\n      const item = this._items[index];\n\n      this._items.splice(index, 1);\n\n      return item;\n    }\n\n    return null;\n  }\n\n  createNewItem() {\n    const attributes = {\n      id: uuid.v4(),\n      form_values: {}\n    };\n\n    return new RepeatableItemValue(this.element, attributes, this._items.length);\n  }\n}\n"]}