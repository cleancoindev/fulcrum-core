{"version":3,"sources":["../../src/values/signature-value.js"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;;;;;;;;;;;IAEqB;;;AACnB,WADmB,cACnB,CAAY,OAAZ,EAAqB,UAArB,EAAiC;0BADd,gBACc;;iDAC/B,sBAAM,OAAN,EAAe,UAAf,GAD+B;;AAG/B,QAAI,UAAJ,EAAgB;AACd,YAAK,WAAL,GAAmB,WAAW,YAAX,CADL;AAEd,YAAK,UAAL,GAAkB,oBAAU,iBAAV,CAA4B,WAAW,SAAX,CAA9C,CAFc;KAAhB;iBAH+B;GAAjC;;AADmB,2BA8BnB,yBAAQ;AACN,SAAK,WAAL,GAAmB,IAAnB,CADM;AAEN,SAAK,UAAL,GAAkB,IAAlB,CAFM;;;AA9BW,2BA2DnB,2BAAS;AACP,QAAI,KAAK,OAAL,EAAc;AAChB,aAAO,IAAP,CADgB;KAAlB;;AAIA,WAAO;AACL,oBAAc,KAAK,WAAL;AACd,iBAAW,oBAAU,kBAAV,CAA6B,KAAK,UAAL,CAAxC;KAFF,CALO;;;AA3DU,2BAsEnB,2BAAQ,OAAO;AACb,WAAO,KAAP,CADa;;;AAtEI,2BA0EnB,6BAAS,OAAO;AACd,WAAO,KAAP,CADc;;;AA1EG,2BA8EnB,iCAAW,OAAO;AAChB,WAAO,KAAP,CADgB;;;AA9EC,2BAkFnB,iCAAW,OAAO;AAChB,WAAO,KAAP,CADgB;;;AAlFC,2BAsFnB,uCAAc,OAAO;AACnB,WAAO,KAAP,CADmB;;;eAtFF;;wBAUV;AACP,aAAO,KAAK,WAAL,CADA;;sBAIF,IAAI;AACT,WAAK,WAAL,GAAmB,EAAnB,CADS;;;;wBAIK;AACd,aAAO,KAAK,UAAL,CADO;;sBAIF,WAAW;AACvB,UAAI,EAAE,qBAAqB,IAArB,CAAF,EAA8B;AAChC,cAAM,IAAI,SAAJ,CAAc,0BAAd,CAAN,CADgC;OAAlC;;AAIA,WAAK,UAAL,GAAkB,SAAlB,CALuB;;;;wBAaX;AACZ,aAAO,KAAK,WAAL,IAAoB,IAApB,CADK;;;;wBAIK;AACjB,aAAO,KAAK,OAAL,GAAe,IAAf,GAAsB,aAAtB,CADU;;;;wBAIG;AACpB,aAAO,IAAP,CADoB;;;;wBAIT;AACX,aAAO,KAAK,OAAL,GAAe,CAAf,GAAmB,CAAnB,CADI;;;;wBAIK;AAChB,aAAO,KAAK,WAAL,CADS;;;;wBAIG;AACnB,aAAO,IAAP,CADmB;;;;SAvDF","file":"signature-value.js","sourcesContent":["import FormValue from './form-value';\nimport DateUtils from '../utils/date-utils';\n\nexport default class SignatureValue extends FormValue {\n  constructor(element, attributes) {\n    super(element, attributes);\n\n    if (attributes) {\n      this._identifier = attributes.signature_id;\n      this._timestamp = DateUtils.parseISOTimestamp(attributes.timestamp);\n    }\n  }\n\n  get id() {\n    return this._identifier;\n  }\n\n  set id(id) {\n    this._identifier = id;\n  }\n\n  get timestamp() {\n    return this._timestamp;\n  }\n\n  set timestamp(timestamp) {\n    if (!(timestamp instanceof Date)) {\n      throw new TypeError('timestamp must be a Date');\n    }\n\n    this._timestamp = timestamp;\n  }\n\n  clear() {\n    this._identifier = null;\n    this._timestamp = null;\n  }\n\n  get isEmpty() {\n    return this._identifier == null;\n  }\n\n  get displayValue() {\n    return this.isEmpty ? null : '1 Signature';\n  }\n\n  get searchableValue() {\n    return null;\n  }\n\n  get length() {\n    return this.isEmpty ? 0 : 1;\n  }\n\n  get columnValue() {\n    return this._identifier;\n  }\n\n  get multipleValues() {\n    return null;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    return {\n      signature_id: this._identifier,\n      timestamp: DateUtils.formatISOTimestamp(this._timestamp)\n    };\n  }\n\n  isEqual(value) {\n    return false;\n  }\n\n  contains(value) {\n    return false;\n  }\n\n  startsWith(value) {\n    return false;\n  }\n\n  isLessThan(value) {\n    return false;\n  }\n\n  isGreaterThan(value) {\n    return false;\n  }\n}\n"]}