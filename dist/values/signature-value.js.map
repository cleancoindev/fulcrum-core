{"version":3,"sources":["../../src/values/signature-value.js"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;;;;;;;;;;;IAEqB,c;;;AACnB,0BAAY,OAAZ,EAAqB,UAArB,EAAiC;AAAA;;AAAA,iDAC/B,sBAAM,OAAN,EAAe,UAAf,CAD+B;;AAG/B,QAAI,UAAJ,EAAgB;AACd,YAAK,WAAL,GAAmB,WAAW,YAA9B;AACA,YAAK,UAAL,GAAkB,oBAAU,iBAAV,CAA4B,WAAW,SAAvC,CAAlB;AACD;AAN8B;AAOhC;;2BAsBD,K,oBAAQ;AACN,SAAK,WAAL,GAAmB,IAAnB;AACA,SAAK,UAAL,GAAkB,IAAlB;AACD,G;;2BA0BD,M,qBAAS;AACP,QAAI,KAAK,OAAT,EAAkB;AAChB,aAAO,IAAP;AACD;;AAED,WAAO;AACL,oBAAc,KAAK,WADd;AAEL,iBAAW,oBAAU,kBAAV,CAA6B,KAAK,UAAlC;AAFN,KAAP;AAID,G;;2BAED,O,oBAAQ,K,EAAO;AACb,WAAO,KAAP;AACD,G;;2BAED,Q,qBAAS,K,EAAO;AACd,WAAO,KAAP;AACD,G;;2BAED,U,uBAAW,K,EAAO;AAChB,WAAO,KAAP;AACD,G;;2BAED,U,uBAAW,K,EAAO;AAChB,WAAO,KAAP;AACD,G;;2BAED,a,0BAAc,K,EAAO;AACnB,WAAO,KAAP;AACD,G;;;;wBA9EQ;AACP,aAAO,KAAK,WAAZ;AACD,K;sBAEM,E,EAAI;AACT,WAAK,WAAL,GAAmB,EAAnB;AACD;;;wBAEe;AACd,aAAO,KAAK,UAAZ;AACD,K;sBAEa,S,EAAW;AACvB,UAAI,EAAE,qBAAqB,IAAvB,CAAJ,EAAkC;AAChC,cAAM,IAAI,SAAJ,CAAc,0BAAd,CAAN;AACD;;AAED,WAAK,UAAL,GAAkB,SAAlB;AACD;;;wBAOa;AACZ,aAAO,KAAK,WAAL,IAAoB,IAA3B;AACD;;;wBAEkB;AACjB,aAAO,KAAK,OAAL,GAAe,IAAf,GAAsB,aAA7B;AACD;;;wBAEqB;AACpB,aAAO,IAAP;AACD;;;wBAEY;AACX,aAAO,KAAK,OAAL,GAAe,CAAf,GAAmB,CAA1B;AACD;;;wBAEiB;AAChB,aAAO,KAAK,WAAZ;AACD;;;wBAEoB;AACnB,aAAO,IAAP;AACD;;;;;;kBAzDkB,c","file":"signature-value.js","sourcesContent":["import FormValue from './form-value';\nimport DateUtils from '../utils/date-utils';\n\nexport default class SignatureValue extends FormValue {\n  constructor(element, attributes) {\n    super(element, attributes);\n\n    if (attributes) {\n      this._identifier = attributes.signature_id;\n      this._timestamp = DateUtils.parseISOTimestamp(attributes.timestamp);\n    }\n  }\n\n  get id() {\n    return this._identifier;\n  }\n\n  set id(id) {\n    this._identifier = id;\n  }\n\n  get timestamp() {\n    return this._timestamp;\n  }\n\n  set timestamp(timestamp) {\n    if (!(timestamp instanceof Date)) {\n      throw new TypeError('timestamp must be a Date');\n    }\n\n    this._timestamp = timestamp;\n  }\n\n  clear() {\n    this._identifier = null;\n    this._timestamp = null;\n  }\n\n  get isEmpty() {\n    return this._identifier == null;\n  }\n\n  get displayValue() {\n    return this.isEmpty ? null : '1 Signature';\n  }\n\n  get searchableValue() {\n    return null;\n  }\n\n  get length() {\n    return this.isEmpty ? 0 : 1;\n  }\n\n  get columnValue() {\n    return this._identifier;\n  }\n\n  get multipleValues() {\n    return null;\n  }\n\n  toJSON() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    return {\n      signature_id: this._identifier,\n      timestamp: DateUtils.formatISOTimestamp(this._timestamp)\n    };\n  }\n\n  isEqual(value) {\n    return false;\n  }\n\n  contains(value) {\n    return false;\n  }\n\n  startsWith(value) {\n    return false;\n  }\n\n  isLessThan(value) {\n    return false;\n  }\n\n  isGreaterThan(value) {\n    return false;\n  }\n}\n"]}