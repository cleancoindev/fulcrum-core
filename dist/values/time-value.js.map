{"version":3,"sources":["../../src/values/time-value.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIqB;;;;;;;;;;;+BAmBR,aAAa;AACtB,UAAI,KAAK,OAAL,EAAc;AAChB,eAAO,oBAAU,OAAV,CAAkB,WAAlB,CAAP,CADgB;OAAlB;;AAIA,UAAM,WAAW,KAAK,SAAL,EAAX,CALgB;AAMtB,UAAM,WAAW,oBAAU,SAAV,CAAoB,WAApB,CAAX,CANgB;;AAQtB,UAAI,YAAY,IAAZ,IAAoB,YAAY,IAAZ,EAAkB;AACxC,eAAO,KAAP,CADwC;OAA1C;;AAIA,aAAO,SAAS,OAAT,KAAqB,SAAS,OAAT,EAArB,CAZe;;;;kCAeV,aAAa;AACzB,UAAI,KAAK,OAAL,EAAc;AAChB,eAAO,oBAAU,OAAV,CAAkB,WAAlB,CAAP,CADgB;OAAlB;;AAIA,UAAM,WAAW,KAAK,SAAL,EAAX,CALmB;AAMzB,UAAM,WAAW,oBAAU,SAAV,CAAoB,WAApB,CAAX,CANmB;;AAQzB,UAAI,YAAY,IAAZ,IAAoB,YAAY,IAAZ,EAAkB;AACxC,eAAO,KAAP,CADwC;OAA1C;;AAIA,aAAO,SAAS,OAAT,KAAqB,SAAS,OAAT,EAArB,CAZkB;;;;gCAef;AACV,aAAO,oBAAU,SAAV,CAAoB,KAAK,SAAL,CAA3B,CADU;;;;wBAhDO;AACjB,UAAI,KAAK,OAAL,EAAc;AAChB,eAAO,IAAP,CADgB;OAAlB;;AAIA,UAAM,OAAO,KAAK,SAAL,EAAP,CALW;;AAOjB,UAAI,QAAQ,IAAR,EAAc;AAChB,eAAO,IAAP,CADgB;OAAlB;;AAIA,aAAO,IAAP,CAXiB;;;;wBAcG;AACpB,aAAO,KAAK,SAAL,CADa;;;;SAfH","file":"time-value.js","sourcesContent":["import TextualValue from './textual-value';\nimport DateUtils from '../utils/date-utils';\nimport TextUtils from '../utils/text-utils';\n\nexport default class TimeValue extends TextualValue {\n  get displayValue() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    const time = this.timeValue();\n\n    if (time == null) {\n      return null;\n    }\n\n    return time;\n  }\n\n  get searchableValue() {\n    return this.textValue;\n  }\n\n  isLessThan(stringValue) {\n    if (this.isEmpty) {\n      return TextUtils.isEmpty(stringValue);\n    }\n\n    const thisTime = this.timeValue();\n    const thatTime = DateUtils.parseTime(stringValue);\n\n    if (thisTime == null || thatTime == null) {\n      return false;\n    }\n\n    return thisTime.getTime() < thatTime.getTime();\n  }\n\n  isGreaterThan(stringValue) {\n    if (this.isEmpty) {\n      return TextUtils.isEmpty(stringValue);\n    }\n\n    const thisTime = this.timeValue();\n    const thatTime = DateUtils.parseTime(stringValue);\n\n    if (thisTime == null || thatTime == null) {\n      return false;\n    }\n\n    return thisTime.getTime() > thatTime.getTime();\n  }\n\n  timeValue() {\n    return DateUtils.parseTime(this.textValue);\n  }\n}\n"]}