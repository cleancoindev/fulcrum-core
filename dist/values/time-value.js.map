{"version":3,"sources":["../../src/values/time-value.js"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqB,S;;;;;;;;;sBASnB,U,uBAAW,W,EAAa;AACtB,QAAI,KAAK,OAAT,EAAkB;AAChB,aAAO,oBAAU,OAAV,CAAkB,WAAlB,CAAP;AACD;;AAED,QAAM,WAAW,KAAK,SAAtB;AACA,QAAM,WAAW,oBAAU,SAAV,CAAoB,WAApB,CAAjB;;AAEA,QAAI,YAAY,IAAZ,IAAoB,YAAY,IAApC,EAA0C;AACxC,aAAO,KAAP;AACD;;AAED,WAAO,WAAW,QAAlB;AACD,G;;sBAED,a,0BAAc,W,EAAa;AACzB,QAAI,KAAK,OAAT,EAAkB;AAChB,aAAO,oBAAU,OAAV,CAAkB,WAAlB,CAAP;AACD;;AAED,QAAM,WAAW,KAAK,SAAtB;AACA,QAAM,WAAW,oBAAU,SAAV,CAAoB,WAApB,CAAjB;;AAEA,QAAI,YAAY,IAAZ,IAAoB,YAAY,IAApC,EAA0C;AACxC,aAAO,KAAP;AACD;;AAED,WAAO,WAAW,QAAlB;AACD,G;;;;wBApCkB;AACjB,aAAO,KAAK,SAAZ;AACD;;;wBAEqB;AACpB,aAAO,KAAK,SAAZ;AACD;;;wBAgCa;AACZ,UAAI,KAAK,OAAT,EAAkB;AAChB,eAAO,IAAP;AACD;;AAED,aAAO,oBAAU,WAAV,CAAsB,KAAK,SAA3B,CAAP;AACD;;;wBAEe;AACd,UAAI,KAAK,OAAT,EAAkB;AAChB,eAAO,IAAP;AACD;;AAED,aAAO,oBAAU,SAAV,CAAoB,KAAK,SAAzB,CAAP;AACD;;;;;;kBArDkB,S","file":"time-value.js","sourcesContent":["import TextualValue from './textual-value';\nimport DateUtils from '../utils/date-utils';\nimport TextUtils from '../utils/text-utils';\n\nexport default class TimeValue extends TextualValue {\n  get displayValue() {\n    return this.textValue;\n  }\n\n  get searchableValue() {\n    return this.textValue;\n  }\n\n  isLessThan(stringValue) {\n    if (this.isEmpty) {\n      return TextUtils.isEmpty(stringValue);\n    }\n\n    const thisTime = this.timeValue;\n    const thatTime = DateUtils.parseTime(stringValue);\n\n    if (thisTime == null || thatTime == null) {\n      return false;\n    }\n\n    return thisTime < thatTime;\n  }\n\n  isGreaterThan(stringValue) {\n    if (this.isEmpty) {\n      return TextUtils.isEmpty(stringValue);\n    }\n\n    const thisTime = this.timeValue;\n    const thatTime = DateUtils.parseTime(stringValue);\n\n    if (thisTime == null || thatTime == null) {\n      return false;\n    }\n\n    return thisTime > thatTime;\n  }\n\n  get isValid() {\n    if (this.isEmpty) {\n      return true;\n    }\n\n    return DateUtils.isValidTime(this.textValue);\n  }\n\n  get timeValue() {\n    if (this.isEmpty) {\n      return null;\n    }\n\n    return DateUtils.parseTime(this.textValue);\n  }\n}\n"]}